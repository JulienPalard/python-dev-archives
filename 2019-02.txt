From emmanuelarias30 at gmail.com  Fri Feb  1 06:57:10 2019
From: emmanuelarias30 at gmail.com (eamanu15)
Date: Fri, 1 Feb 2019 08:57:10 -0300
Subject: [Python-Dev] How to update namedtuple asdict() to use dict
 instead of OrderedDict
In-Reply-To: <mailman.7678.1548891690.4818.python-dev@python.org>
References: <mailman.7678.1548891690.4818.python-dev@python.org>
Message-ID: <CACttXDOnRQMpNPSDTNCMaVvAeyKoNWgUx68ybKGiAVyqOYXVZg@mail.gmail.com>

Hi!


> Option 4) Just make the change directly in 3.8,  s/OrderedDict/dict/, and
> be done will it.  This gives users the benefits right away and doesn't
> annoy them with warnings that they likely don't care about.   There is some
> precedent for this.  To make namedtuple class creation faster, the
> *verbose* option was dropped without any deprecation period.  It looks like
> no one missed that feature at all, but they did get the immediate benefit
> of faster import times.  In the case of using regular dicts in named
> tuples, people will get immediate and significant space savings as well as
> a speed benefit.
>

 +1 for option 4

Regards!
eamanu
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mail.python.org/pipermail/python-dev/attachments/20190201/3fd10274/attachment.html>

From status at bugs.python.org  Fri Feb  1 13:07:59 2019
From: status at bugs.python.org (Python tracker)
Date: Fri, 01 Feb 2019 18:07:59 +0000
Subject: [Python-Dev] Summary of Python tracker Issues
Message-ID: <20190201180759.1.9D569A7627081917@roundup.psfhosted.org>


ACTIVITY SUMMARY (2019-01-25 - 2019-02-01)
Python tracker at https://bugs.python.org/

To view or respond to any of the issues listed below, click on the issue.
Do NOT respond to this message.

Issues counts and deltas:
  open    6985 (+32)
  closed 40649 (+23)
  total  47634 (+55)

Open issues with patches: 2775 


Issues opened (45)
==================

#25592: distutils docs: data_files always uses sys.prefix
https://bugs.python.org/issue25592  reopened by pitrou

#30670: pprint for dict in sorted order or insert order?
https://bugs.python.org/issue30670  reopened by josephsmeng

#35829: datetime: parse "Z" timezone suffix in fromisoformat()
https://bugs.python.org/issue35829  opened by rdb

#35830: building multiple (binary) packages from a single project
https://bugs.python.org/issue35830  opened by stefan

#35832: Installation error
https://bugs.python.org/issue35832  opened by Stefano Bonalumi

#35833: IDLE: revise doc for control chars sent to Shell
https://bugs.python.org/issue35833  opened by Dude Roast

#35834: get_type_hints exposes an instance of ForwardRef (internal cla
https://bugs.python.org/issue35834  opened by Lincoln Quirk

#35838: ConfigParser calls optionxform twice when assigning dict
https://bugs.python.org/issue35838  opened by Phil Kang

#35839: Suggestion: Ignore sys.modules entries with no __spec__ attrib
https://bugs.python.org/issue35839  opened by ncoghlan

#35840: Control flow inconsistency on closed asyncio stream
https://bugs.python.org/issue35840  opened by schlamar

#35841: Datetime strftime() does not return correct week numbers for 2
https://bugs.python.org/issue35841  opened by tr12

#35843: importlib.util docs for namespace packages innaccurate
https://bugs.python.org/issue35843  opened by Anthony Sottile

#35844: Calling `Multiprocessing.Queue.close()` too quickly causes int
https://bugs.python.org/issue35844  opened by charmonium

#35845: Can't read a F-contiguous memoryview in physical order
https://bugs.python.org/issue35845  opened by pitrou

#35846: Incomplete documentation for re.sub
https://bugs.python.org/issue35846  opened by pbugnion

#35847: RISC-V needs CTYPES_PASS_BY_REF_HACK
https://bugs.python.org/issue35847  opened by schwab

#35848: readinto is not a method on io.TextIOBase
https://bugs.python.org/issue35848  opened by steverpalmer

#35849: Added thousands separators to Lib/pstats.py final report
https://bugs.python.org/issue35849  opened by addons_zz

#35851: Make search result in online docs keep their position when sea
https://bugs.python.org/issue35851  opened by roelschroeven

#35852: Fixed tests regenerating using CRLF when running it on Windows
https://bugs.python.org/issue35852  opened by addons_zz

#35854: EnvBuilder and venv symlinks do not work on Windows on 3.7.2
https://bugs.python.org/issue35854  opened by steve.dower

#35855: IDLE squeezer: improve unsqueezing and autosqueeze default
https://bugs.python.org/issue35855  opened by terry.reedy

#35856: bundled pip syntaxwarning
https://bugs.python.org/issue35856  opened by Dima.Tisnek

#35857: Stacktrace shows lines from updated file on disk, not code act
https://bugs.python.org/issue35857  opened by Steve Pryde

#35859: Capture behavior depends on the order of an alternation
https://bugs.python.org/issue35859  opened by davisjam

#35860: ProcessPoolExecutor subprocesses crash & break pool when raisi
https://bugs.python.org/issue35860  opened by underyx

#35861: test_named_expressions raises SyntaxWarning
https://bugs.python.org/issue35861  opened by xtreak

#35862: Change the environment for a new process
https://bugs.python.org/issue35862  opened by r-or

#35866: concurrent.futures deadlock
https://bugs.python.org/issue35866  opened by jwilk

#35867: NameError is not caught at Task execution
https://bugs.python.org/issue35867  opened by Sampsa Riikonen

#35868: Support ALL_PROXY environment variable in urllib
https://bugs.python.org/issue35868  opened by Oleh Khoma

#35869: io.BufferReader.read() returns None
https://bugs.python.org/issue35869  opened by steverpalmer

#35870: readline() specification is unclear
https://bugs.python.org/issue35870  opened by porton

#35871: Pdb NameError in generator param and list comprehension
https://bugs.python.org/issue35871  opened by jayanth

#35872: Creating venv from venv no longer works in 3.7.2
https://bugs.python.org/issue35872  opened by schlamar

#35873: Controlling venv from venv no longer works in 3.7.2
https://bugs.python.org/issue35873  opened by schlamar

#35874: Clarify that the (...) convertor to PyArg_ParseTuple... accept
https://bugs.python.org/issue35874  opened by Antony.Lee

#35875: Crash - algos.cp36-win_amd64.pyd  join.cp36-win_amd64.pyd
https://bugs.python.org/issue35875  opened by AxelArnoldBangert

#35876: test_start_new_session for posix_spawnp fails
https://bugs.python.org/issue35876  opened by pablogsal

#35877: parenthesis is mandatory for named expressions in while statem
https://bugs.python.org/issue35877  opened by xtreak

#35878: ast.c: end_col_offset may be used uninitialized in this functi
https://bugs.python.org/issue35878  opened by vstinner

#35879: test_type_comments leaks references
https://bugs.python.org/issue35879  opened by vstinner

#35880: math.sin has no backward error; this isn't documented
https://bugs.python.org/issue35880  opened by jneb

#35882: distutils fails with UnicodeEncodeError with strange filename 
https://bugs.python.org/issue35882  opened by scjody

#35883: Change invalid unicode characters to replacement characters in
https://bugs.python.org/issue35883  opened by Neui



Most recent 15 issues with no replies (15)
==========================================

#35882: distutils fails with UnicodeEncodeError with strange filename 
https://bugs.python.org/issue35882

#35878: ast.c: end_col_offset may be used uninitialized in this functi
https://bugs.python.org/issue35878

#35874: Clarify that the (...) convertor to PyArg_ParseTuple... accept
https://bugs.python.org/issue35874

#35873: Controlling venv from venv no longer works in 3.7.2
https://bugs.python.org/issue35873

#35867: NameError is not caught at Task execution
https://bugs.python.org/issue35867

#35860: ProcessPoolExecutor subprocesses crash & break pool when raisi
https://bugs.python.org/issue35860

#35852: Fixed tests regenerating using CRLF when running it on Windows
https://bugs.python.org/issue35852

#35844: Calling `Multiprocessing.Queue.close()` too quickly causes int
https://bugs.python.org/issue35844

#35827: C API dictionary views type checkers are not documented
https://bugs.python.org/issue35827

#35813: shared memory construct to avoid need for serialization betwee
https://bugs.python.org/issue35813

#35812: Don't log an exception from the main coroutine in asyncio.run(
https://bugs.python.org/issue35812

#35807: Update bundled pip to 19.0
https://bugs.python.org/issue35807

#35803: Test and document that `dir=...` in tempfile may be PathLike
https://bugs.python.org/issue35803

#35801: venv in 3.7 references python3 executable
https://bugs.python.org/issue35801

#35792: Specifying AbstractEventLoop.run_in_executor as a coroutine co
https://bugs.python.org/issue35792



Most recent 15 issues waiting for review (15)
=============================================

#35877: parenthesis is mandatory for named expressions in while statem
https://bugs.python.org/issue35877

#35876: test_start_new_session for posix_spawnp fails
https://bugs.python.org/issue35876

#35862: Change the environment for a new process
https://bugs.python.org/issue35862

#35861: test_named_expressions raises SyntaxWarning
https://bugs.python.org/issue35861

#35854: EnvBuilder and venv symlinks do not work on Windows on 3.7.2
https://bugs.python.org/issue35854

#35852: Fixed tests regenerating using CRLF when running it on Windows
https://bugs.python.org/issue35852

#35849: Added thousands separators to Lib/pstats.py final report
https://bugs.python.org/issue35849

#35847: RISC-V needs CTYPES_PASS_BY_REF_HACK
https://bugs.python.org/issue35847

#35843: importlib.util docs for namespace packages innaccurate
https://bugs.python.org/issue35843

#35826: Typo in example for async with statement with condition
https://bugs.python.org/issue35826

#35824: http.cookies._CookiePattern modifying regular expressions
https://bugs.python.org/issue35824

#35823: Use vfork() in subprocess on Linux
https://bugs.python.org/issue35823

#35813: shared memory construct to avoid need for serialization betwee
https://bugs.python.org/issue35813

#35810: Object Initialization Bug with Heap-allocated Types
https://bugs.python.org/issue35810

#35803: Test and document that `dir=...` in tempfile may be PathLike
https://bugs.python.org/issue35803



Top 10 most discussed issues (10)
=================================

#35431: Add a function for computing binomial coefficients to the math
https://bugs.python.org/issue35431  12 msgs

#25592: distutils docs: data_files always uses sys.prefix
https://bugs.python.org/issue25592  10 msgs

#35857: Stacktrace shows lines from updated file on disk, not code act
https://bugs.python.org/issue35857  10 msgs

#35854: EnvBuilder and venv symlinks do not work on Windows on 3.7.2
https://bugs.python.org/issue35854   7 msgs

#35848: readinto is not a method on io.TextIOBase
https://bugs.python.org/issue35848   6 msgs

#35859: Capture behavior depends on the order of an alternation
https://bugs.python.org/issue35859   6 msgs

#35823: Use vfork() in subprocess on Linux
https://bugs.python.org/issue35823   5 msgs

#35829: datetime: parse "Z" timezone suffix in fromisoformat()
https://bugs.python.org/issue35829   5 msgs

#30670: pprint for dict in sorted order or insert order?
https://bugs.python.org/issue30670   4 msgs

#32834: test_gdb fails with Posix locale in 3.7
https://bugs.python.org/issue32834   4 msgs



Issues closed (22)
==================

#2212: Cookie.BaseCookie has ambiguous unicode handling
https://bugs.python.org/issue2212  closed by martin.panter

#29235: Allow profile/cProfile to be used as context managers
https://bugs.python.org/issue29235  closed by cheryl.sabella

#34003: csv.DictReader can return basic dict instead of OrderedDict
https://bugs.python.org/issue34003  closed by rhettinger

#35196: IDLE text squeezer is too aggressive and is slow
https://bugs.python.org/issue35196  closed by terry.reedy

#35717: enum.Enum error on sys._getframe(2)
https://bugs.python.org/issue35717  closed by vstinner

#35769: IDLE: change new file name from  ''Untitled" to "untitled"
https://bugs.python.org/issue35769  closed by cheryl.sabella

#35780: Recheck logic in the C version of the lru_cache()
https://bugs.python.org/issue35780  closed by rhettinger

#35797: concurrent.futures.ProcessPoolExecutor does not work in venv o
https://bugs.python.org/issue35797  closed by steve.dower

#35811: py.exe should unset the __PYVENV_LAUNCHER__ environment variab
https://bugs.python.org/issue35811  closed by steve.dower

#35825: Py_UNICODE_SIZE=4 fails to link on Windows
https://bugs.python.org/issue35825  closed by inada.naoki

#35831: Format Spec example says limited to 3.1+ but works in 2.7
https://bugs.python.org/issue35831  closed by fdrake

#35835: There is no mention of breakpoint() in the pdb documentation
https://bugs.python.org/issue35835  closed by Mariatta

#35836: ZeroDivisionError class should have a __name__ attr
https://bugs.python.org/issue35836  closed by steven.daprano

#35837: smtpd PureProxy breaks on mail_options keyword argument
https://bugs.python.org/issue35837  closed by r.david.murray

#35842: A potential bug about use of uninitialised variable
https://bugs.python.org/issue35842  closed by josh.r

#35850: CKAN installation went on script error
https://bugs.python.org/issue35850  closed by christian.heimes

#35853: Extend the functools module with more higher order function co
https://bugs.python.org/issue35853  closed by rhettinger

#35858: Consider adding the option of running shell/console commands i
https://bugs.python.org/issue35858  closed by jcrmatos

#35863: email.headers wraps headers badly
https://bugs.python.org/issue35863  closed by r.david.murray

#35864: Replace OrderedDict with regular dict in namedtuple's _asdict(
https://bugs.python.org/issue35864  closed by rhettinger

#35865: configparser document refers about random dict order
https://bugs.python.org/issue35865  closed by inada.naoki

#35881: test_type_comments leaks references and memory blocks
https://bugs.python.org/issue35881  closed by vstinner

From solipsis at pitrou.net  Sun Feb  3 10:19:25 2019
From: solipsis at pitrou.net (Antoine Pitrou)
Date: Sun, 3 Feb 2019 16:19:25 +0100
Subject: [Python-Dev] Difference between Include/internal and
 Include/cpython ?
Message-ID: <20190203161925.0115cf68@fsol>


Hello,

Can someone explain why we have two separate directories
Include/internal and Include/cpython?  What is the rule for declaring an
API inside one or another?

At first sight, it seems to me we're having gratuitous complication
here.  For example, I notice that PyFloat_Fini() is declared in
Include/cpython/pylifecycle.h but PyLong_Fini() is declared in
Include/internal/pycore_pylifecycle.h?

(and why the additional "pycore_XXX.h" naming convention for some of
those files?)

Regards

Antoine.



From ammar at ammaraskar.com  Sun Feb  3 11:10:16 2019
From: ammar at ammaraskar.com (Ammar Askar)
Date: Sun, 3 Feb 2019 11:10:16 -0500
Subject: [Python-Dev] Difference between Include/internal and
 Include/cpython ?
In-Reply-To: <20190203161925.0115cf68@fsol>
References: <20190203161925.0115cf68@fsol>
Message-ID: <CAG74Ji=7_uj67Wpybd1M0OM78R=u-KY22sxHQmSrs0OqEydAmg@mail.gmail.com>

This is the discussion where it was named:
https://discuss.python.org/t/poll-what-is-your-favorite-name-for-the-new-include-subdirectory/477?u=ammaraskar
and the bug explaining the motivation: https://bugs.python.org/issue35134

>(and why the additional "pycore_XXX.h" naming convention for some ofthose files?)

"* Include/internal/pycore_*.h is the "internal" API"

On Sun, Feb 3, 2019 at 10:20 AM Antoine Pitrou <solipsis at pitrou.net> wrote:
>
>
> Hello,
>
> Can someone explain why we have two separate directories
> Include/internal and Include/cpython?  What is the rule for declaring an
> API inside one or another?
>
> At first sight, it seems to me we're having gratuitous complication
> here.  For example, I notice that PyFloat_Fini() is declared in
> Include/cpython/pylifecycle.h but PyLong_Fini() is declared in
> Include/internal/pycore_pylifecycle.h?
>
> (and why the additional "pycore_XXX.h" naming convention for some of
> those files?)
>
> Regards
>
> Antoine.
>
>
> _______________________________________________
> Python-Dev mailing list
> Python-Dev at python.org
> https://mail.python.org/mailman/listinfo/python-dev
> Unsubscribe: https://mail.python.org/mailman/options/python-dev/ammar%40ammaraskar.com

From solipsis at pitrou.net  Sun Feb  3 11:43:28 2019
From: solipsis at pitrou.net (Antoine Pitrou)
Date: Sun, 3 Feb 2019 17:43:28 +0100
Subject: [Python-Dev] Difference between Include/internal and
 Include/cpython ?
In-Reply-To: <CAG74Ji=7_uj67Wpybd1M0OM78R=u-KY22sxHQmSrs0OqEydAmg@mail.gmail.com>
References: <20190203161925.0115cf68@fsol>
 <CAG74Ji=7_uj67Wpybd1M0OM78R=u-KY22sxHQmSrs0OqEydAmg@mail.gmail.com>
Message-ID: <20190203174328.482c8175@fsol>


But in practice the distinction doesn't seem very conclusive.  Some
internal APIs end up in either of those two directories without any
clear reason why.

Regards

Antoine.


On Sun, 3 Feb 2019 11:10:16 -0500
Ammar Askar <ammar at ammaraskar.com> wrote:
> This is the discussion where it was named:
> https://discuss.python.org/t/poll-what-is-your-favorite-name-for-the-new-include-subdirectory/477?u=ammaraskar
> and the bug explaining the motivation: https://bugs.python.org/issue35134
> 
> >(and why the additional "pycore_XXX.h" naming convention for some ofthose files?)  
> 
> "* Include/internal/pycore_*.h is the "internal" API"
> 
> On Sun, Feb 3, 2019 at 10:20 AM Antoine Pitrou <solipsis at pitrou.net> wrote:
> >
> >
> > Hello,
> >
> > Can someone explain why we have two separate directories
> > Include/internal and Include/cpython?  What is the rule for declaring an
> > API inside one or another?
> >
> > At first sight, it seems to me we're having gratuitous complication
> > here.  For example, I notice that PyFloat_Fini() is declared in
> > Include/cpython/pylifecycle.h but PyLong_Fini() is declared in
> > Include/internal/pycore_pylifecycle.h?
> >
> > (and why the additional "pycore_XXX.h" naming convention for some of
> > those files?)
> >
> > Regards
> >
> > Antoine.
> >
> >
> > _______________________________________________
> > Python-Dev mailing list
> > Python-Dev at python.org
> > https://mail.python.org/mailman/listinfo/python-dev
> > Unsubscribe: https://mail.python.org/mailman/options/python-dev/ammar%40ammaraskar.com  


From solipsis at pitrou.net  Sun Feb  3 16:03:40 2019
From: solipsis at pitrou.net (Antoine Pitrou)
Date: Sun, 3 Feb 2019 22:03:40 +0100
Subject: [Python-Dev] Asking for reversion
Message-ID: <20190203220340.3158b236@fsol>


Hello,

I'd like to ask for the reversion of the changes done in
https://github.com/python/cpython/pull/11664

The reason is simple: the PR isn't complete, it lacks docs and tests.
It also didn't pass any review (this was pointed by Ronald), even
though it adds 1300 lines of code.  No programmer is perfect, so it's
statistically likely that the PR is defective.

With git, forks and branches, we definitely don't need to commit
unfinished PRs to the main repo.  It's perfectly fine to maintain
some non-trivial piece of work in a separate fork.  People do it on a
regular basis (for example I have currently two such
long-lived branches: one for PEP 556 and one for PEP 574).


Also, this is not the first time this happened.  Another
multiprocessing PR was merged some years ago without any docs or tests:
https://bugs.python.org/issue28053

Today that work /still/ lacks docs or tests, and there is a suspicion
that it doesn't work as intended (see issue comments).  It's probably
too late to revert it, but it's definitely a slippery slope.

Regards

Antoine.



From vstinner at redhat.com  Sun Feb  3 17:22:25 2019
From: vstinner at redhat.com (Victor Stinner)
Date: Sun, 3 Feb 2019 23:22:25 +0100
Subject: [Python-Dev] Difference between Include/internal and
 Include/cpython ?
In-Reply-To: <20190203161925.0115cf68@fsol>
References: <20190203161925.0115cf68@fsol>
Message-ID: <CA+3bQGFFd2B2jyEe4ZHSLDiBpmHntPjhT8j7kwfjmZX3Za9+Cw@mail.gmail.com>

Hi Antoine,

The rules to decide what goes where have been discussed in the issues which
created Include/cpython/ and the issue moving more headers to
Include/internal/.

In short, internal/ should not be used outside CPython codebase. In Python
3.7, these headers were even not installed. I chose to install them because
I moved more headers into internal/ which is a backward incompatible
change. You should not use these headers outside CPython code base, but the
typical use case to use them are debug tools: debugger, tracer and
profiler. The internal/ subdir is not included in Python default search
path when you use python-config --cflags for example. It is a deliberate
choice that these headers are not easily accessible.

There file names are prefixed by pycore_ for practical reasons: if 2 header
files have the same name in internal/ and Include/, the C preprocessor can
pick the wrong one. See the internal/ issue which gives a concrete example
(but in Python 3.7).

cpython/ is just a practical separation to force developers to decide if a
new API is part of the stable API or not. Previously, too many APIs have
been added to the stable API by mistake (not on purpose).

About inconsistencies, I invite you to open issues. I worked by small
steps. I tried to not move too much code from "one API" (stable, cpython,
internal) to another. IMHO all _Init() and _Fini() APIs must be internal.
For historical reasons, they are even part of the public API (!) which is a
mistake. I don't see the point of calling them explicitly.

I tried to take notes at https://pythoncapi.readthedocs.io/ for the
rationale, examples and track progess, but I didn't update this site with
the work I did last 6 months.

I hope that it makes more sense to you now?

Victor


Le dimanche 3 f?vrier 2019, Antoine Pitrou <solipsis at pitrou.net> a ?crit :
>
> Hello,
>
> Can someone explain why we have two separate directories
> Include/internal and Include/cpython?  What is the rule for declaring an
> API inside one or another?
>
> At first sight, it seems to me we're having gratuitous complication
> here.  For example, I notice that PyFloat_Fini() is declared in
> Include/cpython/pylifecycle.h but PyLong_Fini() is declared in
> Include/internal/pycore_pylifecycle.h?
>
> (and why the additional "pycore_XXX.h" naming convention for some of
> those files?)
>
> Regards
>
> Antoine.
>
>
> _______________________________________________
> Python-Dev mailing list
> Python-Dev at python.org
> https://mail.python.org/mailman/listinfo/python-dev
> Unsubscribe:
https://mail.python.org/mailman/options/python-dev/vstinner%40redhat.com
>

-- 
Night gathers, and now my watch begins. It shall not end until my death.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mail.python.org/pipermail/python-dev/attachments/20190203/1a603779/attachment.html>

From barry at python.org  Sun Feb  3 17:25:00 2019
From: barry at python.org (Barry Warsaw)
Date: Sun, 3 Feb 2019 14:25:00 -0800
Subject: [Python-Dev] Asking for reversion
In-Reply-To: <20190203220340.3158b236@fsol>
References: <20190203220340.3158b236@fsol>
Message-ID: <714898D1-F99E-46CE-BE12-AC885629E49F@python.org>

On Feb 3, 2019, at 13:03, Antoine Pitrou <solipsis at pitrou.net> wrote:
> 
> I'd like to ask for the reversion of the changes done in
> https://github.com/python/cpython/pull/11664
> 
> The reason is simple: the PR isn't complete, it lacks docs and tests.
> It also didn't pass any review (this was pointed by Ronald), even
> though it adds 1300 lines of code.  No programmer is perfect, so it's
> statistically likely that the PR is defective.

I concur.  I actually think CI shouldn?t even pass without sufficiently covering tests and docs (sans a ?trivial? or other short circuiting label), but that might be unpopular.

-Barry

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 833 bytes
Desc: Message signed with OpenPGP
URL: <http://mail.python.org/pipermail/python-dev/attachments/20190203/fac72696/attachment.sig>

From solipsis at pitrou.net  Sun Feb  3 17:40:59 2019
From: solipsis at pitrou.net (Antoine Pitrou)
Date: Sun, 3 Feb 2019 23:40:59 +0100
Subject: [Python-Dev] Difference between Include/internal and
 Include/cpython ?
In-Reply-To: <CA+3bQGFFd2B2jyEe4ZHSLDiBpmHntPjhT8j7kwfjmZX3Za9+Cw@mail.gmail.com>
References: <20190203161925.0115cf68@fsol>
 <CA+3bQGFFd2B2jyEe4ZHSLDiBpmHntPjhT8j7kwfjmZX3Za9+Cw@mail.gmail.com>
Message-ID: <20190203234059.2ba49a84@fsol>

On Sun, 3 Feb 2019 23:22:25 +0100
Victor Stinner <vstinner at redhat.com> wrote:
> Hi Antoine,
> 
> The rules to decide what goes where have been discussed in the issues which
> created Include/cpython/ and the issue moving more headers to
> Include/internal/.
> 
> In short, internal/ should not be used outside CPython codebase. In Python
> 3.7, these headers were even not installed. I chose to install them because
> I moved more headers into internal/ which is a backward incompatible
> change. You should not use these headers outside CPython code base, but the
> typical use case to use them are debug tools: debugger, tracer and
> profiler. The internal/ subdir is not included in Python default search
> path when you use python-config --cflags for example. It is a deliberate
> choice that these headers are not easily accessible.
> 
> There file names are prefixed by pycore_ for practical reasons: if 2 header
> files have the same name in internal/ and Include/, the C preprocessor can
> pick the wrong one. See the internal/ issue which gives a concrete example
> (but in Python 3.7).
> 
> cpython/ is just a practical separation to force developers to decide if a
> new API is part of the stable API or not. Previously, too many APIs have
> been added to the stable API by mistake (not on purpose).

Hmm, I see.  Thanks for the explanation.

Regards

Antoine.

From tjreedy at udel.edu  Sun Feb  3 19:31:18 2019
From: tjreedy at udel.edu (Terry Reedy)
Date: Sun, 3 Feb 2019 19:31:18 -0500
Subject: [Python-Dev] Asking for reversion
In-Reply-To: <20190203220340.3158b236@fsol>
References: <20190203220340.3158b236@fsol>
Message-ID: <q3814o$2ben$1@blaine.gmane.org>

On 2/3/2019 4:03 PM, Antoine Pitrou wrote:
> 
> Hello,
> 
> I'd like to ask for the reversion of the changes done in
> https://github.com/python/cpython/pull/11664
> 
> The reason is simple: [over 1000 lines not reviewed, no tests, no docs]

Aside from the technical reasons Antoine gave, which I agree with, I 
think the merge was legally questionable, as a non-contributor is listed 
as a copyright holder.  Message 334805. https://bugs.python.org/issue35813

-- 
Terry Jan Reedy


From guido at python.org  Sun Feb  3 19:49:13 2019
From: guido at python.org (Guido van Rossum)
Date: Sun, 3 Feb 2019 16:49:13 -0800
Subject: [Python-Dev] Asking for reversion
In-Reply-To: <q3814o$2ben$1@blaine.gmane.org>
References: <20190203220340.3158b236@fsol> <q3814o$2ben$1@blaine.gmane.org>
Message-ID: <CAP7+vJ+nMiqheykevTv4ubKJotp9uMsPKiEQwya70w0n3kK4Gw@mail.gmail.com>

I think this is now up to the 3.8 release manager.

On Sun, Feb 3, 2019 at 4:34 PM Terry Reedy <tjreedy at udel.edu> wrote:

> On 2/3/2019 4:03 PM, Antoine Pitrou wrote:
> >
> > Hello,
> >
> > I'd like to ask for the reversion of the changes done in
> > https://github.com/python/cpython/pull/11664
> >
> > The reason is simple: [over 1000 lines not reviewed, no tests, no docs]
>
> Aside from the technical reasons Antoine gave, which I agree with, I
> think the merge was legally questionable, as a non-contributor is listed
> as a copyright holder.  Message 334805. https://bugs.python.org/issue35813
>
> --
> Terry Jan Reedy
>
> _______________________________________________
> Python-Dev mailing list
> Python-Dev at python.org
> https://mail.python.org/mailman/listinfo/python-dev
> Unsubscribe:
> https://mail.python.org/mailman/options/python-dev/guido%40python.org
>


-- 
--Guido van Rossum (python.org/~guido)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mail.python.org/pipermail/python-dev/attachments/20190203/9b50a6b1/attachment.html>

From guido at python.org  Sun Feb  3 19:55:43 2019
From: guido at python.org (Guido van Rossum)
Date: Sun, 3 Feb 2019 16:55:43 -0800
Subject: [Python-Dev] Asking for reversion
In-Reply-To: <CAP7+vJ+nMiqheykevTv4ubKJotp9uMsPKiEQwya70w0n3kK4Gw@mail.gmail.com>
References: <20190203220340.3158b236@fsol> <q3814o$2ben$1@blaine.gmane.org>
 <CAP7+vJ+nMiqheykevTv4ubKJotp9uMsPKiEQwya70w0n3kK4Gw@mail.gmail.com>
Message-ID: <CAP7+vJ+Q=6eCoSwwa91+cShAkjA03Y-r+HpOu2y8sGmgtDcFpw@mail.gmail.com>

Also, did anyone ask Davin directly to roll it back?

On Sun, Feb 3, 2019 at 4:49 PM Guido van Rossum <guido at python.org> wrote:

> I think this is now up to the 3.8 release manager.
>
> On Sun, Feb 3, 2019 at 4:34 PM Terry Reedy <tjreedy at udel.edu> wrote:
>
>> On 2/3/2019 4:03 PM, Antoine Pitrou wrote:
>> >
>> > Hello,
>> >
>> > I'd like to ask for the reversion of the changes done in
>> > https://github.com/python/cpython/pull/11664
>> >
>> > The reason is simple: [over 1000 lines not reviewed, no tests, no docs]
>>
>> Aside from the technical reasons Antoine gave, which I agree with, I
>> think the merge was legally questionable, as a non-contributor is listed
>> as a copyright holder.  Message 334805.
>> https://bugs.python.org/issue35813
>>
>> --
>> Terry Jan Reedy
>>
>> _______________________________________________
>> Python-Dev mailing list
>> Python-Dev at python.org
>> https://mail.python.org/mailman/listinfo/python-dev
>> Unsubscribe:
>> https://mail.python.org/mailman/options/python-dev/guido%40python.org
>>
>
>
> --
> --Guido van Rossum (python.org/~guido)
>


-- 
--Guido van Rossum (python.org/~guido)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mail.python.org/pipermail/python-dev/attachments/20190203/8a917c64/attachment.html>

From tjreedy at udel.edu  Sun Feb  3 20:40:54 2019
From: tjreedy at udel.edu (Terry Reedy)
Date: Sun, 3 Feb 2019 20:40:54 -0500
Subject: [Python-Dev] Asking for reversion
In-Reply-To: <CAP7+vJ+Q=6eCoSwwa91+cShAkjA03Y-r+HpOu2y8sGmgtDcFpw@mail.gmail.com>
References: <20190203220340.3158b236@fsol> <q3814o$2ben$1@blaine.gmane.org>
 <CAP7+vJ+nMiqheykevTv4ubKJotp9uMsPKiEQwya70w0n3kK4Gw@mail.gmail.com>
 <CAP7+vJ+Q=6eCoSwwa91+cShAkjA03Y-r+HpOu2y8sGmgtDcFpw@mail.gmail.com>
Message-ID: <q38577$1qlm$2@blaine.gmane.org>

On 2/3/2019 7:55 PM, Guido van Rossum wrote:
> Also, did anyone ask Davin directly to roll it back?

Antoine posted on the issue, along with Robert O.  Robert reviewed and 
make several suggestions.

-- 
Terry Jan Reedy


From raymond.hettinger at gmail.com  Sun Feb  3 20:52:55 2019
From: raymond.hettinger at gmail.com (Raymond Hettinger)
Date: Sun, 3 Feb 2019 17:52:55 -0800
Subject: [Python-Dev] Asking for reversion
In-Reply-To: <20190203220340.3158b236@fsol>
References: <20190203220340.3158b236@fsol>
Message-ID: <E19DF3D1-2FB4-4350-A0FF-B20A45A52C92@gmail.com>



> On Feb 3, 2019, at 1:03 PM, Antoine Pitrou <solipsis at pitrou.net> wrote:
> 
> I'd like to ask for the reversion of the changes done in
> https://github.com/python/cpython/pull/11664

Please work *with* Davin on this one.

It was only recently that you edited his name out of the list of maintainers for multiprocessing even though that is what he's been working on for the last two years and at the last two sprints.  I'd like to see more team work here rather than applying social pressures via python-dev (which is a *very* public list). 


Raymond


From raymond.hettinger at gmail.com  Sun Feb  3 21:10:43 2019
From: raymond.hettinger at gmail.com (Raymond Hettinger)
Date: Sun, 3 Feb 2019 18:10:43 -0800
Subject: [Python-Dev] Asking for reversion
In-Reply-To: <q38577$1qlm$2@blaine.gmane.org>
References: <20190203220340.3158b236@fsol> <q3814o$2ben$1@blaine.gmane.org>
 <CAP7+vJ+nMiqheykevTv4ubKJotp9uMsPKiEQwya70w0n3kK4Gw@mail.gmail.com>
 <CAP7+vJ+Q=6eCoSwwa91+cShAkjA03Y-r+HpOu2y8sGmgtDcFpw@mail.gmail.com>
 <q38577$1qlm$2@blaine.gmane.org>
Message-ID: <8933B3A4-DE0D-47AD-8A5A-10E7B54023D7@gmail.com>


> On Feb 3, 2019, at 5:40 PM, Terry Reedy <tjreedy at udel.edu> wrote:
> 
> On 2/3/2019 7:55 PM, Guido van Rossum wrote:
>> Also, did anyone ask Davin directly to roll it back?
> 
> Antoine posted on the issue, along with Robert O.  Robert reviewed and make several suggestions.

I think the PR sat in a stable state for many months, and it looks like RO's review comments came *after* the commit.  

FWIW, with dataclasses we decided to get the PR committed early, long before most of the tests and all of the docs. The principle was that bigger changes needed to go in as early as possible in the release cycle so that we could thoroughly exercise it (something that almost never happens while something is in the PR stage).  It would be great if the same came happen here.  IIRC, shared memory has long been the holy grail for multiprocessing, helping to mitigate its principle disadvantage (the cost of moving data between processes).  It's something we really want.

But let's see what the 3.8 release manager has to say.


Raymond



From python+python_dev at discontinuity.net  Sun Feb  3 22:12:38 2019
From: python+python_dev at discontinuity.net (Davin Potts)
Date: Sun, 3 Feb 2019 21:12:38 -0600
Subject: [Python-Dev] Asking for reversion
In-Reply-To: <8933B3A4-DE0D-47AD-8A5A-10E7B54023D7@gmail.com>
References: <20190203220340.3158b236@fsol> <q3814o$2ben$1@blaine.gmane.org>
 <CAP7+vJ+nMiqheykevTv4ubKJotp9uMsPKiEQwya70w0n3kK4Gw@mail.gmail.com>
 <CAP7+vJ+Q=6eCoSwwa91+cShAkjA03Y-r+HpOu2y8sGmgtDcFpw@mail.gmail.com>
 <q38577$1qlm$2@blaine.gmane.org>
 <8933B3A4-DE0D-47AD-8A5A-10E7B54023D7@gmail.com>
Message-ID: <CABHLM6sxvXGUc+V78X=94K+Gvv3mDnmoLRCzmb_BhFhi=m0P+w@mail.gmail.com>

I am attempting to do the right thing and am following the advice of other
core devs in what I have done thus far.

Borrowing heavily from what I've added to issue35813 just now:

This work is the result of ~1.5 years of development effort, much of it
accomplished at the last two core dev sprints.  The code behind it has been
stable since September 2018 and tested as an independently installable
package by multiple people.

I was encouraged by Lukasz, Yury, and others to check in this code early,
not waiting for tests and docs, in order to both solicit more feedback and
provide for broader testing.  I understand that doing such a thing is not
at all a novelty.  Thankfully it is doing that -- I hope that feedback
remains constructive and supportive.

There are some tests to be found in a branch (enh-tests-shmem) of
github.com/applio/cpython which I think should become more comprehensive
before inclusion.  Temporarily deferring and not including them as part of
the first alpha should reduce the complexity of that release.

Regarding the BSD license on the C code being adopted, my conversations
with Brett and subsequently Van have not raised concerns, far from it --
there is a process which is being followed to the letter.  If there are
other reasons to object to the thoughtful adoption of code licensed like
this one, that deserves a decoupled and larger discussion first.


Davin

On Sun, Feb 3, 2019 at 8:12 PM Raymond Hettinger <
raymond.hettinger at gmail.com> wrote:

>
> > On Feb 3, 2019, at 5:40 PM, Terry Reedy <tjreedy at udel.edu> wrote:
> >
> > On 2/3/2019 7:55 PM, Guido van Rossum wrote:
> >> Also, did anyone ask Davin directly to roll it back?
> >
> > Antoine posted on the issue, along with Robert O.  Robert reviewed and
> make several suggestions.
>
> I think the PR sat in a stable state for many months, and it looks like
> RO's review comments came *after* the commit.
>
> FWIW, with dataclasses we decided to get the PR committed early, long
> before most of the tests and all of the docs. The principle was that bigger
> changes needed to go in as early as possible in the release cycle so that
> we could thoroughly exercise it (something that almost never happens while
> something is in the PR stage).  It would be great if the same came happen
> here.  IIRC, shared memory has long been the holy grail for
> multiprocessing, helping to mitigate its principle disadvantage (the cost
> of moving data between processes).  It's something we really want.
>
> But let's see what the 3.8 release manager has to say.
>
>
> Raymond
>
>
> _______________________________________________
> Python-Dev mailing list
> Python-Dev at python.org
> https://mail.python.org/mailman/listinfo/python-dev
> Unsubscribe:
> https://mail.python.org/mailman/options/python-dev/python%2Bpython_dev%40discontinuity.net
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mail.python.org/pipermail/python-dev/attachments/20190203/82686044/attachment.html>

From python+python_dev at discontinuity.net  Sun Feb  3 22:25:27 2019
From: python+python_dev at discontinuity.net (Davin Potts)
Date: Sun, 3 Feb 2019 21:25:27 -0600
Subject: [Python-Dev] Asking for reversion
In-Reply-To: <CABHLM6sxvXGUc+V78X=94K+Gvv3mDnmoLRCzmb_BhFhi=m0P+w@mail.gmail.com>
References: <20190203220340.3158b236@fsol> <q3814o$2ben$1@blaine.gmane.org>
 <CAP7+vJ+nMiqheykevTv4ubKJotp9uMsPKiEQwya70w0n3kK4Gw@mail.gmail.com>
 <CAP7+vJ+Q=6eCoSwwa91+cShAkjA03Y-r+HpOu2y8sGmgtDcFpw@mail.gmail.com>
 <q38577$1qlm$2@blaine.gmane.org>
 <8933B3A4-DE0D-47AD-8A5A-10E7B54023D7@gmail.com>
 <CABHLM6sxvXGUc+V78X=94K+Gvv3mDnmoLRCzmb_BhFhi=m0P+w@mail.gmail.com>
Message-ID: <CABHLM6uum1CvxdO6ywkGjQfWBKQ=KPNVF9yxOE2jVt_iDybjhQ@mail.gmail.com>

On 2/3/2019 7:55 PM, Guido van Rossum wrote:
> Also, did anyone ask Davin directly to roll it back?

Simply put:  no.  There have been a number of reactionary comments in the
last 16 hours but no attempt to reach out to me directly during that time.


On Sun, Feb 3, 2019 at 8:12 PM Raymond Hettinger <
raymond.hettinger at gmail.com> wrote:
> It was only recently that you edited his name out of the list of
maintainers for multiprocessing
> even though that is what he's been working on for the last two years and
at the last two sprints.

I think it would be best to discuss Antoine's decision to take this
particular action without first consulting me, elsewhere and not part of
this thread.


As I said, I am happy to do the most constructive thing possible and I
sought the advice of those I highly respect first before doing as I have.


Davin


On Sun, Feb 3, 2019 at 9:12 PM Davin Potts <
python+python_dev at discontinuity.net> wrote:

> I am attempting to do the right thing and am following the advice of other
> core devs in what I have done thus far.
>
> Borrowing heavily from what I've added to issue35813 just now:
>
> This work is the result of ~1.5 years of development effort, much of it
> accomplished at the last two core dev sprints.  The code behind it has been
> stable since September 2018 and tested as an independently installable
> package by multiple people.
>
> I was encouraged by Lukasz, Yury, and others to check in this code early,
> not waiting for tests and docs, in order to both solicit more feedback and
> provide for broader testing.  I understand that doing such a thing is not
> at all a novelty.  Thankfully it is doing that -- I hope that feedback
> remains constructive and supportive.
>
> There are some tests to be found in a branch (enh-tests-shmem) of
> github.com/applio/cpython which I think should become more comprehensive
> before inclusion.  Temporarily deferring and not including them as part of
> the first alpha should reduce the complexity of that release.
>
> Regarding the BSD license on the C code being adopted, my conversations
> with Brett and subsequently Van have not raised concerns, far from it --
> there is a process which is being followed to the letter.  If there are
> other reasons to object to the thoughtful adoption of code licensed like
> this one, that deserves a decoupled and larger discussion first.
>
>
> Davin
>
> On Sun, Feb 3, 2019 at 8:12 PM Raymond Hettinger <
> raymond.hettinger at gmail.com> wrote:
>
>>
>> > On Feb 3, 2019, at 5:40 PM, Terry Reedy <tjreedy at udel.edu> wrote:
>> >
>> > On 2/3/2019 7:55 PM, Guido van Rossum wrote:
>> >> Also, did anyone ask Davin directly to roll it back?
>> >
>> > Antoine posted on the issue, along with Robert O.  Robert reviewed and
>> make several suggestions.
>>
>> I think the PR sat in a stable state for many months, and it looks like
>> RO's review comments came *after* the commit.
>>
>> FWIW, with dataclasses we decided to get the PR committed early, long
>> before most of the tests and all of the docs. The principle was that bigger
>> changes needed to go in as early as possible in the release cycle so that
>> we could thoroughly exercise it (something that almost never happens while
>> something is in the PR stage).  It would be great if the same came happen
>> here.  IIRC, shared memory has long been the holy grail for
>> multiprocessing, helping to mitigate its principle disadvantage (the cost
>> of moving data between processes).  It's something we really want.
>>
>> But let's see what the 3.8 release manager has to say.
>>
>>
>> Raymond
>>
>>
>> _______________________________________________
>> Python-Dev mailing list
>> Python-Dev at python.org
>> https://mail.python.org/mailman/listinfo/python-dev
>> Unsubscribe:
>> https://mail.python.org/mailman/options/python-dev/python%2Bpython_dev%40discontinuity.net
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mail.python.org/pipermail/python-dev/attachments/20190203/07919728/attachment.html>

From barry at python.org  Mon Feb  4 00:52:40 2019
From: barry at python.org (Barry Warsaw)
Date: Sun, 3 Feb 2019 21:52:40 -0800
Subject: [Python-Dev] Asking for reversion
In-Reply-To: <8933B3A4-DE0D-47AD-8A5A-10E7B54023D7@gmail.com>
References: <20190203220340.3158b236@fsol> <q3814o$2ben$1@blaine.gmane.org>
 <CAP7+vJ+nMiqheykevTv4ubKJotp9uMsPKiEQwya70w0n3kK4Gw@mail.gmail.com>
 <CAP7+vJ+Q=6eCoSwwa91+cShAkjA03Y-r+HpOu2y8sGmgtDcFpw@mail.gmail.com>
 <q38577$1qlm$2@blaine.gmane.org>
 <8933B3A4-DE0D-47AD-8A5A-10E7B54023D7@gmail.com>
Message-ID: <80174879-97D5-4516-97DF-093C980F363D@python.org>

On Feb 3, 2019, at 18:10, Raymond Hettinger <raymond.hettinger at gmail.com> wrote:
> 
> FWIW, with dataclasses we decided to get the PR committed early, long before most of the tests and all of the docs. The principle was that bigger changes needed to go in as early as possible in the release cycle so that we could thoroughly exercise it (something that almost never happens while something is in the PR stage).

I think that should generally be the exception, but if it does happen, there ought to be a release blocker issue for the tests and docs.  The problem then is if those things *don?t* happen and we get too late in the release cycle to roll the change back.

-Barry

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 833 bytes
Desc: Message signed with OpenPGP
URL: <http://mail.python.org/pipermail/python-dev/attachments/20190203/3a966141/attachment.sig>

From ronaldoussoren at mac.com  Mon Feb  4 01:53:49 2019
From: ronaldoussoren at mac.com (Ronald Oussoren)
Date: Mon, 4 Feb 2019 07:53:49 +0100
Subject: [Python-Dev] Asking for reversion
In-Reply-To: <8933B3A4-DE0D-47AD-8A5A-10E7B54023D7@gmail.com>
References: <20190203220340.3158b236@fsol> <q3814o$2ben$1@blaine.gmane.org>
 <CAP7+vJ+nMiqheykevTv4ubKJotp9uMsPKiEQwya70w0n3kK4Gw@mail.gmail.com>
 <CAP7+vJ+Q=6eCoSwwa91+cShAkjA03Y-r+HpOu2y8sGmgtDcFpw@mail.gmail.com>
 <q38577$1qlm$2@blaine.gmane.org>
 <8933B3A4-DE0D-47AD-8A5A-10E7B54023D7@gmail.com>
Message-ID: <90A448A1-9854-4D66-A6E7-A1F97FEBC3B0@mac.com>


> On 4 Feb 2019, at 03:10, Raymond Hettinger <raymond.hettinger at gmail.com> wrote:
> 
> 
>> On Feb 3, 2019, at 5:40 PM, Terry Reedy <tjreedy at udel.edu> wrote:
>> 
>> On 2/3/2019 7:55 PM, Guido van Rossum wrote:
>>> Also, did anyone ask Davin directly to roll it back?
>> 
>> Antoine posted on the issue, along with Robert O.  Robert reviewed and make several suggestions.

@Terry: Robert is usually called Ronald :-)

> 
> I think the PR sat in a stable state for many months, and it looks like RO's review comments came *after* the commit.  

That?s because I only noticed the PR after commit: The PR was merged within an hour of creating the BPO issue. 

> 
> FWIW, with dataclasses we decided to get the PR committed early, long before most of the tests and all of the docs. The principle was that bigger changes needed to go in as early as possible in the release cycle so that we could thoroughly exercise it (something that almost never happens while something is in the PR stage).  It would be great if the same came happen here.  IIRC, shared memory has long been the holy grail for multiprocessing, helping to mitigate its principle disadvantage (the cost of moving data between processes).  It's something we really want.

But with dataclasses there was public discussion on the API.  This is a new API with no documentation in a part of the library that is known to be complex in nature.

Ronald
--

Twitter: @ronaldoussoren
Blog: https://blog.ronaldoussoren.net/

