From steve at holdenweb.com  Sat Dec  1 09:54:00 2018
From: steve at holdenweb.com (Steve Holden)
Date: Sat, 1 Dec 2018 14:54:00 +0000
Subject: [Python-Dev] Inclusion of lz4 bindings in stdlib?
In-Reply-To: <1921b844-f1a9-6434-b367-7aa118ee187e@g.nevcal.com>
References: <CAANOHNmAoTr3JALTdr2DZ6mTjD1hVPpDVp8Di-s1N554SKTa5g@mail.gmail.com>
 <20181128174343.6bc8760b@fsol>
 <CAP1=2W4JKa2OxcWGeB4goERueBX7YGw6ScDMuPLufZtKohDBuw@mail.gmail.com>
 <CAGE7PN+=bdYfSbUNuy+jTLNV9g2+bykkvAahpGocnXZatTbm6w@mail.gmail.com>
 <20181128212736.GW4319@ando.pearwood.info>
 <CAEfz+TxAX6B1a3oLTbiPibvZAaAAT+vSnk9T8V30h1Y7GnD=UQ@mail.gmail.com>
 <CAL3CFcXdSf+5MfgbVi_PdWB2gkLERSKVGkVMUmfjn0iYDQ3Usw@mail.gmail.com>
 <CAGE7PN+vSXSYufwau-HSjX7OdR=k381wgjWGPDGUFKDaBzcKXA@mail.gmail.com>
 <CAL3CFcW_GzBHMCO1NbV6uuhqCPw5TWUFXgBOKnRkZX6=ck_ryg@mail.gmail.com>
 <1921b844-f1a9-6434-b367-7aa118ee187e@g.nevcal.com>
Message-ID: <CAMofdRD5gp1OK_W+EA=WA+oSR867Jtc=GSe51x+hnZJTHYJXsA@mail.gmail.com>

We* should probably do more collectively to point people at
production-quality third-party modules, as I believe we currently do with
pipenv which, while not a part of the standard library, is still
recommended in the documentation as the preferred method of dependency
management. We should also be even more strident when a library module is a
basic version, not to be used for production purposes.

This inevitably means, however, that there will be lag in the
documentation, which generally speaking lags current best practices.

Steve Holden

* I am not a significant contributor to the code base.



On Fri, Nov 30, 2018 at 9:02 PM Glenn Linderman <v+python at g.nevcal.com>
wrote:

> On 11/29/2018 2:10 PM, Andrew Svetlov wrote:
>
> Neither http.client nor http.server doesn't support compression
> (gzip/compress/deflate) at all.
> I doubt if we want to add this feature: for client better to use requests
> or, well, aiohttp.
> The same for servers: almost any production ready web server from PyPI
> supports compression.
>
> What production ready web servers exist on PyPi? Are there any that don't
> bring lots of baggage, their own enhanced way of doing things? The nice
> thing about the http.server is that it does things in a standard-conforming
> way, the bad thing about it is that it doesn't implement all the standards,
> and isn't maintained very well.
>
> From just reading PyPi, it is hard to discover whether a particular
> package is production-ready or not.
>
> I had used CherryPy for a while, but at the time it didn't support Python
> 3, and to use the same scripts behind CherryPy or Apache CGI (my deployment
> target, because that was what web hosts provided) became difficult for
> complex scripts.... so I reverted to http.server with a few private
> extensions (private because no one merged the bugs I reported some 3
> versions of Python-development-process ago; back then I submitted patches,
> but I haven't had time to keep up with the churn of technologies Pythondev
> has used since Python 3 came out, which is when I started using Python, and
> I'm sure the submitted patches have bit-rotted by now).
>
> When I google "python web server" the first hit is the doc page for
> http.server, the second is a wiki page that mentions CherryPy and a bunch
> of others, but the descriptions, while terse, mostly point out some special
> capabilities of the server, making it seem like you not only get a web
> server, but a philosophy. I just want a web server. The last one, Waitress,
> is the only one that doesn't seem to have a philosophy in its description.
>
> So it would be nice if http.server and http.client could get some basic
> improvements to be complete, or if the docs could point to a replacement
> that is a complete server, but without a philosophy or framework
> (bloatware) to have to learn and/or work around.
>
> Glenn
> _______________________________________________
> Python-Dev mailing list
> Python-Dev at python.org
> https://mail.python.org/mailman/listinfo/python-dev
> Unsubscribe:
> https://mail.python.org/mailman/options/python-dev/steve%40holdenweb.com
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mail.python.org/pipermail/python-dev/attachments/20181201/4314752d/attachment.html>

From njs at pobox.com  Sat Dec  1 12:38:14 2018
From: njs at pobox.com (Nathaniel Smith)
Date: Sat, 1 Dec 2018 09:38:14 -0800
Subject: [Python-Dev] Inclusion of lz4 bindings in stdlib?
In-Reply-To: <CAMofdRD5gp1OK_W+EA=WA+oSR867Jtc=GSe51x+hnZJTHYJXsA@mail.gmail.com>
References: <CAANOHNmAoTr3JALTdr2DZ6mTjD1hVPpDVp8Di-s1N554SKTa5g@mail.gmail.com>
 <20181128174343.6bc8760b@fsol>
 <CAP1=2W4JKa2OxcWGeB4goERueBX7YGw6ScDMuPLufZtKohDBuw@mail.gmail.com>
 <CAGE7PN+=bdYfSbUNuy+jTLNV9g2+bykkvAahpGocnXZatTbm6w@mail.gmail.com>
 <20181128212736.GW4319@ando.pearwood.info>
 <CAEfz+TxAX6B1a3oLTbiPibvZAaAAT+vSnk9T8V30h1Y7GnD=UQ@mail.gmail.com>
 <CAL3CFcXdSf+5MfgbVi_PdWB2gkLERSKVGkVMUmfjn0iYDQ3Usw@mail.gmail.com>
 <CAGE7PN+vSXSYufwau-HSjX7OdR=k381wgjWGPDGUFKDaBzcKXA@mail.gmail.com>
 <CAL3CFcW_GzBHMCO1NbV6uuhqCPw5TWUFXgBOKnRkZX6=ck_ryg@mail.gmail.com>
 <1921b844-f1a9-6434-b367-7aa118ee187e@g.nevcal.com>
 <CAMofdRD5gp1OK_W+EA=WA+oSR867Jtc=GSe51x+hnZJTHYJXsA@mail.gmail.com>
Message-ID: <CAPJVwBnRpzTwJSBs4VoJ_kzpTfOPG_dTD1dUZA95H9xfBS+6Fg@mail.gmail.com>

On Sat, Dec 1, 2018, 06:56 Steve Holden <steve at holdenweb.com wrote:

> We* should probably do more collectively to point people at
> production-quality third-party modules, as I believe we currently do with
> pipenv which, while not a part of the standard library, is still
> recommended in the documentation as the preferred method of dependency
> management.
>

Small correction: the only "official" recommendation for pipenv is that
packaging.python.org (which is maintained by pypa, not python-dev) contains
several tutorials, and one of them discusses how to use pipenv. For a while
Kenneth used this as justification for telling everyone pipenv was "the
officially recommended install tool", and this created a lot of ill will,
so the pipenv team has been working on rolling that back.

A better precedent is requests. There was a long discussion a few years ago
about whether requests should move to the stdlib, and the outcome was that
it didn't, but the urllib docs got a note added recommending the use of
requests, which you can see here:

https://docs.python.org/3/library/urllib.request.html#module-urllib.request

Personally I would have phrased the note more strongly, but my perspective
is skewed by having tried to understand the internals. I'm glad urllib has
helped a lot of people solve their problems, but there's also a lot of ways
that it's flat out broken.

Anyway, I agree that there are probably other places where the docs could
use this technique.

-n
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mail.python.org/pipermail/python-dev/attachments/20181201/ddf7a0ae/attachment.html>

From chris at simplistix.co.uk  Sun Dec  2 09:42:24 2018
From: chris at simplistix.co.uk (Chris Withers)
Date: Sun, 2 Dec 2018 14:42:24 +0000
Subject: [Python-Dev] getting merge rights back on github
Message-ID: <390ddce3-9d42-d270-4495-69f6bd567fc8@simplistix.co.uk>

Hi All,

It's been quite a long time since I last used my python commit rights, 
and it appears they've evaporated in the move to GitHub.

I'd like to get back into helping out, particularly with unittest.mock 
where I've recently started helping out as a maintainer over on 
https://github.com/testing-cabal/mock.

Please let me know what I need to do,

Chris



From chris at withers.org  Sun Dec  2 09:37:09 2018
From: chris at withers.org (Chris Withers)
Date: Sun, 2 Dec 2018 14:37:09 +0000
Subject: [Python-Dev] getting merge rights back on github
Message-ID: <878a07ed-c4a6-5d8d-6f6f-1b92f8e3442b@withers.org>

Hi All,

It's been quite a long time since I last used my python commit rights, 
and it appears they've evaporated in the move to GitHub.

I'd like to get back into helping out, particularly with unittest.mock 
where I've recently started helping out as a maintainer over on 
https://github.com/testing-cabal/mock.

Please let me know what I need to do,

Chris


From brett at python.org  Sun Dec  2 20:55:25 2018
From: brett at python.org (Brett Cannon)
Date: Sun, 2 Dec 2018 17:55:25 -0800
Subject: [Python-Dev] getting merge rights back on github
In-Reply-To: <878a07ed-c4a6-5d8d-6f6f-1b92f8e3442b@withers.org>
References: <878a07ed-c4a6-5d8d-6f6f-1b92f8e3442b@withers.org>
Message-ID: <CAP1=2W5mrdWQO0kz43dbY136_Kp58YcsBCSnX=P9F1P1ZEm6Bw@mail.gmail.com>

This is being dealt with.

On Sun, 2 Dec 2018 at 08:28, Chris Withers <chris at withers.org> wrote:

> Hi All,
>
> It's been quite a long time since I last used my python commit rights,
> and it appears they've evaporated in the move to GitHub.
>
> I'd like to get back into helping out, particularly with unittest.mock
> where I've recently started helping out as a maintainer over on
> https://github.com/testing-cabal/mock.
>
> Please let me know what I need to do,
>
> Chris
>
> _______________________________________________
> Python-Dev mailing list
> Python-Dev at python.org
> https://mail.python.org/mailman/listinfo/python-dev
> Unsubscribe:
> https://mail.python.org/mailman/options/python-dev/brett%40python.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mail.python.org/pipermail/python-dev/attachments/20181202/935dd04a/attachment.html>

From vstinner at redhat.com  Mon Dec  3 05:26:52 2018
From: vstinner at redhat.com (Victor Stinner)
Date: Mon, 3 Dec 2018 11:26:52 +0100
Subject: [Python-Dev] getting merge rights back on github
In-Reply-To: <390ddce3-9d42-d270-4495-69f6bd567fc8@simplistix.co.uk>
References: <390ddce3-9d42-d270-4495-69f6bd567fc8@simplistix.co.uk>
Message-ID: <CA+3bQGHviAseg3SmZgM=DJEqHAyrMZG6ajDqYHx8JjG8gQ+BXg@mail.gmail.com>

Hi,

unittest.mock definitely needs your help :-) I merged a few changes
last months, but I had to rely on Mario Corchero (who authored the new
seal() method) for the review, since I don't know well this module.
Michael Foord (original author) doesn't seem available for reviews.
More reviewers shouldn't hurt :-) If you search for "mock" in pull
requests:
https://github.com/python/cpython/pulls?utf8=%E2%9C%93&q=is%3Apr+is%3Aopen+mock

I see at least 5 open PRs:

https://github.com/python/cpython/pull/10555
https://github.com/python/cpython/pull/9296
https://github.com/python/cpython/pull/7491
https://github.com/python/cpython/pull/4476
https://github.com/python/cpython/pull/1982

You can also search into the bug tracker ;-)


unittest.mock changes that I merged last months:

commit 552be9d7e64f91b8e4ba5b29cd5dcc442d56f92c
Author: Mario Corchero <mariocj89 at gmail.com>
Date:   Tue Oct 17 12:35:11 2017 +0100

    bpo-30541: Add new method to seal mocks (GH61923)

    The new method allows the developer to control when to stop the
    feature of mocks that automagically creates new mocks when accessing
    an attribute that was not declared before

    Signed-off-by: Mario Corchero <mariocj89 at gmail.com>

commit 6c4fab0f4b95410a1a964a75dcdd953697eff089
Author: John Reese <john at noswap.com>
Date:   Tue May 22 13:01:10 2018 -0700

    bpo-33516: Add support for __round__ in MagicMock (GH-6880)

    unittest.mock.MagicMock now supports the __round__() magic method.

commit 96200eb2ffcda05de14099cf23f60d5091366e3e
Author: Mario Corchero <mariocj89 at gmail.com>
Date:   Fri Oct 19 22:57:37 2018 +0100

    unittest.mock doc: Fix references to recursive seal of Mocks (GH-9028)

    The docs in `library/unittest.mock` have been updated to remove
    confusing terms about submock and be explicit about the behavior
    expected.

commit 6c83d9f4a72905d968418bef670bb3091d2744db
Author: Max B?langer <aeromax at gmail.com>
Date:   Thu Oct 25 14:48:58 2018 -0700

    bpo-35022: unittest.mock.MagicMock now also supports __fspath__ (GH-9960)

    The MagicMock class supports many magic methods, but not __fspath__. To ease
    testing with modules such as os.path, this function is now
supported by default.

commit 47d94241a383e2b8a2c40e81d12d40d5947fb170
Author: Petter Strandmark <petter.strandmark at gmail.com>
Date:   Sun Oct 28 21:37:10 2018 +0100

    bpo-35047, unittest.mock: Better error messages on
assert_called_xxx failures (GH-10090)

    unittest.mock now includes mock calls in exception messages if
    assert_not_called, assert_called_once, or assert_called_once_with
    fails.

commit edeca92c84a3b08902ecdfe987cde00c7e617887
Author: Xtreak <tirkarthi at users.noreply.github.com>
Date:   Sat Dec 1 15:33:54 2018 +0530

    bpo-31177: Skip deleted attributes while calling reset_mock (GH-9302)

Victor
Le dim. 2 d?c. 2018 ? 15:45, Chris Withers <chris at simplistix.co.uk> a ?crit :
>
> Hi All,
>
> It's been quite a long time since I last used my python commit rights,
> and it appears they've evaporated in the move to GitHub.
>
> I'd like to get back into helping out, particularly with unittest.mock
> where I've recently started helping out as a maintainer over on
> https://github.com/testing-cabal/mock.
>
> Please let me know what I need to do,
>
> Chris
>
>
> _______________________________________________
> Python-Dev mailing list
> Python-Dev at python.org
> https://mail.python.org/mailman/listinfo/python-dev
> Unsubscribe: https://mail.python.org/mailman/options/python-dev/vstinner%40redhat.com

From chris at simplistix.co.uk  Mon Dec  3 13:34:42 2018
From: chris at simplistix.co.uk (Chris Withers)
Date: Mon, 3 Dec 2018 18:34:42 +0000
Subject: [Python-Dev] getting merge rights back on github
In-Reply-To: <CA+3bQGHviAseg3SmZgM=DJEqHAyrMZG6ajDqYHx8JjG8gQ+BXg@mail.gmail.com>
References: <390ddce3-9d42-d270-4495-69f6bd567fc8@simplistix.co.uk>
 <CA+3bQGHviAseg3SmZgM=DJEqHAyrMZG6ajDqYHx8JjG8gQ+BXg@mail.gmail.com>
Message-ID: <c470029b-e658-e13a-68a1-a2adb346347b@simplistix.co.uk>

Noted, I'll see what I can do...

On 03/12/2018 10:26, Victor Stinner wrote:
> Hi,
>
> unittest.mock definitely needs your help :-) I merged a few changes
> last months, but I had to rely on Mario Corchero (who authored the new
> seal() method) for the review, since I don't know well this module.
> Michael Foord (original author) doesn't seem available for reviews.
> More reviewers shouldn't hurt :-) If you search for "mock" in pull
> requests:
> https://github.com/python/cpython/pulls?utf8=%E2%9C%93&q=is%3Apr+is%3Aopen+mock
>
> I see at least 5 open PRs:
>
> https://github.com/python/cpython/pull/10555
> https://github.com/python/cpython/pull/9296
> https://github.com/python/cpython/pull/7491
> https://github.com/python/cpython/pull/4476
> https://github.com/python/cpython/pull/1982
>
> You can also search into the bug tracker ;-)
>
>
> unittest.mock changes that I merged last months:
>
> commit 552be9d7e64f91b8e4ba5b29cd5dcc442d56f92c
> Author: Mario Corchero <mariocj89 at gmail.com>
> Date:   Tue Oct 17 12:35:11 2017 +0100
>
>      bpo-30541: Add new method to seal mocks (GH61923)
>
>      The new method allows the developer to control when to stop the
>      feature of mocks that automagically creates new mocks when accessing
>      an attribute that was not declared before
>
>      Signed-off-by: Mario Corchero <mariocj89 at gmail.com>
>
> commit 6c4fab0f4b95410a1a964a75dcdd953697eff089
> Author: John Reese <john at noswap.com>
> Date:   Tue May 22 13:01:10 2018 -0700
>
>      bpo-33516: Add support for __round__ in MagicMock (GH-6880)
>
>      unittest.mock.MagicMock now supports the __round__() magic method.
>
> commit 96200eb2ffcda05de14099cf23f60d5091366e3e
> Author: Mario Corchero <mariocj89 at gmail.com>
> Date:   Fri Oct 19 22:57:37 2018 +0100
>
>      unittest.mock doc: Fix references to recursive seal of Mocks (GH-9028)
>
>      The docs in `library/unittest.mock` have been updated to remove
>      confusing terms about submock and be explicit about the behavior
>      expected.
>
> commit 6c83d9f4a72905d968418bef670bb3091d2744db
> Author: Max B?langer <aeromax at gmail.com>
> Date:   Thu Oct 25 14:48:58 2018 -0700
>
>      bpo-35022: unittest.mock.MagicMock now also supports __fspath__ (GH-9960)
>
>      The MagicMock class supports many magic methods, but not __fspath__. To ease
>      testing with modules such as os.path, this function is now
> supported by default.
>
> commit 47d94241a383e2b8a2c40e81d12d40d5947fb170
> Author: Petter Strandmark <petter.strandmark at gmail.com>
> Date:   Sun Oct 28 21:37:10 2018 +0100
>
>      bpo-35047, unittest.mock: Better error messages on
> assert_called_xxx failures (GH-10090)
>
>      unittest.mock now includes mock calls in exception messages if
>      assert_not_called, assert_called_once, or assert_called_once_with
>      fails.
>
> commit edeca92c84a3b08902ecdfe987cde00c7e617887
> Author: Xtreak <tirkarthi at users.noreply.github.com>
> Date:   Sat Dec 1 15:33:54 2018 +0530
>
>      bpo-31177: Skip deleted attributes while calling reset_mock (GH-9302)
>
> Victor
> Le dim. 2 d?c. 2018 ? 15:45, Chris Withers <chris at simplistix.co.uk> a ?crit :
>> Hi All,
>>
>> It's been quite a long time since I last used my python commit rights,
>> and it appears they've evaporated in the move to GitHub.
>>
>> I'd like to get back into helping out, particularly with unittest.mock
>> where I've recently started helping out as a maintainer over on
>> https://github.com/testing-cabal/mock.
>>
>> Please let me know what I need to do,
>>
>> Chris
>>
>>
>> _______________________________________________
>> Python-Dev mailing list
>> Python-Dev at python.org
>> https://mail.python.org/mailman/listinfo/python-dev
>> Unsubscribe: https://mail.python.org/mailman/options/python-dev/vstinner%40redhat.com


From nad at python.org  Tue Dec  4 03:42:28 2018
From: nad at python.org (Ned Deily)
Date: Tue, 4 Dec 2018 03:42:28 -0500
Subject: [Python-Dev] 3.7.2rc1 and 3.6.8rc1 cutoffs ahead,
 last 3.6.x bugfix release!
Message-ID: <95B9F244-38A8-4E47-8E9D-6DAD289C84A2@python.org>

https://discuss.python.org/t/3-7-2rc1-and-3-6-8rc1-cutoffs-ahead-last-3-6-x-bugfix-release/510


We're reaching the end of the year and it's time for another pair of Python 3 maintenance releases, 3.7.2 and 3.6.8, before we ring out 2018.  Since there are still some open release blocker issues and I haven't been bugging you about them, I've moved the code cutoff for the release candidates to this coming Friday, 12-07, by the end of the day (AOE).  That gives us all another 4 days to review open issues and PRs.  Please give highest attention to any release blockers you have been shepherding or reviewing.  Thanks!

A reminder: as previously announced, 3.6.8 is planned to be the last bugfix release of the 3.6 series.  Python 3.6.0 was released on 2016-12-23, so by the time 3.6.8 is released, 3.6.x will have been in bugfix mode almost exactly 2 years.  When a new feature release is made and enters "bugfix" mode, our policy has long been to continue to maintain the previous bugfix branch for at least one more release and then move that branch to "security fix only" mode.  3.7.0 (and 3.6.6) was released nearly six months ago and, with the release of 3.6.8, there will have been two additional 3.6.x bugfix releases since then.  So, barring any showstopper issues that might arise, the upcoming 3.6.8rc1 is your last chance to make bugfix changes for 3.6.x.  Following the successful release of 3.6.8, only security fixes will be accepted for the 3.6 branch and future 3.6.x releases will be source-only and scheduled as needed; no further binary installers will be produced for 3.6.  Refer to the Dev Guide sections and release PEPs linked below for more information.


https://devguide.python.org/devcycle/
https://devguide.python.org/#branchstatus
https://www.python.org/dev/peps/pep-0494/
https://www.python.org/dev/peps/pep-0537/

--
  Ned Deily
  nad at python.org -- []


From vstinner at redhat.com  Tue Dec  4 10:19:46 2018
From: vstinner at redhat.com (Victor Stinner)
Date: Tue, 4 Dec 2018 16:19:46 +0100
Subject: [Python-Dev] Internal header files (Include/internal/*.h) are now
 installed
Message-ID: <CA+3bQGG-gTgspvM0nS+0472RxyqEVpJOUL5-5UwcaMjnzjpwKg@mail.gmail.com>

Hi,

Since Python 3.7, "internal" C API (only declared if Py_BUILD_CORE is
defined) are moving from Include/*.h to Include/internal/*.h. These
API must not be used outside CPython. In Python 3.7, "make install"
doesn't install them for example.

I would like to move more private functions (prefixed by "_Py") to the
"internal" API. Since I'm not 100% sure that it's ok, I decided to
modify "make install" to also install Include/internal/ headers (to
$prefix/include/python3.8m/internal/).

These headers might be useful for low-level debug tools like debuggers
or profilers, to access directly memory without calling functions.
These APIs require to use the same compiler and likely the same
compiler options than CPython. It's especially true for atomic
variables (Include/internal/pycore_atomic.h).

Are you ok to install "internal" header files? If yes, should we
modify "make install" of Python 3.7 to also install them?

Victor

From solipsis at pitrou.net  Tue Dec  4 10:31:57 2018
From: solipsis at pitrou.net (Antoine Pitrou)
Date: Tue, 4 Dec 2018 16:31:57 +0100
Subject: [Python-Dev] Internal header files (Include/internal/*.h) are
 now installed
References: <CA+3bQGG-gTgspvM0nS+0472RxyqEVpJOUL5-5UwcaMjnzjpwKg@mail.gmail.com>
Message-ID: <20181204163157.2b15cf6a@fsol>

On Tue, 4 Dec 2018 16:19:46 +0100
Victor Stinner <vstinner at redhat.com> wrote:
> Hi,
> 
> Since Python 3.7, "internal" C API (only declared if Py_BUILD_CORE is
> defined) are moving from Include/*.h to Include/internal/*.h. These
> API must not be used outside CPython. In Python 3.7, "make install"
> doesn't install them for example.
> 
> I would like to move more private functions (prefixed by "_Py") to the
> "internal" API. Since I'm not 100% sure that it's ok, I decided to
> modify "make install" to also install Include/internal/ headers (to
> $prefix/include/python3.8m/internal/).
> 
> These headers might be useful for low-level debug tools like debuggers
> or profilers, to access directly memory without calling functions.
> These APIs require to use the same compiler and likely the same
> compiler options than CPython. It's especially true for atomic
> variables (Include/internal/pycore_atomic.h).
> 
> Are you ok to install "internal" header files? If yes, should we
> modify "make install" of Python 3.7 to also install them?

+1 to both.

Regards

Antoine.



From vstinner at redhat.com  Tue Dec  4 11:17:12 2018
From: vstinner at redhat.com (Victor Stinner)
Date: Tue, 4 Dec 2018 17:17:12 +0100
Subject: [Python-Dev] Internal header files (Include/internal/*.h) are
 now installed
In-Reply-To: <20181204163157.2b15cf6a@fsol>
References: <CA+3bQGG-gTgspvM0nS+0472RxyqEVpJOUL5-5UwcaMjnzjpwKg@mail.gmail.com>
 <20181204163157.2b15cf6a@fsol>
Message-ID: <CA+3bQGFoe1QXosWi2hTtZVtV7n2fTXdhboRGVK7QCjc3Vy7o_Q@mail.gmail.com>

Le mar. 4 d?c. 2018 ? 16:35, Antoine Pitrou <solipsis at pitrou.net> a ?crit :
> > Are you ok to install "internal" header files? If yes, should we
> > modify "make install" of Python 3.7 to also install them?
>
> +1 to both.

Ok, I reopened https://bugs.python.org/issue35296 and wrote a PR:

https://github.com/python/cpython/pull/10897

Victor

From chris at withers.org  Tue Dec  4 14:13:32 2018
From: chris at withers.org (Chris Withers)
Date: Tue, 4 Dec 2018 19:13:32 +0000
Subject: [Python-Dev] any way to subscribe to bugs and PRs on a particular
 topic?
Message-ID: <bbc873f2-dfb2-2fa6-0852-a68d9672daf1@withers.org>

Hello,

I'd like to see if I can help with unittest.mock, but don't have a huge 
amount of bandwidth and can't even parse let alone process the whole 
firehose of bpo and GH PRs.

Is there? any way I can get bugs.python.org and github PRs to only tell 
me about things, preferably by email, that affect or involve unittest.mock?

cheers,

Chris

From storchaka at gmail.com  Tue Dec  4 14:42:10 2018
From: storchaka at gmail.com (Serhiy Storchaka)
Date: Tue, 4 Dec 2018 21:42:10 +0200
Subject: [Python-Dev] any way to subscribe to bugs and PRs on a
 particular topic?
In-Reply-To: <bbc873f2-dfb2-2fa6-0852-a68d9672daf1@withers.org>
References: <bbc873f2-dfb2-2fa6-0852-a68d9672daf1@withers.org>
Message-ID: <pu6l6f$hdg$1@blaine.gmane.org>

04.12.18 21:13, Chris Withers ????:
> I'd like to see if I can help with unittest.mock, but don't have a huge 
> amount of bandwidth and can't even parse let alone process the whole 
> firehose of bpo and GH PRs.
> 
> Is there? any way I can get bugs.python.org and github PRs to only tell 
> me about things, preferably by email, that affect or involve unittest.mock?

You can add yourself into the experts list:
https://github.com/python/devguide/blob/master/experts.rst. This will 
help to add you to nosy list in new issues.

You can find existing unittest.mock related issues and PRs by using 
search on the bug tracker and GitHub.


From mariatta at python.org  Tue Dec  4 14:46:12 2018
From: mariatta at python.org (Mariatta Wijaya)
Date: Tue, 4 Dec 2018 11:46:12 -0800
Subject: [Python-Dev] any way to subscribe to bugs and PRs on a
 particular topic?
In-Reply-To: <bbc873f2-dfb2-2fa6-0852-a68d9672daf1@withers.org>
References: <bbc873f2-dfb2-2fa6-0852-a68d9672daf1@withers.org>
Message-ID: <CAGbohnYRPzh1-oV=Ks+XVEYdmxcKBdZDR10Ausb_R0gNkSXfJg@mail.gmail.com>

For GitHub PRs, you can add yourself to CODEOWNERS file, so you will be
automatically requested review if a PR contains changes to unittest.mock.
(and you'll receive review-request notification)
https://github.com/python/cpython/blob/master/.github/CODEOWNERS

When GitHub sends you review request notification email, it will cc
review_requested at noreply.github.com, so you can create a filter based on
that.
?

On Tue, Dec 4, 2018 at 11:21 AM Chris Withers <chris at withers.org> wrote:

> Hello,
>
> I'd like to see if I can help with unittest.mock, but don't have a huge
> amount of bandwidth and can't even parse let alone process the whole
> firehose of bpo and GH PRs.
>
> Is there  any way I can get bugs.python.org and github PRs to only tell
> me about things, preferably by email, that affect or involve unittest.mock?
>
> cheers,
>
> Chris
> _______________________________________________
> Python-Dev mailing list
> Python-Dev at python.org
> https://mail.python.org/mailman/listinfo/python-dev
> Unsubscribe:
> https://mail.python.org/mailman/options/python-dev/mariatta%40python.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mail.python.org/pipermail/python-dev/attachments/20181204/51c8e999/attachment.html>

From tjreedy at udel.edu  Tue Dec  4 15:01:45 2018
From: tjreedy at udel.edu (Terry Reedy)
Date: Tue, 4 Dec 2018 15:01:45 -0500
Subject: [Python-Dev] any way to subscribe to bugs and PRs on a
 particular topic?
In-Reply-To: <bbc873f2-dfb2-2fa6-0852-a68d9672daf1@withers.org>
References: <bbc873f2-dfb2-2fa6-0852-a68d9672daf1@withers.org>
Message-ID: <pu6mb9$lvs$1@blaine.gmane.org>

On 12/4/2018 2:13 PM, Chris Withers wrote:
> Hello,

Welcome back.  unittest.mock is important for everyone writing 
non-trivial tests.

> I'd like to see if I can help with unittest.mock, but don't have a huge 
> amount of bandwidth and can't even parse let alone process the whole 
> firehose of bpo and GH PRs.
> 
> Is there? any way I can get bugs.python.org and github PRs to only tell 
> me about things, preferably by email, that affect or involve unittest.mock?

Tracker: Edit https://devguide.python.org/experts/ to add yourself as 
expert for unittest.mock and you will see such issues if the OP or 
triager types 'unittest.mock' in the nosy field and clicks the list.

Note: consider adding yourself also as unittest and Misc - testing expert.

Certain people, such as Zach Ware, can make nosy listing automatic upon 
a selection of a component, such as 'testing'.

Every Friday, a list of new issues for the last week is posted here 
(pydev).  It does not take too long to scan +-50 titles.

PRs. In the repository, add a line to .github/CODEOWNERS (which starts 
with instructions) so you are notified whenever a PR touches 
Lib/unittest/mock.py.  From other example, it seem that the following 
might work (but I am not an expert on this).

@@/*unittest*/*mock*                     <github name>

-- 
Terry Jan Reedy



From vstinner at redhat.com  Wed Dec  5 05:51:04 2018
From: vstinner at redhat.com (Victor Stinner)
Date: Wed, 5 Dec 2018 11:51:04 +0100
Subject: [Python-Dev] test_urllib2net fixed to repair Travis CI
Message-ID: <CA+3bQGFZ-GLCTBV=+hugP=PSbSWixBhQEZPhWF0=whYDCwm2=w@mail.gmail.com>

Hi,

It seems like Travis CI changed its security or network configuration:
some FTP tests of test_urllib2net started to fail with "425 Security:
Bad IP connecting" yesterday:

   https://bugs.python.org/issue35411

The failure seems to be reproducible and so prevents to merge any
change in any branch. It blocked our whole workflow :-(

Good news: I quickly fixed the CI! (2.7, 3.6, 3.7 and master branches)
I skipped the test on Travis CI: AppVeyor runs these tests in
pre-commit and the buildbot farm run them in post-commit.

Bad news: You may have to update your pull requests (ex: merge master
into your branch) to retrieve this fix if the test_urllib2net failed
on Travis CI with "425 Security: Bad IP connecting" on your PR.

Victor

From njs at pobox.com  Wed Dec  5 10:18:00 2018
From: njs at pobox.com (Nathaniel Smith)
Date: Wed, 5 Dec 2018 07:18:00 -0800
Subject: [Python-Dev] test_urllib2net fixed to repair Travis CI
In-Reply-To: <CA+3bQGFZ-GLCTBV=+hugP=PSbSWixBhQEZPhWF0=whYDCwm2=w@mail.gmail.com>
References: <CA+3bQGFZ-GLCTBV=+hugP=PSbSWixBhQEZPhWF0=whYDCwm2=w@mail.gmail.com>
Message-ID: <CAPJVwB=5NqK=eSTexihtw3xmGp2tc-ujNnb+Kwz_zFHGZ62spA@mail.gmail.com>

Travis is in the middle of moving everything from AWS to GCE, which is
probably related:

https://blog.travis-ci.com/2018-11-19-required-linux-infrastructure-migration

As noted there, GCE has different IP addresses. But I suspect it's not the
new IP address that's the problem, but rather the fact that the GCE setup
is known to break outgoing ftp:

https://blog.travis-ci.com/2018-07-23-the-tale-of-ftp-at-travis-ci

-n

On Wed, Dec 5, 2018, 02:53 Victor Stinner <vstinner at redhat.com wrote:

> Hi,
>
> It seems like Travis CI changed its security or network configuration:
> some FTP tests of test_urllib2net started to fail with "425 Security:
> Bad IP connecting" yesterday:
>
>    https://bugs.python.org/issue35411
>
> The failure seems to be reproducible and so prevents to merge any
> change in any branch. It blocked our whole workflow :-(
>
> Good news: I quickly fixed the CI! (2.7, 3.6, 3.7 and master branches)
> I skipped the test on Travis CI: AppVeyor runs these tests in
> pre-commit and the buildbot farm run them in post-commit.
>
> Bad news: You may have to update your pull requests (ex: merge master
> into your branch) to retrieve this fix if the test_urllib2net failed
> on Travis CI with "425 Security: Bad IP connecting" on your PR.
>
> Victor
> _______________________________________________
> Python-Dev mailing list
> Python-Dev at python.org
> https://mail.python.org/mailman/listinfo/python-dev
> Unsubscribe:
> https://mail.python.org/mailman/options/python-dev/njs%40pobox.com
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mail.python.org/pipermail/python-dev/attachments/20181205/7cc8559e/attachment.html>

From noreply at pypi.org  Wed Dec  5 15:01:53 2018
From: noreply at pypi.org (PyPI)
Date: Wed, 5 Dec 2018 20:01:53 +0000
Subject: [Python-Dev] [PyPI] Email verification
Message-ID: <010101677ff66451-5cf87aad-b3f5-49f6-aa10-e42c74fb9d74-000000@us-west-2.amazonses.com>


Someone, perhaps you, has added this email address to their PyPI account:

  Python-dev at python.org

If you wish to proceed with this request, follow the link below to verify your
email address:

  https://pypi.org/account/verify-email/?token=eyJhY3Rpb24iOiJlbWFpbC12ZXJpZnkiLCJlbWFpbC5pZCI6IjMyODU0NyJ9.XAgusA.38y3N4T1GonyEeWWpwxm6bE7cn-JDJe0P6LD0tom2vV5WFoS-DDNrUs22weH1UK8kWsqaIhneX9J7tof-my0Jw

This link will expire in 72 hours.

If you did not make this request, you can safely ignore this email.



-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mail.python.org/pipermail/python-dev/attachments/20181205/4f49d538/attachment.html>

From brett at python.org  Wed Dec  5 19:28:43 2018
From: brett at python.org (Brett Cannon)
Date: Wed, 5 Dec 2018 16:28:43 -0800
Subject: [Python-Dev] [PyPI] Email verification
In-Reply-To: <010101677ff66451-5cf87aad-b3f5-49f6-aa10-e42c74fb9d74-000000@us-west-2.amazonses.com>
References: <010101677ff66451-5cf87aad-b3f5-49f6-aa10-e42c74fb9d74-000000@us-west-2.amazonses.com>
Message-ID: <CAP1=2W5hdPr816cFE4hcKp_CzjifqYjJbSMAtmcz6QDiT8n6Lw@mail.gmail.com>

I've reported this to infrastructure at .

On Wed., Dec. 5, 2018, 12:05 PyPI <noreply at pypi.org wrote:

> Someone, perhaps you, has added this email address (Python-dev at python.org)
> to their PyPI account.
>
> If you wish to proceed with this request, click this link to verify your
> email address
> <https://pypi.org/account/verify-email/?token=eyJhY3Rpb24iOiJlbWFpbC12ZXJpZnkiLCJlbWFpbC5pZCI6IjMyODU0NyJ9.XAgusA.38y3N4T1GonyEeWWpwxm6bE7cn-JDJe0P6LD0tom2vV5WFoS-DDNrUs22weH1UK8kWsqaIhneX9J7tof-my0Jw>
>
> This link will expire in 72 hours.
>
> If you did not make this request, you can safely ignore this email.
> _______________________________________________
> Python-Dev mailing list
> Python-Dev at python.org
> https://mail.python.org/mailman/listinfo/python-dev
> Unsubscribe:
> https://mail.python.org/mailman/options/python-dev/brett%40python.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mail.python.org/pipermail/python-dev/attachments/20181205/323d6a86/attachment.html>

