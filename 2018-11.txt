From steve.dower at python.org  Thu Nov  1 11:38:24 2018
From: steve.dower at python.org (Steve Dower)
Date: Thu, 1 Nov 2018 08:38:24 -0700
Subject: [Python-Dev] Rename Include/internals/ to Include/pycore/
In-Reply-To: <CALFfu7BrLThnaMXQEd+wSsmzka8o+OkcGhwzktamLzNpF=OkZg@mail.gmail.com>
References: <CA+3bQGE7UriagGc_FYuM7ge5oGX+6+_w2c3HY1WDj8JY=6FuzQ@mail.gmail.com>
 <CALFfu7DFq=9QEaTT=sy-XK=B+X1f+qjo7YnMD37HVGRGKu54mg@mail.gmail.com>
 <CA+3bQGFpcUiu_oyZWrU9POKSVhKYh98F-caoFk1xnhQgR6frMA@mail.gmail.com>
 <CA+3bQGEgMc1T+UTavAcONFxTsq=ERsCjmZYP7W_3W_yJTAhosQ@mail.gmail.com>
 <CALFfu7DqTYquUpv1Rk2Q8+Mi+OKoQsuKxWKOaC5Mk+Ffj+i2HQ@mail.gmail.com>
 <CA+3bQGEE8Ji+CWNx-LL2ambgyqa2MQz781f+WX=yWbqLkWA=nA@mail.gmail.com>
 <CALFfu7Atg1TZzGjAdaRVzXAdhG5MZ4o81AbKwK5G-N84qn8N5g@mail.gmail.com>
 <CA+3bQGHoe9hoqXX146Uc=7WABLG+8vZ=33Lc63ONiM9jQ54OCw@mail.gmail.com>
 <CALFfu7BrLThnaMXQEd+wSsmzka8o+OkcGhwzktamLzNpF=OkZg@mail.gmail.com>
Message-ID: <67172f5d-ca9e-c924-5970-b28d6876ce33@python.org>

I assume the redundancy was there to handle the naming collision 
problem, but a better way to do that is to have only header files that 
users should ever use in "include/", and put the rest inside 
"include/python/" and "include/internal/" (and if possible, we don't 
distribute the internal directory as part of -develop packages, which 
only really impacts the Windows installer as far as we're concerned, but 
I assume some distros will care).

That would mean a layout like:

include/
   Python.h
   typeslots.h
   Python/
     abstract.h
     ...
   internal/
     pycore_atomic.h
     ...

End users/distutils should only -Iinclude, while our build can 
-Iinclude/Python and -Iinclude/internal as well. Or we can update all of 
our includes to specify the directory (which I'd prefer - #include 
"name.h" should look adjacent to the file first, while #include <name.h> 
looks at search paths first, which should be able to deal with collisions).

Any change here is an improvement, though. I'll be happy for 
Py_BUILD_CORE to go away (or at least only imply -Iinclude/internal, 
rather than actual preprocessor work), no matter where files land 
precisely :)

Cheers,
Steve

On 31Oct2018 1835, Eric Snow wrote:
> On the one hand dropping redundancy in the filename is fine.? On the 
> other having the names mirror the public header files is valuable.? How 
> about leaving the base names alone and change the directory to "pyinternal"?
> 
> -eric
> 
> On Wed, Oct 31, 2018, 17:36 Victor Stinner <vstinner at redhat.com 
> <mailto:vstinner at redhat.com> wrote:
> 
>     Ok, thanks. I decided to remove the redundant "py", so I renamed
>     "pystate.h" to "pycore_state.h" (single "py", instead of
>     "pycore_pystate.h", double "py py").
> 
>     I updated my PR:
>     https://github.com/python/cpython/pull/10263
> 
>     * Rename Include/internal/ header files:
> 
>      ? * pyatomic.h -> pycore_atomic.h
>      ? * ceval.h -> pycore_ceval.h
>      ? * condvar.h -> pycore_condvar.h
>      ? * context.h -> pycore_context.h
>      ? * pygetopt.h -> pycore_getopt.h
>      ? * gil.h -> pycore_gil.h
>      ? * hamt.h -> pycore_hamt.h
>      ? * hash.h -> pycore_hash.h
>      ? * mem.h -> pycore_mem.h
>      ? * pystate.h -> pycore_state.h
>      ? * warnings.h -> pycore_warnings.h
> 
>     * PCbuild project, Makefile.pre.in <http://Makefile.pre.in>,
>     Modules/Setup: add the
>      ? Include/internal/ directory to the search paths of header files.
>     * Update include. For example, replace #include "internal/mem.h"
>      ? with #include "pycore_mem.h".
> 
>     Victor
>     Le mer. 31 oct. 2018 ? 23:38, Eric Snow <ericsnowcurrently at gmail.com
>     <mailto:ericsnowcurrently at gmail.com>> a ?crit :
>      >
>      > B
>      > On Wed, Oct 31, 2018 at 4:28 PM Victor Stinner
>     <vstinner at redhat.com <mailto:vstinner at redhat.com>> wrote:
>      > >
>      > > Le mer. 31 oct. 2018 ? 22:19, Eric Snow
>     <ericsnowcurrently at gmail.com <mailto:ericsnowcurrently at gmail.com>> a
>     ?crit :
>      > > > > Maybe we can keep "Include/internal/" directory name, but add
>      > > > > "pycore_" rather than "internal_" to header filenames?
>      > > >
>      > > > this sounds good to me.? thanks for chasing this down.
>      > >
>      > > What do you prefer?
>      > >
>      > > (A Include/internal/internal_pystate.h
>      > > (B) Include/internal/pycore_pystate.h
>      > > (C) Include/pycore/pycore_pystate.h
>      > >
>      > > Victor
> 


From vstinner at redhat.com  Thu Nov  1 14:19:51 2018
From: vstinner at redhat.com (Victor Stinner)
Date: Thu, 1 Nov 2018 19:19:51 +0100
Subject: [Python-Dev] Rename Include/internals/ to Include/pycore/
In-Reply-To: <67172f5d-ca9e-c924-5970-b28d6876ce33@python.org>
References: <CA+3bQGE7UriagGc_FYuM7ge5oGX+6+_w2c3HY1WDj8JY=6FuzQ@mail.gmail.com>
 <CALFfu7DFq=9QEaTT=sy-XK=B+X1f+qjo7YnMD37HVGRGKu54mg@mail.gmail.com>
 <CA+3bQGFpcUiu_oyZWrU9POKSVhKYh98F-caoFk1xnhQgR6frMA@mail.gmail.com>
 <CA+3bQGEgMc1T+UTavAcONFxTsq=ERsCjmZYP7W_3W_yJTAhosQ@mail.gmail.com>
 <CALFfu7DqTYquUpv1Rk2Q8+Mi+OKoQsuKxWKOaC5Mk+Ffj+i2HQ@mail.gmail.com>
 <CA+3bQGEE8Ji+CWNx-LL2ambgyqa2MQz781f+WX=yWbqLkWA=nA@mail.gmail.com>
 <CALFfu7Atg1TZzGjAdaRVzXAdhG5MZ4o81AbKwK5G-N84qn8N5g@mail.gmail.com>
 <CA+3bQGHoe9hoqXX146Uc=7WABLG+8vZ=33Lc63ONiM9jQ54OCw@mail.gmail.com>
 <CALFfu7BrLThnaMXQEd+wSsmzka8o+OkcGhwzktamLzNpF=OkZg@mail.gmail.com>
 <67172f5d-ca9e-c924-5970-b28d6876ce33@python.org>
Message-ID: <CA+3bQGF0V93i+YA_tgfAfiPVXiSMqf-W16Q9rVU5M=q-KGbwnw@mail.gmail.com>

Le jeu. 1 nov. 2018 ? 16:38, Steve Dower <steve.dower at python.org> a ?crit :
> I assume the redundancy was there to handle the naming collision
> problem, but a better way to do that is to have only header files that
> users should ever use in "include/", and put the rest inside
> "include/python/" and "include/internal/" (and if possible, we don't
> distribute the internal directory as part of -develop packages, which
> only really impacts the Windows installer as far as we're concerned, but
> I assume some distros will care).

Aha, I didn't try this approach. I counted 41 Include/ header files
which are not included by Python.h:

Python-ast.h
abstract.h
asdl.h
ast.h
bitset.h
bytes_methods.h
bytesobject.h
code.h
codecs.h
datetime.h
dictobject.h
dynamic_annotations.h
errcode.h
fileobject.h
frameobject.h
graminit.h
grammar.h
longintrepr.h
marshal.h
metagrammar.h
node.h
opcode.h
osdefs.h
parsetok.h
patchlevel.h
pgen.h
pgenheaders.h
py_curses.h
pydtrace.h
pyexpat.h
pystrhex.h
pythonrun.h
pythread.h
pytime.h
setobject.h
structmember.h
symtable.h
token.h
ucnhash.h
unicodeobject.h

For Py_BUILD_CORE, there is at least datetime.h which may be a
Include/internal/ twin header.

Now I'm not sure how it's going to fit with the second step, "Move
!Py_LIMITED_API to Include/pycapi/":
https://bugs.python.org/issue35134

Victor

From status at bugs.python.org  Fri Nov  2 13:09:58 2018
From: status at bugs.python.org (Python tracker)
Date: Fri,  2 Nov 2018 18:09:58 +0100 (CET)
Subject: [Python-Dev] Summary of Python tracker Issues
Message-ID: <20181102170958.3043456D39@psf.upfronthosting.co.za>


ACTIVITY SUMMARY (2018-10-26 - 2018-11-02)
Python tracker at https://bugs.python.org/

To view or respond to any of the issues listed below, click on the issue.
Do NOT respond to this message.

Issues counts and deltas:
  open    6828 ( +5)
  closed 40071 (+66)
  total  46899 (+71)

Open issues with patches: 2720 


Issues opened (41)
==================

#35034: Add closing and iteration to threading.Queue
https://bugs.python.org/issue35034  reopened by hemflit

#35078: Allow customization of CSS class name of a month in calendar m
https://bugs.python.org/issue35078  opened by thatiparthy

#35081: Move internal headers to Include/internal/
https://bugs.python.org/issue35081  opened by vstinner

#35082: Mock.__dir__ lists deleted attributes
https://bugs.python.org/issue35082  opened by mariocj89

#35083: Fix documentation for __instancecheck__
https://bugs.python.org/issue35083  opened by joydiamond

#35084: binascii.Error: Incorrect padding
https://bugs.python.org/issue35084  opened by Tester

#35091: Objects/listobject.c: gallop functions rely on signed integer 
https://bugs.python.org/issue35091  opened by izbyshev

#35097: IDLE add doc subsection for editor windows
https://bugs.python.org/issue35097  opened by terry.reedy

#35099: Improve the IDLE - console differences doc
https://bugs.python.org/issue35099  opened by terry.reedy

#35100: urllib.parse.unquote_to_bytes: needs "escape plus" option
https://bugs.python.org/issue35100  opened by Henry Zhu

#35101: inspect.findsource breaks on class frame objects
https://bugs.python.org/issue35101  opened by orlnub123

#35103: format_exception() doesn't work with PyErr_Fetch
https://bugs.python.org/issue35103  opened by tomasheran

#35104: IDLE: On macOS, Command-M minimizes & opens "Open Module..."
https://bugs.python.org/issue35104  opened by taleinat

#35105: Document that CPython accepts "invalid" identifiers
https://bugs.python.org/issue35105  opened by vstinner

#35107: untokenize() fails on tokenize output when a newline is missin
https://bugs.python.org/issue35107  opened by gregory.p.smith

#35108: inspect.getmembers passes exceptions from object's properties 
https://bugs.python.org/issue35108  opened by rominf

#35109: Doctest in CI uses python binary built from master causing Dep
https://bugs.python.org/issue35109  opened by xtreak

#35111: Make Custom Object Classes JSON Serializable
https://bugs.python.org/issue35111  opened by andrewchap

#35113: inspect.getsource returns incorrect source for classes when cl
https://bugs.python.org/issue35113  opened by xtreak

#35114: ssl.RAND_status docs describe it as returning True/False; actu
https://bugs.python.org/issue35114  opened by josh.r

#35118: Add peek() or first() method in queue
https://bugs.python.org/issue35118  opened by Windson Yang

#35120: SSH tunnel support to ftp lib
https://bugs.python.org/issue35120  opened by msharma

#35121: Cookie domain check returns incorrect results
https://bugs.python.org/issue35121  opened by ????????????

#35122: Process not exiting on unhandled exception when using multipro
https://bugs.python.org/issue35122  opened by akhi singhania

#35123: Add style guide for sentinel usage
https://bugs.python.org/issue35123  opened by madman bob

#35124: Add style guide for unit tests
https://bugs.python.org/issue35124  opened by madman bob

#35125: asyncio shield: remove inner callback on outer cancellation
https://bugs.python.org/issue35125  opened by mainro

#35126: Mistake in FAQ about converting number to string.
https://bugs.python.org/issue35126  opened by grottrumsel

#35127: pyurandom() fails if user does not have an entropy device
https://bugs.python.org/issue35127  opened by pehdrah

#35131: Cannot access to customized paths within .pth file
https://bugs.python.org/issue35131  opened by Valentin Zhao

#35132: python-gdb error: Python Exception <class 'RuntimeError'> Type
https://bugs.python.org/issue35132  opened by Dylan Cali

#35133: Bugs in concatenating string literals on different lines
https://bugs.python.org/issue35133  opened by serhiy.storchaka

#35134: Move !Py_LIMITED_API to Include/pycapi/
https://bugs.python.org/issue35134  opened by vstinner

#35136: test_ssl fails in AMD64 FreeBSD CURRENT Shared 3.6 buildbot
https://bugs.python.org/issue35136  opened by pablogsal

#35138: timeit documentation should have example with function argumen
https://bugs.python.org/issue35138  opened by davidak

#35140: encoding problem: coding:gbk cause syntaxError
https://bugs.python.org/issue35140  opened by anmikf

#35143: Annotations future requires unparse, but not accessible from P
https://bugs.python.org/issue35143  opened by kayhayen

#35144: TemporaryDirectory can't be cleaned up if there are unsearchab
https://bugs.python.org/issue35144  opened by lilydjwg

#35145: sqlite3: "select *" should autoconvert datetime fields
https://bugs.python.org/issue35145  opened by jondo

#35147: _Py_NO_RETURN is always empty on GCC
https://bugs.python.org/issue35147  opened by izbyshev

#35148: cannot activate a venv environment on a Swiss German windows
https://bugs.python.org/issue35148  opened by Martin Bijl-Schwab



Most recent 15 issues with no replies (15)
==========================================

#35148: cannot activate a venv environment on a Swiss German windows
https://bugs.python.org/issue35148

#35143: Annotations future requires unparse, but not accessible from P
https://bugs.python.org/issue35143

#35132: python-gdb error: Python Exception <class 'RuntimeError'> Type
https://bugs.python.org/issue35132

#35131: Cannot access to customized paths within .pth file
https://bugs.python.org/issue35131

#35127: pyurandom() fails if user does not have an entropy device
https://bugs.python.org/issue35127

#35125: asyncio shield: remove inner callback on outer cancellation
https://bugs.python.org/issue35125

#35114: ssl.RAND_status docs describe it as returning True/False; actu
https://bugs.python.org/issue35114

#35103: format_exception() doesn't work with PyErr_Fetch
https://bugs.python.org/issue35103

#35100: urllib.parse.unquote_to_bytes: needs "escape plus" option
https://bugs.python.org/issue35100

#35082: Mock.__dir__ lists deleted attributes
https://bugs.python.org/issue35082

#35063: Checking for abstractmethod implementation fails to consider M
https://bugs.python.org/issue35063

#35061: Specify libffi.so soname for ctypes
https://bugs.python.org/issue35061

#35048: Can't reassign __class__ despite the assigned class having ide
https://bugs.python.org/issue35048

#35018: Sax parser provides no user access to lexical handlers
https://bugs.python.org/issue35018

#35009: argparse throws UnicodeEncodeError for printing help with unic
https://bugs.python.org/issue35009



Most recent 15 issues waiting for review (15)
=============================================

#35147: _Py_NO_RETURN is always empty on GCC
https://bugs.python.org/issue35147

#35138: timeit documentation should have example with function argumen
https://bugs.python.org/issue35138

#35134: Move !Py_LIMITED_API to Include/pycapi/
https://bugs.python.org/issue35134

#35133: Bugs in concatenating string literals on different lines
https://bugs.python.org/issue35133

#35125: asyncio shield: remove inner callback on outer cancellation
https://bugs.python.org/issue35125

#35121: Cookie domain check returns incorrect results
https://bugs.python.org/issue35121

#35118: Add peek() or first() method in queue
https://bugs.python.org/issue35118

#35101: inspect.findsource breaks on class frame objects
https://bugs.python.org/issue35101

#35097: IDLE add doc subsection for editor windows
https://bugs.python.org/issue35097

#35091: Objects/listobject.c: gallop functions rely on signed integer 
https://bugs.python.org/issue35091

#35082: Mock.__dir__ lists deleted attributes
https://bugs.python.org/issue35082

#35081: Move internal headers to Include/internal/
https://bugs.python.org/issue35081

#35078: Allow customization of CSS class name of a month in calendar m
https://bugs.python.org/issue35078

#35077: Make TypeError message less ambiguous
https://bugs.python.org/issue35077

#35065: Reading received data from a closed TCP stream using `StreamRe
https://bugs.python.org/issue35065



Top 10 most discussed issues (10)
=================================

#35081: Move internal headers to Include/internal/
https://bugs.python.org/issue35081  19 msgs

#35070: test_posix fails on macOS 10.14 Mojave
https://bugs.python.org/issue35070  14 msgs

#34160: ElementTree not preserving attribute order
https://bugs.python.org/issue34160  13 msgs

#35059: Convert Py_INCREF() and PyObject_INIT() to inlined functions
https://bugs.python.org/issue35059  13 msgs

#35084: binascii.Error: Incorrect padding
https://bugs.python.org/issue35084  12 msgs

#1154351: add get_current_dir_name() to os module
https://bugs.python.org/issue1154351  10 msgs

#35140: encoding problem: coding:gbk cause syntaxError
https://bugs.python.org/issue35140   8 msgs

#35077: Make TypeError message less ambiguous
https://bugs.python.org/issue35077   7 msgs

#19376: document that strptime() does not support the Feb 29 if the fo
https://bugs.python.org/issue19376   6 msgs

#35052: Coverity scan: copy/paste error in Lib/xml/dom/minidom.py
https://bugs.python.org/issue35052   6 msgs



Issues closed (64)
==================

#9263: Try to print repr() when an C-level assert fails (in the garba
https://bugs.python.org/issue9263  closed by vstinner

#27200: make doctest in CPython has failures
https://bugs.python.org/issue27200  closed by mdk

#27741: datetime.datetime.strptime functionality description incorrect
https://bugs.python.org/issue27741  closed by vstinner

#28015: configure --with-lto builds fail when CC=clang on Linux, requi
https://bugs.python.org/issue28015  closed by vstinner

#29174: 'NoneType' object is not callable in subprocess.py
https://bugs.python.org/issue29174  closed by vstinner

#31544: gettext.Catalog title is not flagged as a class
https://bugs.python.org/issue31544  closed by serhiy.storchaka

#31680: Expose curses library name and version on Python level
https://bugs.python.org/issue31680  closed by serhiy.storchaka

#31880: subprocess process interaction with IDLEX GUI causes pygnuplot
https://bugs.python.org/issue31880  closed by roger.serwy

#32804: urllib.retrieve documentation doesn't mention context paramete
https://bugs.python.org/issue32804  closed by xiang.zhang

#33138: Improve standard error for uncopyable types
https://bugs.python.org/issue33138  closed by serhiy.storchaka

#33236: MagicMock().__iter__.return_value is different from MagicMock(
https://bugs.python.org/issue33236  closed by michael.foord

#33237: Improve AttributeError message for partially initialized modul
https://bugs.python.org/issue33237  closed by serhiy.storchaka

#33331: Clean modules in the reversed order
https://bugs.python.org/issue33331  closed by serhiy.storchaka

#33710: Deprecate gettext.lgettext()
https://bugs.python.org/issue33710  closed by serhiy.storchaka

#33826: enable discovery of class source code in IPython interactively
https://bugs.python.org/issue33826  closed by t-vi

#33940: datetime.strptime have no directive to convert date values wit
https://bugs.python.org/issue33940  closed by belopolsky

#34198: Additional encoding options to tkinter.filedialog
https://bugs.python.org/issue34198  closed by narito

#34576: [EASY doc] http.server, SimpleHTTPServer: warn users on securi
https://bugs.python.org/issue34576  closed by orsenthil

#34794: Memory leak in Tkinter
https://bugs.python.org/issue34794  closed by serhiy.storchaka

#34866: CGI DOS vulnerability via long post list
https://bugs.python.org/issue34866  closed by vstinner

#34876: Python3.8 changes how decorators are traced
https://bugs.python.org/issue34876  closed by serhiy.storchaka

#34945: regression with ./python -m test and pdb
https://bugs.python.org/issue34945  closed by pablogsal

#35007: Minor change to weakref docs
https://bugs.python.org/issue35007  closed by mdk

#35042: Use the role :pep: for the PEP \d+
https://bugs.python.org/issue35042  closed by mdk

#35047: Better error messages in unittest.mock
https://bugs.python.org/issue35047  closed by vstinner

#35054: Add more index entries for symbols
https://bugs.python.org/issue35054  closed by serhiy.storchaka

#35062: io.IncrementalNewlineDecoder assign out-of-range value to bitw
https://bugs.python.org/issue35062  closed by xiang.zhang

#35064: COUNT_ALLOCS build export inc_count() and dec_count() function
https://bugs.python.org/issue35064  closed by pablogsal

#35067: Use vswhere instead of _distutils_findvs
https://bugs.python.org/issue35067  closed by steve.dower

#35068: [2.7] Possible crashes due to incorrect error handling in pyex
https://bugs.python.org/issue35068  closed by serhiy.storchaka

#35074: source install [3.7.1] on debian jessie
https://bugs.python.org/issue35074  closed by xtreak

#35075: Doc: pprint example uses dead URL
https://bugs.python.org/issue35075  closed by inada.naoki

#35076: FAIL: test_min_max_version (test.test_ssl.ContextTests) with l
https://bugs.python.org/issue35076  closed by terry.reedy

#35079: difflib.SequenceMatcher.get_matching_blocks omits common strin
https://bugs.python.org/issue35079  closed by terry.reedy

#35080: The tests for the `dis` module can be too rigid when changing 
https://bugs.python.org/issue35080  closed by Maxime Belanger

#35085: FileNotFoundError: [Errno 2] No such file or directory:
https://bugs.python.org/issue35085  closed by steven.daprano

#35086: tkinter docs: errors in A Simple Hello World Program
https://bugs.python.org/issue35086  closed by serhiy.storchaka

#35087: IDLE: update idlelib help files for current doc build
https://bugs.python.org/issue35087  closed by terry.reedy

#35088: Update idlelib.help.copy_string docstring
https://bugs.python.org/issue35088  closed by terry.reedy

#35089: Remove typing.io and typing.re from documentation
https://bugs.python.org/issue35089  closed by levkivskyi

#35090: Potential division by zero and integer overflow in allocator w
https://bugs.python.org/issue35090  closed by vstinner

#35092: test_socket fails in MacOS High Sierra when running with -Werr
https://bugs.python.org/issue35092  closed by ned.deily

#35093: IDLE: document the help document viewer
https://bugs.python.org/issue35093  closed by terry.reedy

#35094: Improved algorithms for random.sample
https://bugs.python.org/issue35094  closed by rhettinger

#35095: Implement pathlib.Path.append_bytes and pathlib.Path.append_te
https://bugs.python.org/issue35095  closed by pablogsal

#35096: Change _PY_VERSION to derive from sys.version_info in sysconfi
https://bugs.python.org/issue35096  closed by ned.deily

#35098: Deleting __new__ does not restore previous behavior
https://bugs.python.org/issue35098  closed by josh.r

#35102: Struct pack()
https://bugs.python.org/issue35102  closed by mark.dickinson

#35106: Add documentation for `type.__subclasses__` to docs.python.org
https://bugs.python.org/issue35106  closed by joydiamond

#35110: Fix more spaces around hyphens and dashes
https://bugs.python.org/issue35110  closed by serhiy.storchaka

#35112: SpooledTemporaryFile and seekable() method
https://bugs.python.org/issue35112  closed by nubirstein

#35115: UUID objects can't be casted by `hex()`
https://bugs.python.org/issue35115  closed by fcurella

#35116: Doc/library entries for cgi.FieldStorage max_num_fields
https://bugs.python.org/issue35116  closed by vstinner

#35117: set.discard should return True or False based on if element ex
https://bugs.python.org/issue35117  closed by rhettinger

#35119: Customizing module attribute access example raises RecursionEr
https://bugs.python.org/issue35119  closed by levkivskyi

#35128: warning.warn messages with spacing issues
https://bugs.python.org/issue35128  closed by scorphus

#35129: Different behaviour comparing versions (distutils.version.Loos
https://bugs.python.org/issue35129  closed by eric.araujo

#35130: add same file name to zipfile ,result two files and same md5
https://bugs.python.org/issue35130  closed by serhiy.storchaka

#35135: pip install --download option does not exist
https://bugs.python.org/issue35135  closed by zach.ware

#35137: Exception in isinstance when __class__ property raises
https://bugs.python.org/issue35137  closed by brett.cannon

#35139: Statically linking pyexpat in Modules/Setup fails to compile o
https://bugs.python.org/issue35139  closed by benjamin.peterson

#35141: encoding problem: gbk
https://bugs.python.org/issue35141  closed by xtreak

#35142: html.entities.html5 should require a trailing semicolon
https://bugs.python.org/issue35142  closed by serhiy.storchaka

#35146: Bad Regular Expression Broke re.findall()
https://bugs.python.org/issue35146  closed by steven.daprano

From nas-python at arctrix.com  Fri Nov  2 13:22:38 2018
From: nas-python at arctrix.com (Neil Schemenauer)
Date: Fri, 2 Nov 2018 11:22:38 -0600
Subject: [Python-Dev] Rename Include/internals/ to Include/pycore/
In-Reply-To: <1540759207.1168671.1557524968.5CFA99F3@webmail.messagingengine.com>
References: <CA+3bQGE7UriagGc_FYuM7ge5oGX+6+_w2c3HY1WDj8JY=6FuzQ@mail.gmail.com>
 <1540759207.1168671.1557524968.5CFA99F3@webmail.messagingengine.com>
Message-ID: <20181102172238.u7ysgkpj2b7aids5@python.ca>

On 2018-10-28, Benjamin Peterson wrote:
> I don't think more or less API should be magically included based
> on whether Py_BUILD_CORE is defined or not.

I agree.

> If we want to have private headers, we should include them where
> needed and not install them. Really, Py_BUILD_CORE should go away.
> We should be moving away from monolithic includes like Python.h to
> having each C file include exactly what it uses, private or not.

It seems that is best practice (e.g. look at Linux kernel include
file style).  I wonder however what are the real benefits to having
modular include files and directly using them as needed?

Pros for modular includes:

- speeds up build process if you have good dependency info in the
  build system.  Right now, change Python.h and everything gets
  rebuilt.  I'm not sure this is a huge advantage anymore.

- makes it clearer where an API is implemented?

Cons:

- more work to include the correct headers

- build system dependency definitions are more complicated.  Other
  systems generally have automatic dependancy generates (i.e. parse
  C files and find used includes).

A simple approach would be to introduce something like
Python-internal.h.  If you are a Python internal unit, you can
include both Python.h and Python-internal.h.  We could, over time,
split Python-iternal.h into smaller modular includes.

From vstinner at redhat.com  Fri Nov  2 15:01:30 2018
From: vstinner at redhat.com (Victor Stinner)
Date: Fri, 2 Nov 2018 20:01:30 +0100
Subject: [Python-Dev] Rename Include/internals/ to Include/pycore/
In-Reply-To: <20181102172238.u7ysgkpj2b7aids5@python.ca>
References: <CA+3bQGE7UriagGc_FYuM7ge5oGX+6+_w2c3HY1WDj8JY=6FuzQ@mail.gmail.com>
 <1540759207.1168671.1557524968.5CFA99F3@webmail.messagingengine.com>
 <20181102172238.u7ysgkpj2b7aids5@python.ca>
Message-ID: <CA+3bQGHoS+uToYCa=fLtPzDLdBmDu+f8EU0EFOhwCfu92rh3tA@mail.gmail.com>

Le ven. 2 nov. 2018 ? 18:32, Neil Schemenauer <nas-python at arctrix.com> a ?crit :
> A simple approach would be to introduce something like
> Python-internal.h.  If you are a Python internal unit, you can
> include both Python.h and Python-internal.h.  We could, over time,
> split Python-iternal.h into smaller modular includes.

Since this discussion, I already moved most Py_BUILD_CORE in
Include/internal/. I added a lot of #include "pycore_xxx.h" in C
files.

I started to reach the limit with this PR which adds the
pycore_object.h include to not less than 33 C files:
https://github.com/python/cpython/pull/10272

I rewrote this PR to avoid the need to modify 33 C files:
https://github.com/python/cpython/pull/10276/files

I added the following code to Python.h:

#ifdef Py_BUILD_CORE
/* bpo-35081: Automatically include pycore_object.h in Python.h, to avoid
to have to add an explicit #include "pycore_object.h" to each C file. */
# include "pycore_object.h"
#endif

I'm not sure of it's a temporary workaround or not :-) Maybe a
Python-internal.h would be a better solution? We can identify the most
common header files needed to access "Python internals" and put them
in this "common" header file.

For example, most C files using Python internals have to access
_PyRuntime global variable (55 C files), so "pycore_state.h" is a good
candidate.

By the way, I don't understand the rationale to have _PyRuntime in
pycore_state.h. IMHO pycore_state.h should only contain functions to
get the Python thread and Python interpreter states. IMHO _PyRuntime
is unrelated and should belong to a different header file, maybe
pycore_runtime.h? I didn't do this change yet *because* I would have
to modify the 55 files currently including it.

Victor

From brett at python.org  Fri Nov  2 18:24:20 2018
From: brett at python.org (Brett Cannon)
Date: Fri, 2 Nov 2018 15:24:20 -0700
Subject: [Python-Dev] PEP 543-conform TLS library
In-Reply-To: <3A7C8D1D-FA3F-46AF-8EC8-540D407EC825@gmail.com>
References: <3A7C8D1D-FA3F-46AF-8EC8-540D407EC825@gmail.com>
Message-ID: <CAP1=2W5FOVtnAk5_pj0_=xA9Gt9=qOCx-KixSD80Ree=rRu5UA@mail.gmail.com>

In case you never received a reply, you can try emailing Christian and Cory
directly for an answer.

On Fri, 26 Oct 2018 at 13:20, Mathias Laurin <mathias.laurin at gmail.com>
wrote:

> Hello Python Dev,
>
>
> I posted the following to python-ideas but here may be
> a more suitable place.  I apologize if cross posting
> bothers anyone.
>
>
> I have implemented an (I believe) PEP 543-conform TLS library
> and released TLS support in the latest version yesterday:
>
> https://github.com/Synss/python-mbedtls/tree/0.13.0
> https://pypi.org/project/python-mbedtls/0.13.0/
>
>
> As far as I know, I am the first one to follow PEP 543.  So one
> point is that the API works.  However, I have a couple of
> questions regarding the PEP:
>
> - I do not know what to do in `TLSWrappedBuffer.do_handshake()`.
>  The full TLS handshake requires writing to the server, reading
>  back, etc., (ClientHello, ServerHello, KeyExchange, etc.),
>  which cannot be accomplished in a single buffer.
>
>  For now, I am doing the handshake in
>  `TLSWrappedSocket.do_handshake()`: I set the BIO to using the
>  socket directly, then perform the handshake on the socket thus
>  entirely bypassing the TLSWrappedBuffer.  Once this is done, I
>  swap the BIO to using the buffer and go on encrypting and
>  decrypting from the buffer.  That is, the encrypted
>  communication is buffered.
>
> - The PEP sometimes mentions an "input buffer" and an "output
>  buffer", and some other times just "the buffer".  I believe
>  that both implementations are possible.  That is, with two
>  different buffers for input and output, or a single one.
>
>  I have implemented it with a single circular buffer (that is a
>  stream after all).  What the PEP is expecting is nonetheless
>  not clear to me.
>
>
> So, can anybody clarify these two points from the PEP?
>
>
> Or should I just address Cory Benfield (who does not seem very
> active anymore lately) and Christian Heimes directly?
>
>
> Cheers,
> Mathias
> _______________________________________________
> Python-Dev mailing list
> Python-Dev at python.org
> https://mail.python.org/mailman/listinfo/python-dev
> Unsubscribe:
> https://mail.python.org/mailman/options/python-dev/brett%40python.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mail.python.org/pipermail/python-dev/attachments/20181102/315b7850/attachment.html>

From barry at barrys-emacs.org  Sat Nov  3 05:08:38 2018
From: barry at barrys-emacs.org (Barry Scott)
Date: Sat, 3 Nov 2018 09:08:38 +0000
Subject: [Python-Dev] windows compiler list missing 3.7 details on wiki
Message-ID: <16BCAA90-23DF-4B6A-8A78-DEB397109133@barrys-emacs.org>

On https://wiki.python.org/moin/WindowsCompilers details for 3.7 are missing.
I'm assuming its still VC V14

Barry


From steve.dower at python.org  Sat Nov  3 13:57:15 2018
From: steve.dower at python.org (Steve Dower)
Date: Sat, 3 Nov 2018 10:57:15 -0700
Subject: [Python-Dev] windows compiler list missing 3.7 details on wiki
In-Reply-To: <16BCAA90-23DF-4B6A-8A78-DEB397109133@barrys-emacs.org>
References: <16BCAA90-23DF-4B6A-8A78-DEB397109133@barrys-emacs.org>
Message-ID: <bfcde3d4-b290-6d3d-f315-7cd3076882ea@python.org>

Yes. Visual Studio 2015 or later can be used (and as this is the only 
way to get the compiler right now, I think it's fine to list that as the 
requirement - note that the "Visual Studio Build Tools" installer 
doesn't include the IDE itself).

Feel free to update the wiki.

Cheers,
Steve

On 03Nov2018 0208, Barry Scott wrote:
> On https://wiki.python.org/moin/WindowsCompilers details for 3.7 are missing.
> I'm assuming its still VC V14
> 
> Barry


From debatem1 at gmail.com  Sat Nov  3 20:59:18 2018
From: debatem1 at gmail.com (geremy condra)
Date: Sat, 3 Nov 2018 17:59:18 -0700
Subject: [Python-Dev] PEP 543-conform TLS library
In-Reply-To: <CAP1=2W5FOVtnAk5_pj0_=xA9Gt9=qOCx-KixSD80Ree=rRu5UA@mail.gmail.com>
References: <3A7C8D1D-FA3F-46AF-8EC8-540D407EC825@gmail.com>
 <CAP1=2W5FOVtnAk5_pj0_=xA9Gt9=qOCx-KixSD80Ree=rRu5UA@mail.gmail.com>
Message-ID: <CAJ=m_n67LUz1C6HYV6YonN5oRsF51xgOstU5AxD=qpzgmqyJFg@mail.gmail.com>

Not to derail this thread, but it may be worth looking into something like
Android's network security config (
https://developer.android.com/training/articles/security-config) in
relation to PEP 543.

One of the key takeaways from their analysis of a large number of
applications which touched TLS libraries was that their developers often
wanted to do simple and sane things but wound up doing complicated and
insane ones. To combat that, they created a fairly lightweight declarative
syntax for allowing narrow deviations from best practice. This syntax does
not have the full flexibility of their API, but is enough to satisfy the
needs of lots of developers and prevent lots of mistakes along the way.

In particular, I'd love to see some examples of how to achieve the same
effects as the canonical network security config examples using a PEP 543
interface. If they're useful enough it may even be beneficial to wrap those
up in a separate library, but at the very least it will help prove out that
PEP 543 can do the most important things that developers will want it to
do. If that already exists and I'm just ignorant of it, sorry for the noise.

Geremy Condra

On Fri, Nov 2, 2018 at 3:25 PM Brett Cannon <brett at python.org> wrote:

> In case you never received a reply, you can try emailing Christian and
> Cory directly for an answer.
>
> On Fri, 26 Oct 2018 at 13:20, Mathias Laurin <mathias.laurin at gmail.com>
> wrote:
>
>> Hello Python Dev,
>>
>>
>> I posted the following to python-ideas but here may be
>> a more suitable place.  I apologize if cross posting
>> bothers anyone.
>>
>>
>> I have implemented an (I believe) PEP 543-conform TLS library
>> and released TLS support in the latest version yesterday:
>>
>> https://github.com/Synss/python-mbedtls/tree/0.13.0
>> https://pypi.org/project/python-mbedtls/0.13.0/
>>
>>
>> As far as I know, I am the first one to follow PEP 543.  So one
>> point is that the API works.  However, I have a couple of
>> questions regarding the PEP:
>>
>> - I do not know what to do in `TLSWrappedBuffer.do_handshake()`.
>>  The full TLS handshake requires writing to the server, reading
>>  back, etc., (ClientHello, ServerHello, KeyExchange, etc.),
>>  which cannot be accomplished in a single buffer.
>>
>>  For now, I am doing the handshake in
>>  `TLSWrappedSocket.do_handshake()`: I set the BIO to using the
>>  socket directly, then perform the handshake on the socket thus
>>  entirely bypassing the TLSWrappedBuffer.  Once this is done, I
>>  swap the BIO to using the buffer and go on encrypting and
>>  decrypting from the buffer.  That is, the encrypted
>>  communication is buffered.
>>
>> - The PEP sometimes mentions an "input buffer" and an "output
>>  buffer", and some other times just "the buffer".  I believe
>>  that both implementations are possible.  That is, with two
>>  different buffers for input and output, or a single one.
>>
>>  I have implemented it with a single circular buffer (that is a
>>  stream after all).  What the PEP is expecting is nonetheless
>>  not clear to me.
>>
>>
>> So, can anybody clarify these two points from the PEP?
>>
>>
>> Or should I just address Cory Benfield (who does not seem very
>> active anymore lately) and Christian Heimes directly?
>>
>>
>> Cheers,
>> Mathias
>> _______________________________________________
>> Python-Dev mailing list
>> Python-Dev at python.org
>> https://mail.python.org/mailman/listinfo/python-dev
>> Unsubscribe:
>> https://mail.python.org/mailman/options/python-dev/brett%40python.org
>>
> _______________________________________________
> Python-Dev mailing list
> Python-Dev at python.org
> https://mail.python.org/mailman/listinfo/python-dev
> Unsubscribe:
> https://mail.python.org/mailman/options/python-dev/debatem1%40gmail.com
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mail.python.org/pipermail/python-dev/attachments/20181103/2733b0c3/attachment.html>

From stephane at wirtel.be  Sun Nov  4 05:43:50 2018
From: stephane at wirtel.be (Stephane Wirtel)
Date: Sun, 4 Nov 2018 11:43:50 +0100
Subject: [Python-Dev] Need discussion for a PR about memory and objects
Message-ID: <20181104104350.GA12859@xps>

In this PR [https://github.com/python/cpython/pull/3382] "Remove reference to
address from the docs, as it only causes confusion", opened by Chris
Angelico, there is a discussion about the right term to use for the
address of an object in memory.

If you are interested by the topic, you could comment it.

If there is no comments then I think we could close the PR.

Thank you

St?phane

-- 
St?phane Wirtel - https://wirtel.be - @matrixise

From steve at pearwood.info  Sun Nov  4 08:03:15 2018
From: steve at pearwood.info (Steven D'Aprano)
Date: Mon, 5 Nov 2018 00:03:15 +1100
Subject: [Python-Dev] Need discussion for a PR about memory and objects
In-Reply-To: <20181104104350.GA12859@xps>
References: <20181104104350.GA12859@xps>
Message-ID: <20181104130314.GU3817@ando.pearwood.info>

On Sun, Nov 04, 2018 at 11:43:50AM +0100, Stephane Wirtel wrote:
> In this PR [https://github.com/python/cpython/pull/3382] "Remove reference 
> to
> address from the docs, as it only causes confusion", opened by Chris
> Angelico, there is a discussion about the right term to use for the
> address of an object in memory.

Why do we need to refer to the address of objects in memory?

Python's execution model is not based on addresses. We can't get the 
address of an object or do anything with it (except via ctypes). At the 
Python layer, objects just exist, they don't logically exist at any 
addressable location.

In fact, they might not exist in a single location -- compound objects 
are split across many locations or can share chunks of memory between 
multiple objects. Objects in Jython and IronPython can move about, those 
in PyPy can disappear from existence and reappear. The concept that 
every object has exactly one fixed location simply isn't correct.

I understand that people wishing to understand the implementation 
details of CPython objects will need to think about C-level concepts 
like memory address, but at the Python level, "address" is not a very 
meaningful or useful concept.


-- 
Steve

From stephane at wirtel.be  Sun Nov  4 08:38:27 2018
From: stephane at wirtel.be (Stephane Wirtel)
Date: Sun, 4 Nov 2018 14:38:27 +0100
Subject: [Python-Dev] Get a running instance of the doc for a PR.
Message-ID: <20181104133827.GA25586@xps>

Hi all,

When we receive a PR about the documentation, I think that could be
interesting if we could have a running instance of the doc on a sub
domain of python.org.

For example, pr-10000-doc.python.org or whatever, but by this way the
reviewers could see the result online.

The workflow would be like that:

New PR -> build the doc (done by Travis) -> publish it to a server ->
once published, the PR is notified by "doc is available at URL".

Once merged -> we remove the doc and the link (hello bedevere).

I am interested by this feature and if you also interested, tell me.
I would like discuss with Julien Palard and Ernest W.  Durbin III for a
solution as soon as possible.

Have a nice day,

St?phane

-- 
St?phane Wirtel - https://wirtel.be - @matrixise

From nad at python.org  Sun Nov  4 09:15:22 2018
From: nad at python.org (Ned Deily)
Date: Sun, 4 Nov 2018 09:15:22 -0500
Subject: [Python-Dev] Get a running instance of the doc for a PR.
In-Reply-To: <20181104133827.GA25586@xps>
References: <20181104133827.GA25586@xps>
Message-ID: <203B5254-326E-43EC-A80D-4A8147791A9D@python.org>

On Nov 4, 2018, at 08:38, Stephane Wirtel <stephane at wirtel.be> wrote:
> When we receive a PR about the documentation, I think that could be
> interesting if we could have a running instance of the doc on a sub
> domain of python.org.
> 
> For example, pr-10000-doc.python.org or whatever, but by this way the
> reviewers could see the result online.

It's an interesting idea but I don't like essentially opening python.org as a publishing platform (OK, another publishing platform - yes, I know about wiki.python.org).  Considering how easy it is to build and view the docs yourself, I don't think the benefits of such a service are worth the added complexity and potential abuse.

cd Doc
make venv # first time
git pr checkout ...
make html
open build/html/index.html  # depending on platform and code change


--
  Ned Deily
  nad at python.org -- []


From julien at palard.fr  Sun Nov  4 10:00:35 2018
From: julien at palard.fr (Julien Palard)
Date: Sun, 04 Nov 2018 15:00:35 +0000
Subject: [Python-Dev] Get a running instance of the doc for a PR.
In-Reply-To: <203B5254-326E-43EC-A80D-4A8147791A9D@python.org>
References: <20181104133827.GA25586@xps>
 <203B5254-326E-43EC-A80D-4A8147791A9D@python.org>
Message-ID: <dCNWpHselG_mmIFYqAYmu_MD8TGQMlu4rmE68Fc3aPJvMldn-P4FnrRDP7J3AxG9H3QNPO4y1P_WE-OGAkn0iQgiqEuijK0Ezbzl40LzV68=@palard.fr>

Considering feedback from Ned, what about building this as an independent service? We don't really need to interface with python.org at all, we just need some hardware, a domain, some code to interface with github API and... to start it's probably enough? It would be a usefull POC.

--?
Julien Palard
https://mdk.fr


From stephane at wirtel.be  Sun Nov  4 10:12:39 2018
From: stephane at wirtel.be (Stephane Wirtel)
Date: Sun, 4 Nov 2018 16:12:39 +0100
Subject: [Python-Dev] Get a running instance of the doc for a PR.
In-Reply-To: <203B5254-326E-43EC-A80D-4A8147791A9D@python.org>
References: <20181104133827.GA25586@xps>
 <203B5254-326E-43EC-A80D-4A8147791A9D@python.org>
Message-ID: <20181104151239.GA14162@xps>

On 11/04, Ned Deily wrote:
>On Nov 4, 2018, at 08:38, Stephane Wirtel <stephane at wirtel.be> wrote:
>> When we receive a PR about the documentation, I think that could be
>> interesting if we could have a running instance of the doc on a sub
>> domain of python.org.
>>
>> For example, pr-10000-doc.python.org or whatever, but by this way the
>> reviewers could see the result online.
>
>It's an interesting idea but I don't like essentially opening
>python.org as a publishing platform (OK, another publishing platform -
>yes, I know about wiki.python.org).  Considering how easy it is to
>build and view the docs yourself, I don't think the benefits of such a
>service are worth the added complexity and potential abuse.
>
>cd Doc
>make venv # first time
>git pr checkout ...
>make html
>open build/html/index.html  # depending on platform and code change

I am going to give your 3 counter-examples but I think you will find an
other counter-example ;-)

1. Two weeks ago, I have opened a PR
[https://github.com/python/cpython/pull/10009] about a rewording of a
sentence in the doc. Paul Ganssle was a reviewer and in a sentence he
said that would be nice to have a live preview of the docs on PR.
See https://github.com/python/cpython/pull/10009#issuecomment-433082605
Maybe he was on his smartphone/tablet and not in front of his computer.

2. On this morning, I was reviewing a PR
https://github.com/python/cpython/pull/10102, but the message from the
reviewer was "LGTM. Thanks for the PR ;-)". I don't doubt about the
reviewer but I want to check the result of sphinx and not just the
text, sometimes, we can find an other issue, you never know.

3. On this after-noon, I have reviewed a PR, and I was in the same case,
download the PR, build python, compile the doc and run the local server.

My workflow is the following steps:

git wpr XYZ
cd ../cpython-XYZ
./configure --prefix=$PWD-build --with-pydebug --silent
make -j 4 -s
make PYTHON=../python -C Doc/ venv
make -C Doc/ check suspicious html serve

and run the browser on http://localhost:8000/ and check the result.


1. Because I am a dev I can do it easily
2. If you are not a dev, you have to learn a new step (download sources,
compile sources, compile doc and check the result)

We could check easily the result without this big step.

git wpr -> wpr = !bash -c \"git fetch upstream pull/${1}/head:pr_${1} && git worktree add ../$(basename $(git rev-parse --show-toplevel))-pr-${1} pr_${1}\" -

I think this feature would be really useful for the contributors, the
reviewers and you, the core-dev.

St?phane

-- 
St?phane Wirtel - https://wirtel.be - @matrixise

From rosuav at gmail.com  Sun Nov  4 10:18:11 2018
From: rosuav at gmail.com (Chris Angelico)
Date: Mon, 5 Nov 2018 02:18:11 +1100
Subject: [Python-Dev] Get a running instance of the doc for a PR.
In-Reply-To: <dCNWpHselG_mmIFYqAYmu_MD8TGQMlu4rmE68Fc3aPJvMldn-P4FnrRDP7J3AxG9H3QNPO4y1P_WE-OGAkn0iQgiqEuijK0Ezbzl40LzV68=@palard.fr>
References: <20181104133827.GA25586@xps>
 <203B5254-326E-43EC-A80D-4A8147791A9D@python.org>
 <dCNWpHselG_mmIFYqAYmu_MD8TGQMlu4rmE68Fc3aPJvMldn-P4FnrRDP7J3AxG9H3QNPO4y1P_WE-OGAkn0iQgiqEuijK0Ezbzl40LzV68=@palard.fr>
Message-ID: <CAPTjJmoci5NhiEqGnZ9dZ4odfYHA+1=UDOMJogr4_oZeJCbzZA@mail.gmail.com>

On Mon, Nov 5, 2018 at 2:11 AM Julien Palard via Python-Dev
<python-dev at python.org> wrote:
>
> Considering feedback from Ned, what about building this as an independent service? We don't really need to interface with python.org at all, we just need some hardware, a domain, some code to interface with github API and... to start it's probably enough? It would be a usefull POC.
>

After running 'make html', the build directory is the entire site as a
set of static files, right? Maybe the easiest solution is to tie in
with GitHub Pages. I already have a script that will push a directory
up as the gh-pages branch of the current repo; it'd just need a tweak
so it can push to a specific repo, which you could create on GitHub
for the purpose. Not 100% automatic, but also not too difficult to
automate, if needed.

https://github.com/Rosuav/shed/blob/master/git-deploy

ChrisA

From stephane at wirtel.be  Sun Nov  4 10:25:25 2018
From: stephane at wirtel.be (Stephane Wirtel)
Date: Sun, 4 Nov 2018 16:25:25 +0100
Subject: [Python-Dev] Get a running instance of the doc for a PR.
In-Reply-To: <dCNWpHselG_mmIFYqAYmu_MD8TGQMlu4rmE68Fc3aPJvMldn-P4FnrRDP7J3AxG9H3QNPO4y1P_WE-OGAkn0iQgiqEuijK0Ezbzl40LzV68=@palard.fr>
References: <20181104133827.GA25586@xps>
 <203B5254-326E-43EC-A80D-4A8147791A9D@python.org>
 <dCNWpHselG_mmIFYqAYmu_MD8TGQMlu4rmE68Fc3aPJvMldn-P4FnrRDP7J3AxG9H3QNPO4y1P_WE-OGAkn0iQgiqEuijK0Ezbzl40LzV68=@palard.fr>
Message-ID: <20181104152525.GA12103@xps>

On 11/04, Julien Palard wrote:
>Considering feedback from Ned, what about building this as an
>independent service? We don't really need to interface with python.org
>at all, we just need some hardware, a domain, some code to interface
>with github API and... to start it's probably enough? It would be a
>usefull POC.
+1

We have 2 options

1. We keep a domain (python.org, or another one) and for each build we would have a subdomain for
each build by PR.
doc-pr-XYZ.domain.tld

2. We could store on domain but with a subdirectory by PR
domain.tld/doc-pr-XYZ

In travis, I think we have the PR info, we could use it and upload to
the server for the live preview.

Once merged, we drop the temporary doc on the server.


St?phane

>
>--?
>Julien Palard
>https://mdk.fr
>

-- 
St?phane Wirtel - https://wirtel.be - @matrixise

From stephane at wirtel.be  Sun Nov  4 10:32:11 2018
From: stephane at wirtel.be (Stephane Wirtel)
Date: Sun, 4 Nov 2018 16:32:11 +0100
Subject: [Python-Dev] Get a running instance of the doc for a PR.
In-Reply-To: <CAPTjJmoci5NhiEqGnZ9dZ4odfYHA+1=UDOMJogr4_oZeJCbzZA@mail.gmail.com>
References: <20181104133827.GA25586@xps>
 <203B5254-326E-43EC-A80D-4A8147791A9D@python.org>
 <dCNWpHselG_mmIFYqAYmu_MD8TGQMlu4rmE68Fc3aPJvMldn-P4FnrRDP7J3AxG9H3QNPO4y1P_WE-OGAkn0iQgiqEuijK0Ezbzl40LzV68=@palard.fr>
 <CAPTjJmoci5NhiEqGnZ9dZ4odfYHA+1=UDOMJogr4_oZeJCbzZA@mail.gmail.com>
Message-ID: <20181104153211.GB12103@xps>

On 11/05, Chris Angelico wrote:
>On Mon, Nov 5, 2018 at 2:11 AM Julien Palard via Python-Dev
><python-dev at python.org> wrote:
>>
>> Considering feedback from Ned, what about building this as an independent service? We don't really need to interface with python.org at all, we just need some hardware, a domain, some code to interface with github API and... to start it's probably enough? It would be a usefull POC.
>>
>
>After running 'make html', the build directory is the entire site as a
>set of static files, right? Maybe the easiest solution is to tie in
>with GitHub Pages. I already have a script that will push a directory
>up as the gh-pages branch of the current repo; it'd just need a tweak
>so it can push to a specific repo, which you could create on GitHub
>for the purpose. Not 100% automatic, but also not too difficult to
>automate, if needed.
>
>https://github.com/Rosuav/shed/blob/master/git-deploy

Nice idea, but I am not for that.

1. We will populate the git repository with a lot of gh-pages branches
and I am not for this solution
2. This static doc is just temporary, once merged, we have to remove the
link and the content on the server, with the gh-pages, that will be a
commit where we drop the content, but it's a commit and we will consume
the storage of github.
3. 1 repo has only one gh-pages, in our case, we need to have a lot of
gh-pages for a repo.

But thank you for your idea.

-- 
St?phane Wirtel - https://wirtel.be - @matrixise

From steve.dower at python.org  Sun Nov  4 10:34:23 2018
From: steve.dower at python.org (Steve Dower)
Date: Sun, 4 Nov 2018 07:34:23 -0800
Subject: [Python-Dev] Get a running instance of the doc for a PR.
In-Reply-To: <CAPTjJmoci5NhiEqGnZ9dZ4odfYHA+1=UDOMJogr4_oZeJCbzZA@mail.gmail.com>
References: <20181104133827.GA25586@xps>
 <203B5254-326E-43EC-A80D-4A8147791A9D@python.org>
 <dCNWpHselG_mmIFYqAYmu_MD8TGQMlu4rmE68Fc3aPJvMldn-P4FnrRDP7J3AxG9H3QNPO4y1P_WE-OGAkn0iQgiqEuijK0Ezbzl40LzV68=@palard.fr>
 <CAPTjJmoci5NhiEqGnZ9dZ4odfYHA+1=UDOMJogr4_oZeJCbzZA@mail.gmail.com>
Message-ID: <23b8f062-348b-9750-e31f-0b3dabf09b22@python.org>

On 04Nov2018 0718, Chris Angelico wrote:
> On Mon, Nov 5, 2018 at 2:11 AM Julien Palard via Python-Dev
> <python-dev at python.org> wrote:
>>
>> Considering feedback from Ned, what about building this as an independent service? We don't really need to interface with python.org at all, we just need some hardware, a domain, some code to interface with github API and... to start it's probably enough? It would be a usefull POC.
>>
> 
> After running 'make html', the build directory is the entire site as a
> set of static files, right? Maybe the easiest solution is to tie in
> with GitHub Pages. I already have a script that will push a directory
> up as the gh-pages branch of the current repo; it'd just need a tweak
> so it can push to a specific repo, which you could create on GitHub
> for the purpose. Not 100% automatic, but also not too difficult to
> automate, if needed.

I can trivially attach the built docs as a ZIP file to the Azure 
Pipelines build, though that doesn't help the "preview on my phone" 
scenario (unless your phone can extract and then open a directory of 
HTML files? Mine can't)

But that's also easy enough to tie into a second step to deploy the 
files practically anywhere. Pushing them to a git repo based on the PR 
name is easy, and presumably it can be a single repo with directories 
for different PRs? It might need a separate job to periodically clean it 
up, but this seems very doable.

Cheers,
Steve

From storchaka at gmail.com  Sun Nov  4 10:40:29 2018
From: storchaka at gmail.com (Serhiy Storchaka)
Date: Sun, 4 Nov 2018 17:40:29 +0200
Subject: [Python-Dev] Get a running instance of the doc for a PR.
In-Reply-To: <dCNWpHselG_mmIFYqAYmu_MD8TGQMlu4rmE68Fc3aPJvMldn-P4FnrRDP7J3AxG9H3QNPO4y1P_WE-OGAkn0iQgiqEuijK0Ezbzl40LzV68=@palard.fr>
References: <20181104133827.GA25586@xps>
 <203B5254-326E-43EC-A80D-4A8147791A9D@python.org>
 <dCNWpHselG_mmIFYqAYmu_MD8TGQMlu4rmE68Fc3aPJvMldn-P4FnrRDP7J3AxG9H3QNPO4y1P_WE-OGAkn0iQgiqEuijK0Ezbzl40LzV68=@palard.fr>
Message-ID: <prn3pb$h3l$1@blaine.gmane.org>

04.11.18 17:00, Julien Palard via Python-Dev ????:
> Considering feedback from Ned, what about building this as an independent service? We don't really need to interface with python.org at all, we just need some hardware, a domain, some code to interface with github API and... to start it's probably enough? It would be a usefull POC.

This will just move risks to this service.

Ned mentioned potential abuse. We will host unchecked content. Malicious 
user can create a PR which replaces Python documentation with malicious 
content.

The Doc/ directory includes Python scripts and Makefile which are used 
for building documentation. Malicious user can use this for executing 
arbitrary code on our server.


From stephane at wirtel.be  Sun Nov  4 10:46:42 2018
From: stephane at wirtel.be (Stephane Wirtel)
Date: Sun, 4 Nov 2018 16:46:42 +0100
Subject: [Python-Dev] Get a running instance of the doc for a PR.
In-Reply-To: <23b8f062-348b-9750-e31f-0b3dabf09b22@python.org>
References: <20181104133827.GA25586@xps>
 <203B5254-326E-43EC-A80D-4A8147791A9D@python.org>
 <dCNWpHselG_mmIFYqAYmu_MD8TGQMlu4rmE68Fc3aPJvMldn-P4FnrRDP7J3AxG9H3QNPO4y1P_WE-OGAkn0iQgiqEuijK0Ezbzl40LzV68=@palard.fr>
 <CAPTjJmoci5NhiEqGnZ9dZ4odfYHA+1=UDOMJogr4_oZeJCbzZA@mail.gmail.com>
 <23b8f062-348b-9750-e31f-0b3dabf09b22@python.org>
Message-ID: <20181104154642.GC12103@xps>

On 11/04, Steve Dower wrote:
>On 04Nov2018 0718, Chris Angelico wrote:
>>On Mon, Nov 5, 2018 at 2:11 AM Julien Palard via Python-Dev
>><python-dev at python.org> wrote:
>>>
>>>Considering feedback from Ned, what about building this as an independent service? We don't really need to interface with python.org at all, we just need some hardware, a domain, some code to interface with github API and... to start it's probably enough? It would be a usefull POC.
>>>
>>
>>After running 'make html', the build directory is the entire site as a
>>set of static files, right? Maybe the easiest solution is to tie in
>>with GitHub Pages. I already have a script that will push a directory
>>up as the gh-pages branch of the current repo; it'd just need a tweak
>>so it can push to a specific repo, which you could create on GitHub
>>for the purpose. Not 100% automatic, but also not too difficult to
>>automate, if needed.
>
>I can trivially attach the built docs as a ZIP file to the Azure 
>Pipelines build, though that doesn't help the "preview on my phone" 
>scenario (unless your phone can extract and then open a directory of 
>HTML files? Mine can't)
Or just upload the zip file to the server-live-preview-doc and unzip the
result.
>
>But that's also easy enough to tie into a second step to deploy the 
>files practically anywhere. Pushing them to a git repo based on the PR 
>name is easy, and presumably it can be a single repo with directories 
>for different PRs? It might need a separate job to periodically clean 
>it up, but this seems very doable.
for the subdirectory by PR I am not sure but we could have an issue with
the cache of the browser because we will use the same domain, but this
solution can be created in few hours. +1

For the subdomain, no problem with the cache, just update the DNS, but
we can have an issue with the propagation of the DNS if the TTL is high.

We could use Bedevere, not sure but I think it can receive an action
about the merge of a PR. Once merge, we execute the clean process ;-)
>
>Cheers,
>Steve
>_______________________________________________
>Python-Dev mailing list
>Python-Dev at python.org
>https://mail.python.org/mailman/listinfo/python-dev
>Unsubscribe: https://mail.python.org/mailman/options/python-dev/stephane%40wirtel.be

-- 
St?phane Wirtel - https://wirtel.be - @matrixise

From rosuav at gmail.com  Sun Nov  4 10:48:25 2018
From: rosuav at gmail.com (Chris Angelico)
Date: Mon, 5 Nov 2018 02:48:25 +1100
Subject: [Python-Dev] Get a running instance of the doc for a PR.
In-Reply-To: <20181104153211.GB12103@xps>
References: <20181104133827.GA25586@xps>
 <203B5254-326E-43EC-A80D-4A8147791A9D@python.org>
 <dCNWpHselG_mmIFYqAYmu_MD8TGQMlu4rmE68Fc3aPJvMldn-P4FnrRDP7J3AxG9H3QNPO4y1P_WE-OGAkn0iQgiqEuijK0Ezbzl40LzV68=@palard.fr>
 <CAPTjJmoci5NhiEqGnZ9dZ4odfYHA+1=UDOMJogr4_oZeJCbzZA@mail.gmail.com>
 <20181104153211.GB12103@xps>
Message-ID: <CAPTjJmoqq+prNQa5vvNZ5YnEQeX+Xr0ztFcqZDeNU1BpsbH-Aw@mail.gmail.com>

On Mon, Nov 5, 2018 at 2:33 AM Stephane Wirtel <stephane at wirtel.be> wrote:
>
> On 11/05, Chris Angelico wrote:
> >On Mon, Nov 5, 2018 at 2:11 AM Julien Palard via Python-Dev
> ><python-dev at python.org> wrote:
> >>
> >> Considering feedback from Ned, what about building this as an independent service? We don't really need to interface with python.org at all, we just need some hardware, a domain, some code to interface with github API and... to start it's probably enough? It would be a usefull POC.
> >>
> >
> >After running 'make html', the build directory is the entire site as a
> >set of static files, right? Maybe the easiest solution is to tie in
> >with GitHub Pages. I already have a script that will push a directory
> >up as the gh-pages branch of the current repo; it'd just need a tweak
> >so it can push to a specific repo, which you could create on GitHub
> >for the purpose. Not 100% automatic, but also not too difficult to
> >automate, if needed.
> >
> >https://github.com/Rosuav/shed/blob/master/git-deploy
>
> Nice idea, but I am not for that.
>
> 1. We will populate the git repository with a lot of gh-pages branches
> and I am not for this solution
> 2. This static doc is just temporary, once merged, we have to remove the
> link and the content on the server, with the gh-pages, that will be a
> commit where we drop the content, but it's a commit and we will consume
> the storage of github.
> 3. 1 repo has only one gh-pages, in our case, we need to have a lot of
> gh-pages for a repo.
>

Yeah, understood. I was thinking of having the individual patch
authors create temporary GitHub repositories to push to. It'd be an
optional step; if you want to show people a preview of your PR, just
create a repository and push to it (using a script something like
that). That way, you don't have to worry about malicious content
(since it'll be hosted under the author's name - I'm sure GitHub have
measures in place to deal with that, and it wouldn't be Python.org's
problem), nor having lots of gh-pages branches sitting around (they'd
be the responsibility of the author).

> But thank you for your idea.

No probs, and I don't mind if it's not adopted. Just wanted to put it out there.

ChrisA

From stephane at wirtel.be  Sun Nov  4 10:49:57 2018
From: stephane at wirtel.be (Stephane Wirtel)
Date: Sun, 4 Nov 2018 16:49:57 +0100
Subject: [Python-Dev] Get a running instance of the doc for a PR.
In-Reply-To: <prn3pb$h3l$1@blaine.gmane.org>
References: <20181104133827.GA25586@xps>
 <203B5254-326E-43EC-A80D-4A8147791A9D@python.org>
 <dCNWpHselG_mmIFYqAYmu_MD8TGQMlu4rmE68Fc3aPJvMldn-P4FnrRDP7J3AxG9H3QNPO4y1P_WE-OGAkn0iQgiqEuijK0Ezbzl40LzV68=@palard.fr>
 <prn3pb$h3l$1@blaine.gmane.org>
Message-ID: <20181104154957.GD12103@xps>

On 11/04, Serhiy Storchaka wrote:
>04.11.18 17:00, Julien Palard via Python-Dev ????:
>>Considering feedback from Ned, what about building this as an independent service? We don't really need to interface with python.org at all, we just need some hardware, a domain, some code to interface with github API and... to start it's probably enough? It would be a usefull POC.
>
>This will just move risks to this service.
>
>Ned mentioned potential abuse. We will host unchecked content. 
>Malicious user can create a PR which replaces Python documentation 
>with malicious content.
The content will be generated by the build/html directory from Travis.
If Travis is green we upload the doc, if Travis is red, we do not
publish it. If there is an abuse, we close/drop the PR, maybe Bedevere
can receive this notification via the webhooks and notify the server to
remove the doc.
>
>The Doc/ directory includes Python scripts and Makefile which are used 
>for building documentation. Malicious user can use this for executing 
>arbitrary code on our server.
Currently, we use Travis. The malicious code will be execute in the
container of Travis, not on the server. We only copy the static files
and if we use nginx/apache, we don't execute the .py files. Just serve
the .html,.css,.js files
>
>_______________________________________________
>Python-Dev mailing list
>Python-Dev at python.org
>https://mail.python.org/mailman/listinfo/python-dev
>Unsubscribe: https://mail.python.org/mailman/options/python-dev/stephane%40wirtel.be

-- 
St?phane Wirtel - https://wirtel.be - @matrixise

From steve at pearwood.info  Sun Nov  4 10:50:19 2018
From: steve at pearwood.info (Steven D'Aprano)
Date: Mon, 5 Nov 2018 02:50:19 +1100
Subject: [Python-Dev] Get a running instance of the doc for a PR.
In-Reply-To: <20181104151239.GA14162@xps>
References: <20181104133827.GA25586@xps>
 <203B5254-326E-43EC-A80D-4A8147791A9D@python.org>
 <20181104151239.GA14162@xps>
Message-ID: <20181104155017.GX3817@ando.pearwood.info>

On Sun, Nov 04, 2018 at 04:12:39PM +0100, Stephane Wirtel wrote:

> My workflow is the following steps:
> 
> git wpr XYZ
> cd ../cpython-XYZ
> ./configure --prefix=$PWD-build --with-pydebug --silent
> make -j 4 -s
> make PYTHON=../python -C Doc/ venv
> make -C Doc/ check suspicious html serve
> 
> and run the browser on http://localhost:8000/ and check the result.
> 
> 
> 1. Because I am a dev I can do it easily
> 2. If you are not a dev, you have to learn a new step (download sources,
> compile sources, compile doc and check the result)

If I am making doc patches, shouldn't I be doing that *before* I 
submit the PR? How else will I know that my changes haven't broken the 
docs?

So surely I need to learn those steps regardless?

(Not a rhetorical question.)


> I think this feature would be really useful for the contributors, the
> reviewers and you, the core-dev.

Sure. But the usefulness has to be weighed against the extra complexity, 
the extra "one more thing that can break and needs to be maintained", 
and the risk of abuse.

I have no opinion on whether the pluses outweigh the minuses.


-- 
Steve

From stephane at wirtel.be  Sun Nov  4 10:58:36 2018
From: stephane at wirtel.be (Stephane Wirtel)
Date: Sun, 4 Nov 2018 16:58:36 +0100
Subject: [Python-Dev] Get a running instance of the doc for a PR.
In-Reply-To: <CAPTjJmoqq+prNQa5vvNZ5YnEQeX+Xr0ztFcqZDeNU1BpsbH-Aw@mail.gmail.com>
References: <20181104133827.GA25586@xps>
 <203B5254-326E-43EC-A80D-4A8147791A9D@python.org>
 <dCNWpHselG_mmIFYqAYmu_MD8TGQMlu4rmE68Fc3aPJvMldn-P4FnrRDP7J3AxG9H3QNPO4y1P_WE-OGAkn0iQgiqEuijK0Ezbzl40LzV68=@palard.fr>
 <CAPTjJmoci5NhiEqGnZ9dZ4odfYHA+1=UDOMJogr4_oZeJCbzZA@mail.gmail.com>
 <20181104153211.GB12103@xps>
 <CAPTjJmoqq+prNQa5vvNZ5YnEQeX+Xr0ztFcqZDeNU1BpsbH-Aw@mail.gmail.com>
Message-ID: <20181104155836.GE12103@xps>

On 11/05, Chris Angelico wrote:
>On Mon, Nov 5, 2018 at 2:33 AM Stephane Wirtel <stephane at wirtel.be> wrote:
>>
>> On 11/05, Chris Angelico wrote:
>> >On Mon, Nov 5, 2018 at 2:11 AM Julien Palard via Python-Dev
>> ><python-dev at python.org> wrote:
>> >>
>> >> Considering feedback from Ned, what about building this as an independent service? We don't really need to interface with python.org at all, we just need some hardware, a domain, some code to interface with github API and... to start it's probably enough? It would be a usefull POC.
>> >>
>> >
>> >After running 'make html', the build directory is the entire site as a
>> >set of static files, right? Maybe the easiest solution is to tie in
>> >with GitHub Pages. I already have a script that will push a directory
>> >up as the gh-pages branch of the current repo; it'd just need a tweak
>> >so it can push to a specific repo, which you could create on GitHub
>> >for the purpose. Not 100% automatic, but also not too difficult to
>> >automate, if needed.
>> >
>> >https://github.com/Rosuav/shed/blob/master/git-deploy
>>
>> Nice idea, but I am not for that.
>>
>> 1. We will populate the git repository with a lot of gh-pages branches
>> and I am not for this solution
>> 2. This static doc is just temporary, once merged, we have to remove the
>> link and the content on the server, with the gh-pages, that will be a
>> commit where we drop the content, but it's a commit and we will consume
>> the storage of github.
>> 3. 1 repo has only one gh-pages, in our case, we need to have a lot of
>> gh-pages for a repo.
>>
>
>Yeah, understood. I was thinking of having the individual patch
>authors create temporary GitHub repositories to push to. It'd be an
>optional step; if you want to show people a preview of your PR, just
>create a repository and push to it (using a script something like
>that). That way, you don't have to worry about malicious content
>(since it'll be hosted under the author's name - I'm sure GitHub have
>measures in place to deal with that, and it wouldn't be Python.org's
>problem), nor having lots of gh-pages branches sitting around (they'd
>be the responsibility of the author).
>
>> But thank you for your idea.
>
>No probs, and I don't mind if it's not adopted. Just wanted to put it out there.
In fact, I was interested by your solution because we avoid the
maintenance of the server, but in our case, we would host many
Docs/build/html. 

Thanks again
>
>ChrisA
>_______________________________________________
>Python-Dev mailing list
>Python-Dev at python.org
>https://mail.python.org/mailman/listinfo/python-dev
>Unsubscribe: https://mail.python.org/mailman/options/python-dev/stephane%40wirtel.be

-- 
St?phane Wirtel - https://wirtel.be - @matrixise

From stephane at wirtel.be  Sun Nov  4 11:05:07 2018
From: stephane at wirtel.be (Stephane Wirtel)
Date: Sun, 4 Nov 2018 17:05:07 +0100
Subject: [Python-Dev] Get a running instance of the doc for a PR.
In-Reply-To: <20181104155017.GX3817@ando.pearwood.info>
References: <20181104133827.GA25586@xps>
 <203B5254-326E-43EC-A80D-4A8147791A9D@python.org>
 <20181104151239.GA14162@xps>
 <20181104155017.GX3817@ando.pearwood.info>
Message-ID: <20181104160507.GF12103@xps>

On 11/05, Steven D'Aprano wrote:
>On Sun, Nov 04, 2018 at 04:12:39PM +0100, Stephane Wirtel wrote:
>
>> My workflow is the following steps:
>>
>> git wpr XYZ
>> cd ../cpython-XYZ
>> ./configure --prefix=$PWD-build --with-pydebug --silent
>> make -j 4 -s
>> make PYTHON=../python -C Doc/ venv
>> make -C Doc/ check suspicious html serve
>>
>> and run the browser on http://localhost:8000/ and check the result.
>>
>>
>> 1. Because I am a dev I can do it easily
>> 2. If you are not a dev, you have to learn a new step (download sources,
>> compile sources, compile doc and check the result)
>
>If I am making doc patches, shouldn't I be doing that *before* I
>submit the PR? How else will I know that my changes haven't broken the
>docs?
You can use the web interface of Github and just add/remove/modify a
paragraph.

>
>So surely I need to learn those steps regardless?
>
>(Not a rhetorical question.)
>
>
>> I think this feature would be really useful for the contributors, the
>> reviewers and you, the core-dev.
>
>Sure. But the usefulness has to be weighed against the extra complexity,
>the extra "one more thing that can break and needs to be maintained",
>and the risk of abuse.
Which kind of abuse?

-- 
St?phane Wirtel - https://wirtel.be - @matrixise

From julien at palard.fr  Sun Nov  4 11:12:00 2018
From: julien at palard.fr (Julien Palard)
Date: Sun, 04 Nov 2018 16:12:00 +0000
Subject: [Python-Dev] Get a running instance of the doc for a PR.
In-Reply-To: <23b8f062-348b-9750-e31f-0b3dabf09b22@python.org>
References: <20181104133827.GA25586@xps>
 <203B5254-326E-43EC-A80D-4A8147791A9D@python.org>
 <dCNWpHselG_mmIFYqAYmu_MD8TGQMlu4rmE68Fc3aPJvMldn-P4FnrRDP7J3AxG9H3QNPO4y1P_WE-OGAkn0iQgiqEuijK0Ezbzl40LzV68=@palard.fr>
 <CAPTjJmoci5NhiEqGnZ9dZ4odfYHA+1=UDOMJogr4_oZeJCbzZA@mail.gmail.com>
 <23b8f062-348b-9750-e31f-0b3dabf09b22@python.org>
Message-ID: <A4mRE_KHREAET2dcImMmaeNEStivmZ6idpvChHarjkFmkPfTX5wXI0PfSY4teImK_VzpYVTJ79M6jy73fcQddt1S2OEjbOAm_Yy2QVhOW68=@palard.fr>

> I can trivially attach the built docs as a ZIP file to the Azure
> Pipelines build, though that doesn't help the "preview on my phone"

So one can build an HTTP server that gathers doc builds from Azure and expose them?

--?
Julien Palard
https://mdk.fr


From mariatta.wijaya at gmail.com  Sun Nov  4 10:53:44 2018
From: mariatta.wijaya at gmail.com (Mariatta Wijaya)
Date: Sun, 4 Nov 2018 07:53:44 -0800
Subject: [Python-Dev] Get a running instance of the doc for a PR.
In-Reply-To: <prn3pb$h3l$1@blaine.gmane.org>
References: <20181104133827.GA25586@xps>
 <203B5254-326E-43EC-A80D-4A8147791A9D@python.org>
 <dCNWpHselG_mmIFYqAYmu_MD8TGQMlu4rmE68Fc3aPJvMldn-P4FnrRDP7J3AxG9H3QNPO4y1P_WE-OGAkn0iQgiqEuijK0Ezbzl40LzV68=@palard.fr>
 <prn3pb$h3l$1@blaine.gmane.org>
Message-ID: <CAGbohnZm7kmt9V1QHB1cuZVv3CX5P2Sq=6R32A+ocDQPdYQ=8g@mail.gmail.com>

I think the intent is just uploading the output HTML and static assets.

I agree having the temporary output of PR docs build is useful, but I don't
think a python.org domain is necessary. If it can be uploaded to any cloud
storage service then that's good enough, just provide the link in the
status check. The output can be cleared after it receive the PR closed
webhook.

On Sun, Nov 4, 2018, 7:43 AM Serhiy Storchaka <storchaka at gmail.com wrote:

> 04.11.18 17:00, Julien Palard via Python-Dev ????:
> > Considering feedback from Ned, what about building this as an
> independent service? We don't really need to interface with python.org at
> all, we just need some hardware, a domain, some code to interface with
> github API and... to start it's probably enough? It would be a usefull POC.
>
> This will just move risks to this service.
>
> Ned mentioned potential abuse. We will host unchecked content. Malicious
> user can create a PR which replaces Python documentation with malicious
> content.
>
> The Doc/ directory includes Python scripts and Makefile which are used
> for building documentation. Malicious user can use this for executing
> arbitrary code on our server.
>
> _______________________________________________
> Python-Dev mailing list
> Python-Dev at python.org
> https://mail.python.org/mailman/listinfo/python-dev
> Unsubscribe:
> https://mail.python.org/mailman/options/python-dev/mariatta%40python.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mail.python.org/pipermail/python-dev/attachments/20181104/6fa02b12/attachment-0001.html>

From mariatta.wijaya at gmail.com  Sun Nov  4 11:02:49 2018
From: mariatta.wijaya at gmail.com (Mariatta Wijaya)
Date: Sun, 4 Nov 2018 08:02:49 -0800
Subject: [Python-Dev] Get a running instance of the doc for a PR.
In-Reply-To: <20181104155017.GX3817@ando.pearwood.info>
References: <20181104133827.GA25586@xps>
 <203B5254-326E-43EC-A80D-4A8147791A9D@python.org>
 <20181104151239.GA14162@xps> <20181104155017.GX3817@ando.pearwood.info>
Message-ID: <CAGbohnYjfMtVBbSSZA=pNW_NNYMwc-WOy_L0V=pXij+tTUwfJw@mail.gmail.com>

This will make review turnout quicker, since I can potentially review and
view the output from anywhere (phone while on a beach) instead of waiting
until I'm back home, open a computer, and then verify the output myself.

On Sun, Nov 4, 2018, 7:56 AM Steven D'Aprano <steve at pearwood.info wrote:

> On Sun, Nov 04, 2018 at 04:12:39PM +0100, Stephane Wirtel wrote:
>
> > My workflow is the following steps:
> >
> > git wpr XYZ
> > cd ../cpython-XYZ
> > ./configure --prefix=$PWD-build --with-pydebug --silent
> > make -j 4 -s
> > make PYTHON=../python -C Doc/ venv
> > make -C Doc/ check suspicious html serve
> >
> > and run the browser on http://localhost:8000/ and check the result.
> >
> >
> > 1. Because I am a dev I can do it easily
> > 2. If you are not a dev, you have to learn a new step (download sources,
> > compile sources, compile doc and check the result)
>
> If I am making doc patches, shouldn't I be doing that *before* I
> submit the PR? How else will I know that my changes haven't broken the
> docs?
>
> So surely I need to learn those steps regardless?
>
> (Not a rhetorical question.)
>
>
> > I think this feature would be really useful for the contributors, the
> > reviewers and you, the core-dev.
>
> Sure. But the usefulness has to be weighed against the extra complexity,
> the extra "one more thing that can break and needs to be maintained",
> and the risk of abuse.
>
> I have no opinion on whether the pluses outweigh the minuses.
>
>
> --
> Steve
> _______________________________________________
> Python-Dev mailing list
> Python-Dev at python.org
> https://mail.python.org/mailman/listinfo/python-dev
> Unsubscribe:
> https://mail.python.org/mailman/options/python-dev/mariatta%40python.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mail.python.org/pipermail/python-dev/attachments/20181104/6147cd26/attachment.html>

From steve.dower at python.org  Sun Nov  4 11:20:04 2018
From: steve.dower at python.org (Steve Dower)
Date: Sun, 4 Nov 2018 08:20:04 -0800
Subject: [Python-Dev] Get a running instance of the doc for a PR.
In-Reply-To: <A4mRE_KHREAET2dcImMmaeNEStivmZ6idpvChHarjkFmkPfTX5wXI0PfSY4teImK_VzpYVTJ79M6jy73fcQddt1S2OEjbOAm_Yy2QVhOW68=@palard.fr>
References: <20181104133827.GA25586@xps>
 <203B5254-326E-43EC-A80D-4A8147791A9D@python.org>
 <dCNWpHselG_mmIFYqAYmu_MD8TGQMlu4rmE68Fc3aPJvMldn-P4FnrRDP7J3AxG9H3QNPO4y1P_WE-OGAkn0iQgiqEuijK0Ezbzl40LzV68=@palard.fr>
 <CAPTjJmoci5NhiEqGnZ9dZ4odfYHA+1=UDOMJogr4_oZeJCbzZA@mail.gmail.com>
 <23b8f062-348b-9750-e31f-0b3dabf09b22@python.org>
 <A4mRE_KHREAET2dcImMmaeNEStivmZ6idpvChHarjkFmkPfTX5wXI0PfSY4teImK_VzpYVTJ79M6jy73fcQddt1S2OEjbOAm_Yy2QVhOW68=@palard.fr>
Message-ID: <7d0df116-abc5-74c2-e9fd-d778da062ec9@python.org>

On 04Nov2018 0812, Julien Palard wrote:
>> I can trivially attach the built docs as a ZIP file to the Azure
>> Pipelines build, though that doesn't help the "preview on my phone"
> 
> So one can build an HTTP server that gathers doc builds from Azure and expose them?

Either that, or Azure can push it directly to the server. (This way is 
simpler, since the processing power is already there and the trigger is 
trivial, compared to triggering yet another service from the build 
completion. Though it does mean putting credentials somewhere, which is 
why a github repo is the easiest option, as those are already there.)

Cheers,
Steve

From stephane at wirtel.be  Sun Nov  4 11:25:44 2018
From: stephane at wirtel.be (Stephane Wirtel)
Date: Sun, 4 Nov 2018 17:25:44 +0100
Subject: [Python-Dev] Get a running instance of the doc for a PR.
In-Reply-To: <CAGbohnZm7kmt9V1QHB1cuZVv3CX5P2Sq=6R32A+ocDQPdYQ=8g@mail.gmail.com>
References: <20181104133827.GA25586@xps>
 <203B5254-326E-43EC-A80D-4A8147791A9D@python.org>
 <dCNWpHselG_mmIFYqAYmu_MD8TGQMlu4rmE68Fc3aPJvMldn-P4FnrRDP7J3AxG9H3QNPO4y1P_WE-OGAkn0iQgiqEuijK0Ezbzl40LzV68=@palard.fr>
 <prn3pb$h3l$1@blaine.gmane.org>
 <CAGbohnZm7kmt9V1QHB1cuZVv3CX5P2Sq=6R32A+ocDQPdYQ=8g@mail.gmail.com>
Message-ID: <20181104162544.GA23921@xps>

On 11/04, Mariatta Wijaya wrote:
>I think the intent is just uploading the output HTML and static assets.
Yep, it's my idea, just upload the output html and static assets,
nothing else.
>
>I agree having the temporary output of PR docs build is useful, but I don't
>think a python.org domain is necessary. If it can be uploaded to any cloud
>storage service then that's good enough, just provide the link in the
>status check. The output can be cleared after it receive the PR closed
>webhook.
+1

And I think Bedevere is the best candidate for this feature (once
closed, remove from the server)



-- 
St?phane Wirtel - https://wirtel.be - @matrixise

From tritium-list at sdamon.com  Sun Nov  4 11:28:35 2018
From: tritium-list at sdamon.com (Alex Walters)
Date: Sun, 4 Nov 2018 11:28:35 -0500
Subject: [Python-Dev] Get a running instance of the doc for a PR.
In-Reply-To: <20181104133827.GA25586@xps>
References: <20181104133827.GA25586@xps>
Message-ID: <010401d4745b$6fec9a90$4fc5cfb0$@sdamon.com>

Doesn't read the docs already do this for pull requests?  Even if it doesn't, don't the core maintainers of read the docs go to pycon?  I wouldn't suggest read the docs for primary docs hosting for python, but they are perfectly fine for live testing pull request documentation without having to roll our own.

> -----Original Message-----
> From: Python-Dev <python-dev-bounces+tritium-
> list=sdamon.com at python.org> On Behalf Of Stephane Wirtel
> Sent: Sunday, November 4, 2018 8:38 AM
> To: python-dev at python.org
> Subject: [Python-Dev] Get a running instance of the doc for a PR.
> 
> Hi all,
> 
> When we receive a PR about the documentation, I think that could be
> interesting if we could have a running instance of the doc on a sub
> domain of python.org.
> 
> For example, pr-10000-doc.python.org or whatever, but by this way the
> reviewers could see the result online.
> 
> The workflow would be like that:
> 
> New PR -> build the doc (done by Travis) -> publish it to a server ->
> once published, the PR is notified by "doc is available at URL".
> 
> Once merged -> we remove the doc and the link (hello bedevere).
> 
> I am interested by this feature and if you also interested, tell me.
> I would like discuss with Julien Palard and Ernest W.  Durbin III for a
> solution as soon as possible.
> 
> Have a nice day,
> 
> St?phane
> 
> --
> St?phane Wirtel - https://wirtel.be - @matrixise
> _______________________________________________
> Python-Dev mailing list
> Python-Dev at python.org
> https://mail.python.org/mailman/listinfo/python-dev
> Unsubscribe: https://mail.python.org/mailman/options/python-dev/tritium-
> list%40sdamon.com


From stephane at wirtel.be  Sun Nov  4 11:32:38 2018
From: stephane at wirtel.be (Stephane Wirtel)
Date: Sun, 4 Nov 2018 17:32:38 +0100
Subject: [Python-Dev] Get a running instance of the doc for a PR.
In-Reply-To: <CAGbohnYjfMtVBbSSZA=pNW_NNYMwc-WOy_L0V=pXij+tTUwfJw@mail.gmail.com>
References: <20181104133827.GA25586@xps>
 <203B5254-326E-43EC-A80D-4A8147791A9D@python.org>
 <20181104151239.GA14162@xps>
 <20181104155017.GX3817@ando.pearwood.info>
 <CAGbohnYjfMtVBbSSZA=pNW_NNYMwc-WOy_L0V=pXij+tTUwfJw@mail.gmail.com>
Message-ID: <20181104163238.GB23921@xps>

On 11/04, Mariatta Wijaya wrote:
>This will make review turnout quicker, since I can potentially review and
>view the output from anywhere (phone while on a beach) instead of waiting
>until I'm back home, open a computer, and then verify the output myself.
Yep, last week I was at a dinner at PyCon.DE, I have seen a PR, I wanted
to check the result and approve it or not. With this feature, I can
check it asap and just approve via github. Once approved, miss-islington
could merge the PR, once merged, Bedevere can notify the service and
remove the documentation of this PR.


-- 
St?phane Wirtel - https://wirtel.be - @matrixise

From nad at python.org  Sun Nov  4 11:40:25 2018
From: nad at python.org (Ned Deily)
Date: Sun, 4 Nov 2018 11:40:25 -0500
Subject: [Python-Dev] Get a running instance of the doc for a PR.
In-Reply-To: <20181104151239.GA14162@xps>
References: <20181104133827.GA25586@xps>
 <203B5254-326E-43EC-A80D-4A8147791A9D@python.org>
 <20181104151239.GA14162@xps>
Message-ID: <DE17F969-2084-457D-B516-600CCF43BB16@python.org>

On Nov 4, 2018, at 10:12, Stephane Wirtel <stephane at wirtel.be> wrote:
> 3. On this after-noon, I have reviewed a PR, and I was in the same case,
> download the PR, build python, compile the doc and run the local server.
> 
> My workflow is the following steps:
> 
> git wpr XYZ
> cd ../cpython-XYZ
> ./configure --prefix=$PWD-build --with-pydebug --silent
> make -j 4 -s
> make PYTHON=../python -C Doc/ venv
> make -C Doc/ check suspicious html serve
> 
> and run the browser on http://localhost:8000/ and check the result.

To address one point, there's no need to run a web server to review the docs.  The generated docs can be viewed directly by any modern web browser by opening one of the files in the web browser's file menu.  Or perhaps easier, you can click on any of the generated html files; or on macOS you can use the open(1) command from the shell to open and view in the default web browser.

$ open build/html/index.html


--
  Ned Deily
  nad at python.org -- []


From paul at ganssle.io  Sun Nov  4 12:04:31 2018
From: paul at ganssle.io (Paul Ganssle)
Date: Sun, 4 Nov 2018 12:04:31 -0500
Subject: [Python-Dev] Get a running instance of the doc for a PR.
In-Reply-To: <010401d4745b$6fec9a90$4fc5cfb0$@sdamon.com>
References: <20181104133827.GA25586@xps>
 <010401d4745b$6fec9a90$4fc5cfb0$@sdamon.com>
Message-ID: <26398c8f-170d-c468-b603-ea79ca8fdcc2@ganssle.io>

There is an open request for this on GH, but it's not currently done:
https://github.com/rtfd/readthedocs.org/issues/1340

At the PyCon US sprints this year, we added documentation previews via
netlify, and they have been super useful:
https://github.com/pypa/setuptools/pull/1367 My understanding is that
other projects do something similar with CircleCI.

It's not amazingly /difficult/ for reviewers to fetch the submitter's
branch, build the documentation and review it locally, but it's a decent
number of extra steps for what /should/ be a very simple review. I think
we all know that reviewer time and effort is one of the biggest
bottlenecks in the CPython development workflow, and this could make it
/much/ easier to do reviews.

Some of the concerns about increasing the surface area I think are a bit
overblown. I haven't seen any problems yet in the projects that do this,
and I don't think it lends itself to abuse particularly
well.//Considering that the rest of the CI suite lets you run arbitrary
code on many platforms, I don't think it's particularly more dangerous
to allow people to generate ephemeral static hosted web sites as well.


Best.

Paul

On 11/4/18 11:28 AM, Alex Walters wrote:
> Doesn't read the docs already do this for pull requests?  Even if it doesn't, don't the core maintainers of read the docs go to pycon?  I wouldn't suggest read the docs for primary docs hosting for python, but they are perfectly fine for live testing pull request documentation without having to roll our own.
>
>> -----Original Message-----
>> From: Python-Dev <python-dev-bounces+tritium-
>> list=sdamon.com at python.org> On Behalf Of Stephane Wirtel
>> Sent: Sunday, November 4, 2018 8:38 AM
>> To: python-dev at python.org
>> Subject: [Python-Dev] Get a running instance of the doc for a PR.
>>
>> Hi all,
>>
>> When we receive a PR about the documentation, I think that could be
>> interesting if we could have a running instance of the doc on a sub
>> domain of python.org.
>>
>> For example, pr-10000-doc.python.org or whatever, but by this way the
>> reviewers could see the result online.
>>
>> The workflow would be like that:
>>
>> New PR -> build the doc (done by Travis) -> publish it to a server ->
>> once published, the PR is notified by "doc is available at URL".
>>
>> Once merged -> we remove the doc and the link (hello bedevere).
>>
>> I am interested by this feature and if you also interested, tell me.
>> I would like discuss with Julien Palard and Ernest W.  Durbin III for a
>> solution as soon as possible.
>>
>> Have a nice day,
>>
>> St?phane
>>
>> --
>> St?phane Wirtel - https://wirtel.be - @matrixise
>> _______________________________________________
>> Python-Dev mailing list
>> Python-Dev at python.org
>> https://mail.python.org/mailman/listinfo/python-dev
>> Unsubscribe: https://mail.python.org/mailman/options/python-dev/tritium-
>> list%40sdamon.com
> _______________________________________________
> Python-Dev mailing list
> Python-Dev at python.org
> https://mail.python.org/mailman/listinfo/python-dev
> Unsubscribe: https://mail.python.org/mailman/options/python-dev/paul%40ganssle.io
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mail.python.org/pipermail/python-dev/attachments/20181104/9b4b74c1/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 833 bytes
Desc: OpenPGP digital signature
URL: <http://mail.python.org/pipermail/python-dev/attachments/20181104/9b4b74c1/attachment.sig>

From nad at python.org  Sun Nov  4 12:16:14 2018
From: nad at python.org (Ned Deily)
Date: Sun, 4 Nov 2018 12:16:14 -0500
Subject: [Python-Dev] Get a running instance of the doc for a PR.
In-Reply-To: <26398c8f-170d-c468-b603-ea79ca8fdcc2@ganssle.io>
References: <20181104133827.GA25586@xps>
 <010401d4745b$6fec9a90$4fc5cfb0$@sdamon.com>
 <26398c8f-170d-c468-b603-ea79ca8fdcc2@ganssle.io>
Message-ID: <261F41E1-7678-47CC-B40B-829F3ADB57BD@python.org>

On Nov 4, 2018, at 12:04, Paul Ganssle <paul at ganssle.io> wrote:
> Some of the concerns about increasing the surface area I think are a bit overblown. I haven't seen any problems yet in the projects that do this, and I don't think it lends itself to abuse particularly well. Considering that the rest of the CI suite lets you run arbitrary code on many platforms, I don't think it's particularly more dangerous to allow people to generate ephemeral static hosted web sites as well.

The rest of the CI suite does not let you publish things on the python.org domain, unless I'm forgetting something; they're clearly under a CI environment like Travis or AppVeyor or Azure.  That's really my main concern.


--
  Ned Deily
  nad at python.org -- []


From paul at ganssle.io  Sun Nov  4 12:21:15 2018
From: paul at ganssle.io (Paul Ganssle)
Date: Sun, 4 Nov 2018 12:21:15 -0500
Subject: [Python-Dev] Get a running instance of the doc for a PR.
In-Reply-To: <261F41E1-7678-47CC-B40B-829F3ADB57BD@python.org>
References: <20181104133827.GA25586@xps>
 <010401d4745b$6fec9a90$4fc5cfb0$@sdamon.com>
 <26398c8f-170d-c468-b603-ea79ca8fdcc2@ganssle.io>
 <261F41E1-7678-47CC-B40B-829F3ADB57BD@python.org>
Message-ID: <99a88026-60c4-68df-c022-f7d5186afeae@ganssle.io>

Oh, sorry if I misunderstood the concern. Yes, I agree that putting this
under python.org would not be a good idea.

Either hosting it on a hosting provider like netlify (or azure if that's
possible) or a dedicated domain that could be created for the purpose
(e.g. python-doc-ci.org) would be best. Alternatively, the domain could
be skipped entirely and the github hooks could link directly to
documentation by machine IP (though I suspect buying a domain for this
purpose would be a lot easier than coordinating what's necessary to make
direct links to a machine IP reasonable).


Best,
Paul

On 11/4/18 12:16 PM, Ned Deily wrote:
> On Nov 4, 2018, at 12:04, Paul Ganssle <paul at ganssle.io> wrote:
>> Some of the concerns about increasing the surface area I think are a bit overblown. I haven't seen any problems yet in the projects that do this, and I don't think it lends itself to abuse particularly well. Considering that the rest of the CI suite lets you run arbitrary code on many platforms, I don't think it's particularly more dangerous to allow people to generate ephemeral static hosted web sites as well.
> The rest of the CI suite does not let you publish things on the python.org domain, unless I'm forgetting something; they're clearly under a CI environment like Travis or AppVeyor or Azure.  That's really my main concern.
>
>
> --
>   Ned Deily
>   nad at python.org -- []
>

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 833 bytes
Desc: OpenPGP digital signature
URL: <http://mail.python.org/pipermail/python-dev/attachments/20181104/087542f9/attachment.sig>

From stephane at wirtel.be  Sun Nov  4 14:02:33 2018
From: stephane at wirtel.be (Stephane Wirtel)
Date: Sun, 4 Nov 2018 20:02:33 +0100
Subject: [Python-Dev] Get a running instance of the doc for a PR.
In-Reply-To: <99a88026-60c4-68df-c022-f7d5186afeae@ganssle.io>
References: <20181104133827.GA25586@xps>
 <010401d4745b$6fec9a90$4fc5cfb0$@sdamon.com>
 <26398c8f-170d-c468-b603-ea79ca8fdcc2@ganssle.io>
 <261F41E1-7678-47CC-B40B-829F3ADB57BD@python.org>
 <99a88026-60c4-68df-c022-f7d5186afeae@ganssle.io>
Message-ID: <20181104190233.GA29252@xps>

On 11/04, Paul Ganssle wrote:
>Oh, sorry if I misunderstood the concern. Yes, I agree that putting this
>under python.org would not be a good idea.
>
>Either hosting it on a hosting provider like netlify (or azure if that's
>possible) or a dedicated domain that could be created for the purpose
>(e.g. python-doc-ci.org) would be best. Alternatively, the domain could
>be skipped entirely and the github hooks could link directly to
>documentation by machine IP (though I suspect buying a domain for this
>purpose would be a lot easier than coordinating what's necessary to make
>direct links to a machine IP reasonable).
Yep, I am fine with that.

Thanks Paul
>
>
>Best,
>Paul
>
>On 11/4/18 12:16 PM, Ned Deily wrote:
>> On Nov 4, 2018, at 12:04, Paul Ganssle <paul at ganssle.io> wrote:
>>> Some of the concerns about increasing the surface area I think are a bit overblown. I haven't seen any problems yet in the projects that do this, and I don't think it lends itself to abuse particularly well. Considering that the rest of the CI suite lets you run arbitrary code on many platforms, I don't think it's particularly more dangerous to allow people to generate ephemeral static hosted web sites as well.
>> The rest of the CI suite does not let you publish things on the python.org domain, unless I'm forgetting something; they're clearly under a CI environment like Travis or AppVeyor or Azure.  That's really my main concern.
>>
>>
>> --
>>   Ned Deily
>>   nad at python.org -- []
>>
>




>_______________________________________________
>Python-Dev mailing list
>Python-Dev at python.org
>https://mail.python.org/mailman/listinfo/python-dev
>Unsubscribe: https://mail.python.org/mailman/options/python-dev/stephane%40wirtel.be


-- 
St?phane Wirtel - https://wirtel.be - @matrixise

From stephane at wirtel.be  Sun Nov  4 14:05:31 2018
From: stephane at wirtel.be (Stephane Wirtel)
Date: Sun, 4 Nov 2018 20:05:31 +0100
Subject: [Python-Dev] Get a running instance of the doc for a PR.
In-Reply-To: <DE17F969-2084-457D-B516-600CCF43BB16@python.org>
References: <20181104133827.GA25586@xps>
 <203B5254-326E-43EC-A80D-4A8147791A9D@python.org>
 <20181104151239.GA14162@xps>
 <DE17F969-2084-457D-B516-600CCF43BB16@python.org>
Message-ID: <20181104190531.GB29252@xps>

On 11/04, Ned Deily wrote:
>On Nov 4, 2018, at 10:12, Stephane Wirtel <stephane at wirtel.be> wrote:
>> 3. On this after-noon, I have reviewed a PR, and I was in the same case,
>> download the PR, build python, compile the doc and run the local server.
>>
>> My workflow is the following steps:
>>
>> git wpr XYZ
>> cd ../cpython-XYZ
>> ./configure --prefix=$PWD-build --with-pydebug --silent
>> make -j 4 -s
>> make PYTHON=../python -C Doc/ venv
>> make -C Doc/ check suspicious html serve
>>
>> and run the browser on http://localhost:8000/ and check the result.
>
>To address one point, there's no need to run a web server to review the
>docs.  The generated docs can be viewed directly by any modern web
>browser by opening one of the files in the web browser's file menu.  Or
>perhaps easier, you can click on any of the generated html files; or on
>macOS you can use the open(1) command from the shell to open and view
>in the default web browser.
>
>$ open build/html/index.html
Ned, I agree with you about this point, but there is an advantage when
you use localhost:8000, you only have one entrypoint. And when you
switch between many PR, you just have to execute the make -C Doc/ serve
command (because in my workflow and with the full URI, the path can
change in function of the PR, I use git worktree for each PR).

But yep, I am +1 for firefox build/html/index.html
>
>
>--
>  Ned Deily
>  nad at python.org -- []
>

-- 
St?phane Wirtel - https://wirtel.be - @matrixise

From mhroncok at redhat.com  Sun Nov  4 16:58:49 2018
From: mhroncok at redhat.com (=?UTF-8?Q?Miro_Hron=c4=8dok?=)
Date: Sun, 4 Nov 2018 22:58:49 +0100
Subject: [Python-Dev] Get a running instance of the doc for a PR.
In-Reply-To: <20181104154957.GD12103@xps>
References: <20181104133827.GA25586@xps>
 <203B5254-326E-43EC-A80D-4A8147791A9D@python.org>
 <dCNWpHselG_mmIFYqAYmu_MD8TGQMlu4rmE68Fc3aPJvMldn-P4FnrRDP7J3AxG9H3QNPO4y1P_WE-OGAkn0iQgiqEuijK0Ezbzl40LzV68=@palard.fr>
 <prn3pb$h3l$1@blaine.gmane.org> <20181104154957.GD12103@xps>
Message-ID: <22297099-29ed-dbb2-ee69-e8c23af1a844@redhat.com>

On 04. 11. 18 16:49, Stephane Wirtel wrote:
> On 11/04, Serhiy Storchaka wrote:
>> 04.11.18 17:00, Julien Palard via Python-Dev ????:
>>> Considering feedback from Ned, what about building this as an 
>>> independent service? We don't really need to interface with 
>>> python.org at all, we just need some hardware, a domain, some code to 
>>> interface with github API and... to start it's probably enough? It 
>>> would be a usefull POC.
>>
>> This will just move risks to this service.
>>
>> Ned mentioned potential abuse. We will host unchecked content. 
>> Malicious user can create a PR which replaces Python documentation 
>> with malicious content.
> The content will be generated by the build/html directory from Travis.
> If Travis is green we upload the doc, if Travis is red, we do not
> publish it. If there is an abuse, we close/drop the PR, maybe Bedevere
> can receive this notification via the webhooks and notify the server to
> remove the doc.
>>
>> The Doc/ directory includes Python scripts and Makefile which are used 
>> for building documentation. Malicious user can use this for executing 
>> arbitrary code on our server.
> Currently, we use Travis. The malicious code will be execute in the
> container of Travis, not on the server. We only copy the static files
> and if we use nginx/apache, we don't execute the .py files. Just serve
> the .html,.css,.js files

Yet you need to let Travis CI know how to upload the results (HTML 
files) somewhere. That usually involves some kind of credentials.
You can secretly tell Travis the credentials, however somebody would be 
able to modify the Makefile (or anything else) to send the credentials 
to their webservice/e-mail/whatever.
That is in fact not possible, for exactly this reason: Travis CI builds 
from PRs don't see the "secret" stuff.

https://docs.travis-ci.com/user/environment-variables#defining-encrypted-variables-in-travisyml

-- 
Miro Hron?ok
--
Phone: +420777974800
IRC: mhroncok

From steve at pearwood.info  Sun Nov  4 17:38:36 2018
From: steve at pearwood.info (Steven D'Aprano)
Date: Mon, 5 Nov 2018 09:38:36 +1100
Subject: [Python-Dev] Get a running instance of the doc for a PR.
In-Reply-To: <261F41E1-7678-47CC-B40B-829F3ADB57BD@python.org>
References: <20181104133827.GA25586@xps>
 <010401d4745b$6fec9a90$4fc5cfb0$@sdamon.com>
 <26398c8f-170d-c468-b603-ea79ca8fdcc2@ganssle.io>
 <261F41E1-7678-47CC-B40B-829F3ADB57BD@python.org>
Message-ID: <20181104223836.GY3817@ando.pearwood.info>

On Sun, Nov 04, 2018 at 12:16:14PM -0500, Ned Deily wrote:

> On Nov 4, 2018, at 12:04, Paul Ganssle <paul at ganssle.io> wrote:
>
> > Some of the concerns about increasing the surface area I think are a 
> > bit overblown. I haven't seen any problems yet in the projects that 
> > do this,

You may or may not be right, but have you looked for problems or just 
assumed that because nobody has brought any to your attention, they 
don't exist?

"I have seen nothing" != "there is nothing to see".


> > and I don't think it lends itself to abuse particularly 
> > well. Considering that the rest of the CI suite lets you run 
> > arbitrary code on many platforms, I don't think it's particularly 
> > more dangerous to allow people to generate ephemeral static hosted 
> > web sites as well.
> 
> The rest of the CI suite does not let you publish things on the 
> python.org domain, unless I'm forgetting something; they're clearly 
> under a CI environment like Travis or AppVeyor or Azure.  That's 
> really my main concern.

Sorry Ned, I don't follow you here. It sounds like you're saying that 
you're fine with spam or abusive content being hosted in our name, so 
long as its hosted by somebody else, rather than by us (python.org) 
ourselves.

I trust I'm missing something, but I don't know what it is.


-- 
Steve

From steve at pearwood.info  Sun Nov  4 17:48:42 2018
From: steve at pearwood.info (Steven D'Aprano)
Date: Mon, 5 Nov 2018 09:48:42 +1100
Subject: [Python-Dev] Get a running instance of the doc for a PR.
In-Reply-To: <20181104160507.GF12103@xps>
References: <20181104133827.GA25586@xps>
 <203B5254-326E-43EC-A80D-4A8147791A9D@python.org>
 <20181104151239.GA14162@xps> <20181104155017.GX3817@ando.pearwood.info>
 <20181104160507.GF12103@xps>
Message-ID: <20181104224842.GZ3817@ando.pearwood.info>

On Sun, Nov 04, 2018 at 05:05:07PM +0100, Stephane Wirtel wrote:

> >If I am making doc patches, shouldn't I be doing that *before* I
> >submit the PR? How else will I know that my changes haven't broken the
> >docs?
>
> You can use the web interface of Github and just add/remove/modify a
> paragraph.

Does Github show a preview? If not, then my question still stands: how 
do I know my changes aren't broken?

If Github does show a preview, then couldn't the reviewer look at that 
too?


-- 
Steve

From paul at ganssle.io  Sun Nov  4 18:01:30 2018
From: paul at ganssle.io (Paul Ganssle)
Date: Sun, 4 Nov 2018 18:01:30 -0500
Subject: [Python-Dev] Get a running instance of the doc for a PR.
In-Reply-To: <20181104223836.GY3817@ando.pearwood.info>
References: <20181104133827.GA25586@xps>
 <010401d4745b$6fec9a90$4fc5cfb0$@sdamon.com>
 <26398c8f-170d-c468-b603-ea79ca8fdcc2@ganssle.io>
 <261F41E1-7678-47CC-B40B-829F3ADB57BD@python.org>
 <20181104223836.GY3817@ando.pearwood.info>
Message-ID: <156b2748-5a38-9cee-7700-b4891351a851@ganssle.io>


On 11/4/18 5:38 PM, Steven D'Aprano wrote:
> On Sun, Nov 04, 2018 at 12:16:14PM -0500, Ned Deily wrote:
>
>> On Nov 4, 2018, at 12:04, Paul Ganssle <paul at ganssle.io> wrote:
>>
>>> Some of the concerns about increasing the surface area I think are a 
>>> bit overblown. I haven't seen any problems yet in the projects that 
>>> do this,
> You may or may not be right, but have you looked for problems or just 
> assumed that because nobody has brought any to your attention, they 
> don't exist?
>
> "I have seen nothing" != "there is nothing to see".
>
I can only speak from my experience with setuptools, but I do look at
every setuptools PR and I've never seen anything even close to this.
That said, I have also never seen anyone using my Travis or Appveyor
instances to mine cryptocurrency, but I've been told that that happens.

In any case, I think the standard should not be "this never happens"
(otherwise you also can't run CI), but that it happens rarely enough
that it's not a major problem and that you can deal with it when it does
come up. Frankly, I think the much more likely target for these sorts of
attacks is small, mostly abandoned projects with very few followers. If
you post a spam site on some ephemeral domain via the CPython CI, it's
likely that hundreds of people will notice it just because it's a very
active project. You will be banned from the project for life and
probably reported to github nearly instantly. Likely you have much more
value for your time if you target some 1-star repo that set this up 2
years ago and is maintained by someone who hasn't committed to github in
over a year.

That said, big projects like CPython are probably more likely to attract
the troll version of this, where the point isn't to get away with
hosting some content or using the CI, but to annoy and disrupt the
project itself by wasting our resources chasing down spam or whatever. I
think if that isn't already happening with comment floods on the issue
tracker, GH threads and mailing lists, it's not especially /more/ likely
to happen because people can spin up a website with a PR.

>>> and I don't think it lends itself to abuse particularly 
>>> well. Considering that the rest of the CI suite lets you run 
>>> arbitrary code on many platforms, I don't think it's particularly 
>>> more dangerous to allow people to generate ephemeral static hosted 
>>> web sites as well.
>> The rest of the CI suite does not let you publish things on the 
>> python.org domain, unless I'm forgetting something; they're clearly 
>> under a CI environment like Travis or AppVeyor or Azure.  That's 
>> really my main concern.
> Sorry Ned, I don't follow you here. It sounds like you're saying that 
> you're fine with spam or abusive content being hosted in our name, so 
> long as its hosted by somebody else, rather than by us (python.org) 
> ourselves.
>
> I trust I'm missing something, but I don't know what it is.

I think there are two concerns - one is that the python.org domain is
generally (currently) used for official content. If people can put
arbitrary websites on there, presumably they can exploit whatever trust
people have put into this fact.

Another is that - and I am not a web expert here - I think that the
domain where content is hosted is used as a marker of trust between
different pages, and many applications will consider anything on
*.python.org to be first-party content from other *.python.org domains.?
I believe this is the reason why readthedocs moved all hosted
documentation from *.readthedocs.org to *.readthedocs.io. Similarly
user-submitted content on PyPI is usually hosted under the
pythonhosted.org domain, not pypi.org or pypi.python.org. You'll notice
that GH also hosts user content under a githubusercontent.org domain.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mail.python.org/pipermail/python-dev/attachments/20181104/2db51fa2/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 833 bytes
Desc: OpenPGP digital signature
URL: <http://mail.python.org/pipermail/python-dev/attachments/20181104/2db51fa2/attachment.sig>

From vstinner at redhat.com  Sun Nov  4 18:48:42 2018
From: vstinner at redhat.com (Victor Stinner)
Date: Mon, 5 Nov 2018 00:48:42 +0100
Subject: [Python-Dev] Get a running instance of the doc for a PR.
In-Reply-To: <20181104133827.GA25586@xps>
References: <20181104133827.GA25586@xps>
Message-ID: <CA+3bQGGYbCQir1XcAqVTYuX0bURi3hcP+Nyy=-Jr0wr-Xz9pDQ@mail.gmail.com>

OpenStack does that on review.openstack.org PRs. If I recall correctly, the
CI produces files which are online on a static web server. Nothing crazy.
And it works. Old files are removed, I don't know when exactly.

I don't think that it matters where the static files are hosted.

Victor

Le dimanche 4 novembre 2018, Stephane Wirtel <stephane at wirtel.be> a ?crit :
> Hi all,
>
> When we receive a PR about the documentation, I think that could be
> interesting if we could have a running instance of the doc on a sub
> domain of python.org.
>
> For example, pr-10000-doc.python.org or whatever, but by this way the
> reviewers could see the result online.
>
> The workflow would be like that:
>
> New PR -> build the doc (done by Travis) -> publish it to a server ->
> once published, the PR is notified by "doc is available at URL".
>
> Once merged -> we remove the doc and the link (hello bedevere).
>
> I am interested by this feature and if you also interested, tell me.
> I would like discuss with Julien Palard and Ernest W.  Durbin III for a
> solution as soon as possible.
>
> Have a nice day,
>
> St?phane
>
> --
> St?phane Wirtel - https://wirtel.be - @matrixise
> _______________________________________________
> Python-Dev mailing list
> Python-Dev at python.org
> https://mail.python.org/mailman/listinfo/python-dev
> Unsubscribe:
https://mail.python.org/mailman/options/python-dev/vstinner%40redhat.com
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mail.python.org/pipermail/python-dev/attachments/20181105/1fc1d192/attachment.html>

From sorin.sbarnea at gmail.com  Sun Nov  4 19:39:32 2018
From: sorin.sbarnea at gmail.com (Sorin Sbarnea)
Date: Mon, 5 Nov 2018 00:39:32 +0000
Subject: [Python-Dev] Get a running instance of the doc for a PR.
In-Reply-To: <CA+3bQGGYbCQir1XcAqVTYuX0bURi3hcP+Nyy=-Jr0wr-Xz9pDQ@mail.gmail.com>
References: <20181104133827.GA25586@xps>
 <CA+3bQGGYbCQir1XcAqVTYuX0bURi3hcP+Nyy=-Jr0wr-Xz9pDQ@mail.gmail.com>
Message-ID: <95112A17-AC0F-47F9-BC00-A431F02E2FA8@gmail.com>

I can confirm that this is what OpenStack does. Sometimes the build artifacts (logs, docs ...) are rotated in two weeks but this is more than enough to perform a review. If I remember well retention is based on disk space and not hardcoded to a number of days, which is great.

TBH, I don't really know how a human can check the docs if they cannot access them on a webserver.

I hope to see the same on python too, very useful.

> On 4 Nov 2018, at 23:48, Victor Stinner <vstinner at redhat.com> wrote:
> 
> OpenStack does that on review.openstack.org <http://review.openstack.org/> PRs. If I recall correctly, the CI produces files which are online on a static web server. Nothing crazy. And it works. Old files are removed, I don't know when exactly.
> 
> I don't think that it matters where the static files are hosted.
> 
> Victor
> 
> Le dimanche 4 novembre 2018, Stephane Wirtel <stephane at wirtel.be <mailto:stephane at wirtel.be>> a ?crit :
> > Hi all,
> >
> > When we receive a PR about the documentation, I think that could be
> > interesting if we could have a running instance of the doc on a sub
> > domain of python.org <http://python.org/>.
> >
> > For example, pr-10000-doc.python.org <http://pr-10000-doc.python.org/> or whatever, but by this way the
> > reviewers could see the result online.
> >
> > The workflow would be like that:
> >
> > New PR -> build the doc (done by Travis) -> publish it to a server ->
> > once published, the PR is notified by "doc is available at URL".
> >
> > Once merged -> we remove the doc and the link (hello bedevere).
> >
> > I am interested by this feature and if you also interested, tell me.
> > I would like discuss with Julien Palard and Ernest W.  Durbin III for a
> > solution as soon as possible.
> >
> > Have a nice day,
> >
> > St?phane
> >
> > --
> > St?phane Wirtel - https://wirtel.be <https://wirtel.be/> - @matrixise
> > _______________________________________________
> > Python-Dev mailing list
> > Python-Dev at python.org <mailto:Python-Dev at python.org>
> > https://mail.python.org/mailman/listinfo/python-dev <https://mail.python.org/mailman/listinfo/python-dev>
> > Unsubscribe: https://mail.python.org/mailman/options/python-dev/vstinner%40redhat.com <https://mail.python.org/mailman/options/python-dev/vstinner%40redhat.com>
> > _______________________________________________
> Python-Dev mailing list
> Python-Dev at python.org
> https://mail.python.org/mailman/listinfo/python-dev
> Unsubscribe: https://mail.python.org/mailman/options/python-dev/sorin.sbarnea%40gmail.com

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mail.python.org/pipermail/python-dev/attachments/20181105/b61f6192/attachment.html>

From nad at python.org  Sun Nov  4 21:11:49 2018
From: nad at python.org (Ned Deily)
Date: Sun, 4 Nov 2018 21:11:49 -0500
Subject: [Python-Dev] Get a running instance of the doc for a PR.
In-Reply-To: <95112A17-AC0F-47F9-BC00-A431F02E2FA8@gmail.com>
References: <20181104133827.GA25586@xps>
 <CA+3bQGGYbCQir1XcAqVTYuX0bURi3hcP+Nyy=-Jr0wr-Xz9pDQ@mail.gmail.com>
 <95112A17-AC0F-47F9-BC00-A431F02E2FA8@gmail.com>
Message-ID: <8064CA01-718F-4229-9772-96017B299476@python.org>

Not to belabor the point but:

On Nov 4, 2018, at 19:39, Sorin Sbarnea <sorin.sbarnea at gmail.com> wrote:
> TBH, I don't really know how a human can check the docs if they cannot access them on a webserver.

It's actually trivially easy with the Python doc set because the docs were designed to also be downloadable and usable off-line.  That is, the same files html, js, css, and other resources that get built and loaded onto the website can also be just browsed directly from a file system, like:

firefox Doc/build/html/index.html

or, say, using the Open File command in Safari or whatever.  No web server is needed.

The docsets for the heads of each of the active branches are built and packaged nightly and downloadable from python.org:

https://docs.python.org/3/download.html

Also, archive copies of the docset at the time of each release is downloadable from here:

https://www.python.org/doc/versions/

There are built using the same Doc/Makefile found in the cpython repo branches and the resulting Doc/build/html directory contains the docset for that snapshot of the repo with every file in the proper location for the webbrowser to load directly.

--
  Ned Deily
  nad at python.org -- []


From pierre.glaser at inria.fr  Mon Nov  5 06:30:39 2018
From: pierre.glaser at inria.fr (Pierre Glaser)
Date: Mon, 5 Nov 2018 12:30:39 +0100
Subject: [Python-Dev] PEP 574 -- Pickle protocol 5 with out-of-band data
In-Reply-To: <34eaf991-fb6c-c540-ea6d-e7b6267df34f@gmail.com>
References: <34eaf991-fb6c-c540-ea6d-e7b6267df34f@gmail.com>
Message-ID: <f25cec8d-6d63-caf5-d9b6-aab3af86ac32@inria.fr>

Hi All,
As part of our scikit-learn development and our effort to provide better 
parallelism for python, we rely heavily on dynamic classes and functions 
pickling. For this
usage we use cloudpickle, but it suffers from performance issues due to 
its pure python implementation. After long discussions with Olivier 
Grisel and Thomas
Moreau, we ended up agreeing on the fact that the best solution for this 
problem would be to add those functionalities to the _pickle.c module.
I am already quite familiar with the C/Python API, and can dedicate a 
lot of my time in the next couple months to make this happen.

Serhiy, from this thread 
(https://mail.python.org/pipermail/python-dev/2018-March/152509.html), 
it seems that you already started implementing local classes pickling.
I would be happy to use this work as a starting point and build from it. 
What do you think?

Regards,

Pierre


From pierre.glaser at inria.fr  Mon Nov  5 06:36:50 2018
From: pierre.glaser at inria.fr (Pierre Glaser)
Date: Mon, 5 Nov 2018 12:36:50 +0100
Subject: [Python-Dev] PEP 574 -- Pickle protocol 5 with out-of-band data
In-Reply-To: <34eaf991-fb6c-c540-ea6d-e7b6267df34f@gmail.com>
References: <34eaf991-fb6c-c540-ea6d-e7b6267df34f@gmail.com>
Message-ID: <80f765f2-850f-76c7-3ba1-3a5ca2c87701@inria.fr>

Hi All,
As part of our scikit-learn development and our effort to provide better 
parallelism for python, we rely heavily on dynamic classes and functions 
pickling. For this
usage we use cloudpickle, but it suffers from performance issues due to 
its pure python implementation. After long discussions with Olivier 
Grisel and Thomas
Moreau, we ended up agreeing on the fact that the best solution for this 
problem would be to add those functionalities to the _pickle.c module.
I am already quite familiar with the C/Python API, and can dedicate a 
lot of my time in the next couple months to make this happen.

Serhiy, from this thread 
(https://mail.python.org/pipermail/python-dev/2018-March/152509.html), 
it seems that you already started implementing local classes pickling.
I would be happy to use this work as a starting point and build from it. 
What do you think?

Regards,

Pierre


From vstinner at redhat.com  Tue Nov  6 10:09:09 2018
From: vstinner at redhat.com (Victor Stinner)
Date: Tue, 6 Nov 2018 16:09:09 +0100
Subject: [Python-Dev] What is the difference between Py_BUILD_CORE and
 Py_BUILD_CORE_BUILTIN?
Message-ID: <CA+3bQGFskgwBf-m5kL6EkP22+Z_51s4sPCcoH4=T2Wmfge=ZrQ@mail.gmail.com>

Hi,

I'm trying to cleanup the Python C API, especially strictly separate
the public C API, the stable C API (Py_LIMITED_API), and the internal
C API (Py_BUILD_CORE).

Move internal headers to Include/internal/ :
https://bugs.python.org/issue35081

Move !Py_LIMITED_API to Include/pycapi/:
https://bugs.python.org/issue35134

I tried to ensure that Py_BUILD_CORE is defined when including
pycore_xxx.h headers from Include/internal/, but the compilation of
the _json module fails. Modules/_json.c contains:

/* Core extension modules are built-in on some platforms (e.g. Windows). */
#ifdef Py_BUILD_CORE
#define Py_BUILD_CORE_BUILTIN
#undef Py_BUILD_CORE
#endif

I don't understand the difference between Py_BUILD_CORE and
Py_BUILD_CORE_BUILTIN defines. Do we need to have two different
defines? Can't we compile _json with Py_BUILD_CORE?

_json.c uses pycore_accu.h:

/*
 * A two-level accumulator of unicode objects that avoids both the overhead
 * of keeping a huge number of small separate objects, and the quadratic
 * behaviour of using a naive repeated concatenation scheme.
 */

Is it a problem of the visibility/scope of symbols in the python DLL on Windows?

Victor

From srinivasan.rns at gmail.com  Tue Nov  6 13:07:40 2018
From: srinivasan.rns at gmail.com (srinivasan)
Date: Tue, 6 Nov 2018 23:37:40 +0530
Subject: [Python-Dev] SyntaxError: can't assign to literal while using
 ""blkid -o export %s | grep 'TYPE' | cut -d"=" -f3" % (fs)" using
 subprocess module in Python
Message-ID: <CAFsTbWd8saSbGSBtfDc3=TssZwgsB=j6b==ct195gVkJH84EpA@mail.gmail.com>

Dear Python Experts Team,

As am newbie to python development, I am trying to use the below function
to get verify the filesystem type of the SD card parition using bash
command in python using subprocess module, I ma seeing the below Error
"SyntaxError: can't assign to literal"

*CODE:*
*====*

import helper
from os import path
import subprocess
import os
import otg_ni


class emmc(object):
    """
        emmc getters and setters
        info:
https://www.kernel.org/doc/Documentation/cpu-freq/user-guide.txt
    """

    def __init__(self):
        self._helper = helper.helper()
        self._otg_ni = otg_ni.otg_ni()


*def get_fstype_of_mounted_partition(self, fs):*
        """
            Get the filesystem type of the mounted partition.

            :partition_name : Partition path as string (e.g. /dev/mmcblk0p1)
            :return: filesystem type as string or None if not found
        """

*        cmd = "blkid -o export %s | grep 'TYPE' | cut -d"=" -f3" % (fs)*
        *return self._helper.execute_cmd_output_string(cmd)*



*def execute_cmd_output_string(self, cmd, enable_shell=False):*
        """
            Execute a command and return its output as a string.

            :param cmd: abs path of the command with arguments
            :param enable_shell : force the cmd to be run as shell script
            :return: a string.
        """

        try:
            result = subprocess.check_output(split(cmd),
                                             stderr=subprocess.STDOUT,
                                             shell=enable_shell)

        except subprocess.CalledProcessError as e:
            s = """While executing '{}' something went wrong.
                Return code == '{}'
                Return output:\n'{}'
                """.format(cmd, e.returncode, e.output, shell=enable_shell)
            raise AssertionError(s)

        return result.strip().decode("utf-8")
*if __name__ == "__main__":*
    m = emmc()
*    m.get_fstype_of_mounted_partition("/dev/mmcblk0p1")*
*Error:*
*======*

root:~/qa/test_library# python3 sd.py
  File "sd.py", line 99
*    cmd = "blkid -o export %s | grep 'TYPE' | cut -d"=" -f3" % (fs)*
*         ^*
*SyntaxError: can't assign to literal*
root:~/qa/test_library#

Kindly do the needful as early as possible, as am stuck with this issue
from past 2 days no clues yet, please redirect me to the correct forum if
this is not the right place for pasting python related queries

Many Thanks in advance,
Srini
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mail.python.org/pipermail/python-dev/attachments/20181106/5c4b2d58/attachment.html>

From ericsnowcurrently at gmail.com  Tue Nov  6 13:13:19 2018
From: ericsnowcurrently at gmail.com (Eric Snow)
Date: Tue, 6 Nov 2018 11:13:19 -0700
Subject: [Python-Dev] Rename Include/internals/ to Include/pycore/
In-Reply-To: <CA+3bQGHoS+uToYCa=fLtPzDLdBmDu+f8EU0EFOhwCfu92rh3tA@mail.gmail.com>
References: <CA+3bQGE7UriagGc_FYuM7ge5oGX+6+_w2c3HY1WDj8JY=6FuzQ@mail.gmail.com>
 <1540759207.1168671.1557524968.5CFA99F3@webmail.messagingengine.com>
 <20181102172238.u7ysgkpj2b7aids5@python.ca>
 <CA+3bQGHoS+uToYCa=fLtPzDLdBmDu+f8EU0EFOhwCfu92rh3tA@mail.gmail.com>
Message-ID: <CALFfu7Aea_oeXuTgdsT7thjLoiD+0PjJUSUeztzyJ9=ofwh2cQ@mail.gmail.com>

On Fri, Nov 2, 2018 at 1:02 PM Victor Stinner <vstinner at redhat.com> wrote:
>
> Le ven. 2 nov. 2018 ? 18:32, Neil Schemenauer <nas-python at arctrix.com> a ?crit :
> > A simple approach would be to introduce something like
> > Python-internal.h.  If you are a Python internal unit, you can
> > include both Python.h and Python-internal.h.  We could, over time,
> > split Python-iternal.h into smaller modular includes.
>
> Since this discussion, I already moved most Py_BUILD_CORE in
> Include/internal/. I added a lot of #include "pycore_xxx.h" in C
> files.
>
> I started to reach the limit with this PR which adds the
> pycore_object.h include to not less than 33 C files:
> https://github.com/python/cpython/pull/10272
>
> I rewrote this PR to avoid the need to modify 33 C files:
> https://github.com/python/cpython/pull/10276/files
>
> I added the following code to Python.h:
>
> #ifdef Py_BUILD_CORE
> /* bpo-35081: Automatically include pycore_object.h in Python.h, to avoid
> to have to add an explicit #include "pycore_object.h" to each C file. */
> # include "pycore_object.h"
> #endif
>
> I'm not sure of it's a temporary workaround or not :-) Maybe a
> Python-internal.h would be a better solution? We can identify the most
> common header files needed to access "Python internals" and put them
> in this "common" header file.
>
> For example, most C files using Python internals have to access
> _PyRuntime global variable (55 C files), so "pycore_state.h" is a good
> candidate.

FWIW, I'm still in favor of keeping the includes specific.  For me
personally it helps to narrow down dependencies, making the source
easier to follow.

> By the way, I don't understand the rationale to have _PyRuntime in
> pycore_state.h. IMHO pycore_state.h should only contain functions to
> get the Python thread and Python interpreter states. IMHO _PyRuntime
> is unrelated and should belong to a different header file, maybe
> pycore_runtime.h? I didn't do this change yet *because* I would have
> to modify the 55 files currently including it.

The runtime state isn't all that different from the thread state or
the interpreter state.  It's simply broader in scope, much like the
interpreter state is broader in scope than the thread state.  That's
why I put it where I did.

-eric

From rosuav at gmail.com  Tue Nov  6 13:15:21 2018
From: rosuav at gmail.com (Chris Angelico)
Date: Wed, 7 Nov 2018 05:15:21 +1100
Subject: [Python-Dev] SyntaxError: can't assign to literal while using
 ""blkid -o export %s | grep 'TYPE' | cut -d"=" -f3" % (fs)" using
 subprocess module in Python
In-Reply-To: <CAFsTbWd8saSbGSBtfDc3=TssZwgsB=j6b==ct195gVkJH84EpA@mail.gmail.com>
References: <CAFsTbWd8saSbGSBtfDc3=TssZwgsB=j6b==ct195gVkJH84EpA@mail.gmail.com>
Message-ID: <CAPTjJmr6TSX-jX03EC-O9cDPYiY-tF_p6pKBan3bnpoCQGQxoA@mail.gmail.com>

On Wed, Nov 7, 2018 at 5:11 AM srinivasan <srinivasan.rns at gmail.com> wrote:
> As am newbie to python development, I am trying to use the below function to get verify the filesystem type of the SD card parition using bash command in python using subprocess module, I ma seeing the below Error "SyntaxError: can't assign to literal"
>

This is more appropriate for python-list than for python-dev, which is
about the development OF Python. But your problem here is quite
simple:

>         cmd = "blkid -o export %s | grep 'TYPE' | cut -d"=" -f3" % (fs)

You're trying to use the same quotation mark inside the string and
outside it. That's not going to work. Try removing your inner quotes.

You may also want to consider using Python to do your searching and
cutting, rather than a shell pipeline. For more information on that,
ask on python-list; people will be very happy to help out.

ChrisA

From ericsnowcurrently at gmail.com  Tue Nov  6 13:19:17 2018
From: ericsnowcurrently at gmail.com (Eric Snow)
Date: Tue, 6 Nov 2018 11:19:17 -0700
Subject: [Python-Dev] What is the difference between Py_BUILD_CORE and
 Py_BUILD_CORE_BUILTIN?
In-Reply-To: <CA+3bQGFskgwBf-m5kL6EkP22+Z_51s4sPCcoH4=T2Wmfge=ZrQ@mail.gmail.com>
References: <CA+3bQGFskgwBf-m5kL6EkP22+Z_51s4sPCcoH4=T2Wmfge=ZrQ@mail.gmail.com>
Message-ID: <CALFfu7Ad63CzVeoSN2favRHJaZs20YUsmBbfRHp1Xbz9ANh9Mg@mail.gmail.com>

On Tue, Nov 6, 2018 at 8:09 AM Victor Stinner <vstinner at redhat.com> wrote:
> I don't understand the difference between Py_BUILD_CORE and
> Py_BUILD_CORE_BUILTIN defines. Do we need to have two different
> defines? Can't we compile _json with Py_BUILD_CORE?
>
> [snip]
>
> Is it a problem of the visibility/scope of symbols in the python DLL on Windows?

Yep.  I added Py_BUILD_CORE_BUILTIN as a workaround for building on
Windows.  For extension modules on Windows there's a conflict between
Py_BUILD_CORE and some of the Windows symbols that get defined.  My
Windows build knowledge is pretty limited so that's about as far as I
can go. :)  Steve might be able to give you more info.

-eric

From david at graniteweb.com  Tue Nov  6 13:33:59 2018
From: david at graniteweb.com (David Rock)
Date: Tue, 6 Nov 2018 12:33:59 -0600
Subject: [Python-Dev] [Tutor] SyntaxError: can't assign to literal while
 using ""blkid -o export %s | grep 'TYPE' | cut -d"=" -f3" % (fs)" using
 subprocess module in Python
In-Reply-To: <CAFsTbWd8saSbGSBtfDc3=TssZwgsB=j6b==ct195gVkJH84EpA@mail.gmail.com>
References: <CAFsTbWd8saSbGSBtfDc3=TssZwgsB=j6b==ct195gVkJH84EpA@mail.gmail.com>
Message-ID: <C5B8E015-27C4-44B1-94D1-4E9BE8B393BF@graniteweb.com>

> 
> *def get_fstype_of_mounted_partition(self, fs):*
>        """
>            Get the filesystem type of the mounted partition.
> 
>            :partition_name : Partition path as string (e.g. /dev/mmcblk0p1)
>            :return: filesystem type as string or None if not found
>        """
> 
> *        cmd = "blkid -o export %s | grep 'TYPE' | cut -d"=" -f3" % (fs)*
>        *return self._helper.execute_cmd_output_string(cmd)*
> 
> 
> 
> root:~/qa/test_library# python3 sd.py
>  File "sd.py", line 99
> *    cmd = "blkid -o export %s | grep 'TYPE' | cut -d"=" -f3" % (fs)*
> *         ^*
> *SyntaxError: can't assign to literal*
> root:~/qa/test_library#
> 

looking at
 cmd = "blkid -o export %s | grep 'TYPE' | cut -d"=" -f3" % (fs)*

It?s probably because you have ? characters that are inside ? characters and it can?t tell where the string ends. It looks like you are trying to do

cmd = "blkid -o export %s | grep 'TYPE' | cut -d?      =      " -f3" % (fs)*

which doesn?t make sense.  Try using triple quotes instead so it?s clear what string you are trying to use.

cmd = ?""blkid -o export %s | grep 'TYPE' | cut -d"=" -f3?"" % (fs)


? 
David Rock
david at graniteweb.com





From steve at pearwood.info  Tue Nov  6 17:25:51 2018
From: steve at pearwood.info (Steven D'Aprano)
Date: Wed, 7 Nov 2018 09:25:51 +1100
Subject: [Python-Dev] SyntaxError: can't assign to literal while using
 ""blkid -o export %s | grep 'TYPE' | cut -d"=" -f3" % (fs)" using
 subprocess module in Python
In-Reply-To: <CAFsTbWd8saSbGSBtfDc3=TssZwgsB=j6b==ct195gVkJH84EpA@mail.gmail.com>
References: <CAFsTbWd8saSbGSBtfDc3=TssZwgsB=j6b==ct195gVkJH84EpA@mail.gmail.com>
Message-ID: <20181106222551.GA4071@ando.pearwood.info>

This list is for the development *of* the Python interpreter, not 
support for *using* Python. If you signed up to this mailing list via 
the web, it clearly says:

    Do not post general Python questions to this list.

highlighted in a great big box in red. Was that not clear enough? What 
can we do to make that more clear?

You can try many other places for support, such as Stackoverflow, 
Reddit's /r/LearnPython, or the Python tutor mailing list:

https://mail.python.org/mailman/listinfo/tutor

but I expect most of them will tell you the same thing. You should try 
to give a *minimum* example of your problem, not your entire script. 
Start by reading here:

http://sscce.org/

As for your SyntaxError, the problem is line 99:

>   File "sd.py", line 99
> *    cmd = "blkid -o export %s | grep 'TYPE' | cut -d"=" -f3" % (fs)*
> *         ^*
> *SyntaxError: can't assign to literal*

The arrow ^ is pointing to the wrong equals sign, but simplifying the 
code and adding spaces makes it clear:

cmd = "spam" = "eggs"

gives the same error. Perhaps you mean == (equals) or perhaps the second 
assignment shouldn't be there at all?



-- 
Steve

